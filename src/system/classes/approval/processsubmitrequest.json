{
  "id": "Approval.processsubmitrequest",
  "nodeType": "class",
  "name": "ProcessSubmitRequest",
  "namespace": "Approval",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ProcessSubmitRequest",
    "textToLower": "processsubmitrequest",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ProcessSubmitRequest_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Use the ProcessSubmitRequest class to submit a record for approval.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ProcessSubmitRequest.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getobjectid()": {
      "id": "Approval.processsubmitrequest.getobjectid",
      "nodeType": "method",
      "name": "getObjectId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getObjectId",
        "textToLower": "getobjectid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getObjectId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getObjectId()",
      "simplifiedSignature": "getObjectId()",
      "datatype": {
        "id": "Approval.processsubmitrequest.getobjectid.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the ID of the record that has been submitted for approval. For example, it can return an account, contact, or custom object record.",
      "params": {}
    },
    "getprocessdefinitionnameorid()": {
      "id": "Approval.processsubmitrequest.getprocessdefinitionnameorid",
      "nodeType": "method",
      "name": "getProcessDefinitionNameOrId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getProcessDefinitionNameOrId",
        "textToLower": "getprocessdefinitionnameorid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getProcessDefinitionNameOrId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getProcessDefinitionNameOrId()",
      "simplifiedSignature": "getProcessDefinitionNameOrId()",
      "datatype": {
        "id": "Approval.processsubmitrequest.getprocessdefinitionnameorid.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the developer name or ID of the process definition.",
      "params": {}
    },
    "getskipentrycriteria()": {
      "id": "Approval.processsubmitrequest.getskipentrycriteria",
      "nodeType": "method",
      "name": "getSkipEntryCriteria",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSkipEntryCriteria",
        "textToLower": "getskipentrycriteria",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSkipEntryCriteria_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean getSkipEntryCriteria()",
      "simplifiedSignature": "getSkipEntryCriteria()",
      "datatype": {
        "id": "Approval.processsubmitrequest.getskipentrycriteria.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "If getProcessDefinitionNameOrId() returns a value other than null, getSkipEntryCriteria() determines whether to evaluate the entry criteria for the process (true) or not (false).",
      "params": {}
    },
    "getsubmitterid()": {
      "id": "Approval.processsubmitrequest.getsubmitterid",
      "nodeType": "method",
      "name": "getSubmitterId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSubmitterId",
        "textToLower": "getsubmitterid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSubmitterId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getSubmitterId()",
      "simplifiedSignature": "getSubmitterId()",
      "datatype": {
        "id": "Approval.processsubmitrequest.getsubmitterid.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the user ID of the submitter requesting the approval record. The user must be one of the allowed submitters in the process definition setup.",
      "params": {}
    },
    "setobjectid(string)": {
      "id": "Approval.processsubmitrequest.setobjectid",
      "nodeType": "method",
      "name": "setObjectId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setObjectId",
        "textToLower": "setobjectid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setObjectId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setObjectId(String recordId)",
      "simplifiedSignature": "setObjectId(String)",
      "datatype": {
        "id": "Approval.processsubmitrequest.setobjectid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the ID of the record to be submitted for approval. For example, it can specify an account, contact, or custom object record.",
      "params": {
        "recordId": {
          "id": "Approval.processsubmitrequest.setobjectid.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "Approval.processsubmitrequest.setobjectid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setprocessdefinitionnameorid(string)": {
      "id": "Approval.processsubmitrequest.setprocessdefinitionnameorid",
      "nodeType": "method",
      "name": "setProcessDefinitionNameOrId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setProcessDefinitionNameOrId",
        "textToLower": "setprocessdefinitionnameorid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setProcessDefinitionNameOrId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setProcessDefinitionNameOrId(String nameOrId)",
      "simplifiedSignature": "setProcessDefinitionNameOrId(String)",
      "datatype": {
        "id": "Approval.processsubmitrequest.setprocessdefinitionnameorid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the developer name or ID of the process definition to be evaluated.",
      "params": {
        "nameOrId": {
          "id": "Approval.processsubmitrequest.setprocessdefinitionnameorid.nameorid",
          "type": "var",
          "name": "nameOrId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "nameOrId",
            "textToLower": "nameorid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_nameOrId_-1:0"
          },
          "signature": "String nameOrId",
          "datatype": {
            "id": "Approval.processsubmitrequest.setprocessdefinitionnameorid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setskipentrycriteria(boolean)": {
      "id": "Approval.processsubmitrequest.setskipentrycriteria",
      "nodeType": "method",
      "name": "setSkipEntryCriteria",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setSkipEntryCriteria",
        "textToLower": "setskipentrycriteria",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setSkipEntryCriteria_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setSkipEntryCriteria(Boolean skipEntryCriteria)",
      "simplifiedSignature": "setSkipEntryCriteria(Boolean)",
      "datatype": {
        "id": "Approval.processsubmitrequest.setskipentrycriteria.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "If the process definition name or ID is not null, setSkipEntryCriteria() determines whether to evaluate the entry criteria for the process (true) or not (false).",
      "params": {
        "skipEntryCriteria": {
          "id": "Approval.processsubmitrequest.setskipentrycriteria.skipentrycriteria",
          "type": "var",
          "name": "skipEntryCriteria",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "skipEntryCriteria",
            "textToLower": "skipentrycriteria",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_skipEntryCriteria_-1:0"
          },
          "signature": "Boolean skipEntryCriteria",
          "datatype": {
            "id": "Approval.processsubmitrequest.setskipentrycriteria.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "setsubmitterid(string)": {
      "id": "Approval.processsubmitrequest.setsubmitterid",
      "nodeType": "method",
      "name": "setSubmitterId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setSubmitterId",
        "textToLower": "setsubmitterid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setSubmitterId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setSubmitterId(String userID)",
      "simplifiedSignature": "setSubmitterId(String)",
      "datatype": {
        "id": "Approval.processsubmitrequest.setsubmitterid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the user ID of the submitter requesting the approval record. The user must be one of the allowed submitters in the process definition setup. If you don’t set a submitter ID, the process uses the current user as the submitter.",
      "params": {
        "userID": {
          "id": "Approval.processsubmitrequest.setsubmitterid.userid",
          "type": "var",
          "name": "userID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userID",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userID_-1:0"
          },
          "signature": "String userID",
          "datatype": {
            "id": "Approval.processsubmitrequest.setsubmitterid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}