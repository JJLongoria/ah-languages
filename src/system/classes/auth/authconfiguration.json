{
  "id": "Auth.authconfiguration",
  "nodeType": "class",
  "name": "AuthConfiguration",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "AuthConfiguration",
    "textToLower": "authconfiguration",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_AuthConfiguration_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for configuring settings for users to log in to a Salesforce org using their authentication provider credentials instead of their Salesforce credentials. The authentication provider can be any authentication provider that supports the OpenID Connect protocol, such as Google, Facebook, or Twitter. Users log in to either a community subdomain of the force.com domain (https://subdomain.force.com) or a Salesforce subdomain created with My Domain (https://subdomain.my.salesforce.com).",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_AuthConfiguration.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getallowinternaluserloginenabled()": {
      "id": "Auth.authconfiguration.method.getallowinternaluserloginenabled()",
      "nodeType": "method",
      "name": "getAllowInternalUserLoginEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAllowInternalUserLoginEnabled",
        "textToLower": "getallowinternaluserloginenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAllowInternalUserLoginEnabled_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 1,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean getAllowInternalUserLoginEnabled()",
      "overrideSignature": "public override Boolean getAllowInternalUserLoginEnabled()",
      "simplifiedSignature": "getAllowInternalUserLoginEnabled()",
      "datatype": {
        "id": "Auth.authconfiguration.getallowinternaluserloginenabled.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Auth.authconfiguration.getallowinternaluserloginenabled",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Indicates whether the community allows internal users to log in using the community login page. To enable, admins configure the setting Allow internal users to log in directly to the community on the Login &amp; Registration page in Community Workspaces. Itâ€™s disabled by default.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getauthconfig()": {
      "id": "Auth.authconfiguration.method.getauthconfig()",
      "nodeType": "method",
      "name": "getAuthConfig",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAuthConfig",
        "textToLower": "getauthconfig",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAuthConfig_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 2,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public AuthConfig getAuthConfig()",
      "overrideSignature": "public override AuthConfig getAuthConfig()",
      "simplifiedSignature": "getAuthConfig()",
      "datatype": {
        "id": "Auth.authconfiguration.getauthconfig.datatype.AuthConfig",
        "nodeType": "datatype",
        "name": "AuthConfig",
        "startToken": {
          "type": "datatype.custom.class",
          "text": "AuthConfig",
          "textToLower": "authconfig",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 17
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_AuthConfig_0:7"
        },
        "parentId": "Auth.authconfiguration.getauthconfig",
        "order": 0,
        "memberOrder": 0,
        "type": "AuthConfig"
      },
      "description": "Returns the AuthConfig sObject, which represents the authentication options for a community or Salesforce My Domain subdomain.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getauthconfigproviders()": {
      "id": "Auth.authconfiguration.method.getauthconfigproviders()",
      "nodeType": "method",
      "name": "getAuthConfigProviders",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAuthConfigProviders",
        "textToLower": "getauthconfigproviders",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAuthConfigProviders_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 3,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public List<AuthConfigProviders> getAuthConfigProviders()",
      "overrideSignature": "public override List<AuthConfigProviders> getAuthConfigProviders()",
      "simplifiedSignature": "getAuthConfigProviders()",
      "datatype": {
        "id": "Auth.authconfiguration.getauthconfigproviders.datatype.List<AuthConfigProviders>",
        "nodeType": "datatype",
        "name": "List<AuthConfigProviders>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:7"
        },
        "parentId": "Auth.authconfiguration.getauthconfigproviders",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "Auth.authconfiguration.getauthconfigproviders.datatype.List<AuthConfigProviders>.value.AuthConfigProviders",
          "nodeType": "datatype",
          "name": "AuthConfigProviders",
          "startToken": {
            "type": "datatype.custom.class",
            "text": "AuthConfigProviders",
            "textToLower": "authconfigproviders",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 12
              },
              "end": {
                "line": 0,
                "character": 31
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_AuthConfigProviders_0:12"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "AuthConfigProviders"
        }
      },
      "description": "Returns the list of authentication providers configured for a community or Salesforce My Domain subdomain.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getauthproviders()": {
      "id": "Auth.authconfiguration.method.getauthproviders()",
      "nodeType": "method",
      "name": "getAuthProviders",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAuthProviders",
        "textToLower": "getauthproviders",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAuthProviders_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 4,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public List<AuthProvider> getAuthProviders()",
      "overrideSignature": "public override List<AuthProvider> getAuthProviders()",
      "simplifiedSignature": "getAuthProviders()",
      "datatype": {
        "id": "Auth.authconfiguration.getauthproviders.datatype.List<AuthProvider>",
        "nodeType": "datatype",
        "name": "List<AuthProvider>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:7"
        },
        "parentId": "Auth.authconfiguration.getauthproviders",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "Auth.authconfiguration.getauthproviders.datatype.List<AuthProvider>.value.AuthProvider",
          "nodeType": "datatype",
          "name": "AuthProvider",
          "startToken": {
            "type": "datatype.custom.class",
            "text": "AuthProvider",
            "textToLower": "authprovider",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 12
              },
              "end": {
                "line": 0,
                "character": 24
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_AuthProvider_0:12"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "AuthProvider"
        }
      },
      "description": "Returns the list of authentication providers available for a community or Salesforce My Domain subdomain.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getauthproviderssourl(string,string,string)": {
      "id": "Auth.authconfiguration.method.getauthproviderssourl(string,string,string)",
      "nodeType": "method",
      "name": "getAuthProviderSsoUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAuthProviderSsoUrl",
        "textToLower": "getauthproviderssourl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAuthProviderSsoUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 5,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static String getAuthProviderSsoUrl(String communityUrl, String startUrl, String developerName)",
      "overrideSignature": "public static override String getAuthProviderSsoUrl(String communityUrl, String startUrl, String developerName)",
      "simplifiedSignature": "getAuthProviderSsoUrl(String,String,String)",
      "datatype": {
        "id": "Auth.authconfiguration.getauthproviderssourl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:14"
        },
        "parentId": "Auth.authconfiguration.getauthproviderssourl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the single sign-on URL for a community or Salesforce My Domain subdomain.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {
        "communityurl": {
          "id": "Auth.authconfiguration.method.getauthproviderssourl(string,string,string).varParam.communityurl",
          "nodeType": "variable",
          "name": "communityUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityUrl",
            "textToLower": "communityurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityUrl_0:50"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityUrl",
            "textToLower": "communityurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityUrl_0:50"
          },
          "parentId": "Auth.authconfiguration.method.getauthproviderssourl(string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authconfiguration.getauthproviderssourl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 43
                },
                "end": {
                  "line": 0,
                  "character": 49
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:43"
            },
            "parentId": "Auth.authconfiguration.getauthproviderssourl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "starturl": {
          "id": "Auth.authconfiguration.method.getauthproviderssourl(string,string,string).varParam.starturl",
          "nodeType": "variable",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 79
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:71"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 79
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:71"
          },
          "parentId": "Auth.authconfiguration.method.getauthproviderssourl(string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authconfiguration.getauthproviderssourl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 64
                },
                "end": {
                  "line": 0,
                  "character": 70
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:64"
            },
            "parentId": "Auth.authconfiguration.getauthproviderssourl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "developername": {
          "id": "Auth.authconfiguration.method.getauthproviderssourl(string,string,string).varParam.developername",
          "nodeType": "variable",
          "name": "developerName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "developerName",
            "textToLower": "developername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 101
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_developerName_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "developerName",
            "textToLower": "developername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 101
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_developerName_0:88"
          },
          "parentId": "Auth.authconfiguration.method.getauthproviderssourl(string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "Auth.authconfiguration.getauthproviderssourl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "Auth.authconfiguration.getauthproviderssourl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The URL for the community or My Domain subdomain. If not null and not specified as an empty string, you get the URL for a community. If null or specified as an empty string, you get the URL for a custom domain. The page that users see after logging in to the community or My Domain subdomain. The unique name of the authentication provider.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getbackgroundcolor()": {
      "id": "Auth.authconfiguration.method.getbackgroundcolor()",
      "nodeType": "method",
      "name": "getBackgroundColor",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBackgroundColor",
        "textToLower": "getbackgroundcolor",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBackgroundColor_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 6,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getBackgroundColor()",
      "overrideSignature": "public override String getBackgroundColor()",
      "simplifiedSignature": "getBackgroundColor()",
      "datatype": {
        "id": "Auth.authconfiguration.getbackgroundcolor.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getbackgroundcolor",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the color for the background of the login page for a community.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getcertificateloginenabled(string)": {
      "id": "Auth.authconfiguration.method.getcertificateloginenabled(string)",
      "nodeType": "method",
      "name": "getCertificateLoginEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCertificateLoginEnabled",
        "textToLower": "getcertificateloginenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCertificateLoginEnabled_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 7,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean getCertificateLoginEnabled(String domainUrl)",
      "overrideSignature": "public override Boolean getCertificateLoginEnabled(String domainUrl)",
      "simplifiedSignature": "getCertificateLoginEnabled(String)",
      "datatype": {
        "id": "Auth.authconfiguration.getcertificateloginenabled.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Auth.authconfiguration.getcertificateloginenabled",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if certificate-based authentication is enabled for the My Domain URL.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {
        "domainurl": {
          "id": "Auth.authconfiguration.method.getcertificateloginenabled(string).varParam.domainurl",
          "nodeType": "variable",
          "name": "domainUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "domainUrl",
            "textToLower": "domainurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 58
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_domainUrl_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "domainUrl",
            "textToLower": "domainurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 58
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_domainUrl_0:49"
          },
          "parentId": "Auth.authconfiguration.method.getcertificateloginenabled(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authconfiguration.getcertificateloginenabled.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 42
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:42"
            },
            "parentId": "Auth.authconfiguration.getcertificateloginenabled",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The My Domain URL that is being checked for certificate-based authentication.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getcertificateloginurl(string,string)": {
      "id": "Auth.authconfiguration.method.getcertificateloginurl(string,string)",
      "nodeType": "method",
      "name": "getCertificateLoginUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCertificateLoginUrl",
        "textToLower": "getcertificateloginurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCertificateLoginUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 8,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static String getCertificateLoginUrl(String domainUrl, String startUrl)",
      "overrideSignature": "public static override String getCertificateLoginUrl(String domainUrl, String startUrl)",
      "simplifiedSignature": "getCertificateLoginUrl(String,String)",
      "datatype": {
        "id": "Auth.authconfiguration.getcertificateloginurl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:14"
        },
        "parentId": "Auth.authconfiguration.getcertificateloginurl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the certificate-based authentication endpoint for the My Domain URL if the org has certificate-based authentication enabled.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {
        "domainurl": {
          "id": "Auth.authconfiguration.method.getcertificateloginurl(string,string).varParam.domainurl",
          "nodeType": "variable",
          "name": "domainUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "domainUrl",
            "textToLower": "domainurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_domainUrl_0:51"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "domainUrl",
            "textToLower": "domainurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_domainUrl_0:51"
          },
          "parentId": "Auth.authconfiguration.method.getcertificateloginurl(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authconfiguration.getcertificateloginurl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 44
                },
                "end": {
                  "line": 0,
                  "character": 50
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:44"
            },
            "parentId": "Auth.authconfiguration.getcertificateloginurl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "starturl": {
          "id": "Auth.authconfiguration.method.getcertificateloginurl(string,string).varParam.starturl",
          "nodeType": "variable",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:69"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:69"
          },
          "parentId": "Auth.authconfiguration.method.getcertificateloginurl(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authconfiguration.getcertificateloginurl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 62
                },
                "end": {
                  "line": 0,
                  "character": 68
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:62"
            },
            "parentId": "Auth.authconfiguration.getcertificateloginurl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The My Domain URL being checked for its certificate-based authentication endpoint . The page that the user is directed to after logging in to the My Domain with certificate-based authentication.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getdefaultprofileforregistration()": {
      "id": "Auth.authconfiguration.method.getdefaultprofileforregistration()",
      "nodeType": "method",
      "name": "getDefaultProfileForRegistration",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDefaultProfileForRegistration",
        "textToLower": "getdefaultprofileforregistration",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDefaultProfileForRegistration_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 9,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getDefaultProfileForRegistration()",
      "overrideSignature": "public override String getDefaultProfileForRegistration()",
      "simplifiedSignature": "getDefaultProfileForRegistration()",
      "datatype": {
        "id": "Auth.authconfiguration.getdefaultprofileforregistration.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getdefaultprofileforregistration",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the profile ID assigned to new community users.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getfootertext()": {
      "id": "Auth.authconfiguration.method.getfootertext()",
      "nodeType": "method",
      "name": "getFooterText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFooterText",
        "textToLower": "getfootertext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFooterText_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 10,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getFooterText()",
      "overrideSignature": "public override String getFooterText()",
      "simplifiedSignature": "getFooterText()",
      "datatype": {
        "id": "Auth.authconfiguration.getfootertext.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getfootertext",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the text at the bottom of the login page for a community.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getforgotpasswordurl()": {
      "id": "Auth.authconfiguration.method.getforgotpasswordurl()",
      "nodeType": "method",
      "name": "getForgotPasswordUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getForgotPasswordUrl",
        "textToLower": "getforgotpasswordurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getForgotPasswordUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 11,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getForgotPasswordUrl()",
      "overrideSignature": "public override String getForgotPasswordUrl()",
      "simplifiedSignature": "getForgotPasswordUrl()",
      "datatype": {
        "id": "Auth.authconfiguration.getforgotpasswordurl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getforgotpasswordurl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the URL for the standard or custom Forgot Password page that is specified for a community or portal by the administrator.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getlogourl()": {
      "id": "Auth.authconfiguration.method.getlogourl()",
      "nodeType": "method",
      "name": "getLogoUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLogoUrl",
        "textToLower": "getlogourl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLogoUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 12,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getLogoUrl()",
      "overrideSignature": "public override String getLogoUrl()",
      "simplifiedSignature": "getLogoUrl()",
      "datatype": {
        "id": "Auth.authconfiguration.getlogourl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getlogourl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the location of the icon image at the bottom of the login page for a community.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getloginrightframeurl()": {
      "id": "Auth.authconfiguration.method.getloginrightframeurl()",
      "nodeType": "method",
      "name": "getLoginRightFrameUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRightFrameUrl",
        "textToLower": "getrightframeurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRightFrameUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 13,
      "memberOrder": 15,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getLoginRightFrameUrl()",
      "overrideSignature": "public override String getLoginRightFrameUrl()",
      "simplifiedSignature": "getLoginRightFrameUrl()",
      "datatype": {
        "id": "Auth.authconfiguration.getrightframeurl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getrightframeurl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the URL for the right-frame content to display on the right side of the community login page. The admin supplies the URL.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getsamlproviders()": {
      "id": "Auth.authconfiguration.method.getsamlproviders()",
      "nodeType": "method",
      "name": "getSamlProviders",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSamlProviders",
        "textToLower": "getsamlproviders",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSamlProviders_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 14,
      "memberOrder": 16,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public List<SamlSsoConfig> getSamlProviders()",
      "overrideSignature": "public override List<SamlSsoConfig> getSamlProviders()",
      "simplifiedSignature": "getSamlProviders()",
      "datatype": {
        "id": "Auth.authconfiguration.getsamlproviders.datatype.List<SamlSsoConfig>",
        "nodeType": "datatype",
        "name": "List<SamlSsoConfig>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:7"
        },
        "parentId": "Auth.authconfiguration.getsamlproviders",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "Auth.authconfiguration.getsamlproviders.datatype.List<SamlSsoConfig>.value.SamlSsoConfig",
          "nodeType": "datatype",
          "name": "SamlSsoConfig",
          "startToken": {
            "type": "datatype.custom.class",
            "text": "SamlSsoConfig",
            "textToLower": "samlssoconfig",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 12
              },
              "end": {
                "line": 0,
                "character": 25
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_SamlSsoConfig_0:12"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "SamlSsoConfig"
        }
      },
      "description": "Returns the list of SAML-based authentication providers available for a community or Salesforce My Domain subdomain.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getsamlssourl(string,string,string)": {
      "id": "Auth.authconfiguration.method.getsamlssourl(string,string,string)",
      "nodeType": "method",
      "name": "getSamlSsoUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSamlSsoUrl",
        "textToLower": "getsamlssourl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSamlSsoUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 15,
      "memberOrder": 17,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static String getSamlSsoUrl(String communityUrl, String startURL, String samlId)",
      "overrideSignature": "public static override String getSamlSsoUrl(String communityUrl, String startURL, String samlId)",
      "simplifiedSignature": "getSamlSsoUrl(String,String,String)",
      "datatype": {
        "id": "Auth.authconfiguration.getsamlssourl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:14"
        },
        "parentId": "Auth.authconfiguration.getsamlssourl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the single sign-on URL for a community or Salesforce My Domain subdomain.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {
        "communityurl": {
          "id": "Auth.authconfiguration.method.getsamlssourl(string,string,string).varParam.communityurl",
          "nodeType": "variable",
          "name": "communityUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityUrl",
            "textToLower": "communityurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 42
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityUrl_0:42"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityUrl",
            "textToLower": "communityurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 42
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityUrl_0:42"
          },
          "parentId": "Auth.authconfiguration.method.getsamlssourl(string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authconfiguration.getsamlssourl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 35
                },
                "end": {
                  "line": 0,
                  "character": 41
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:35"
            },
            "parentId": "Auth.authconfiguration.getsamlssourl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "starturl": {
          "id": "Auth.authconfiguration.method.getsamlssourl(string,string,string).varParam.starturl",
          "nodeType": "variable",
          "name": "startURL",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startURL",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 63
              },
              "end": {
                "line": 0,
                "character": 71
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startURL_0:63"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startURL",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 63
              },
              "end": {
                "line": 0,
                "character": 71
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startURL_0:63"
          },
          "parentId": "Auth.authconfiguration.method.getsamlssourl(string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authconfiguration.getsamlssourl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 56
                },
                "end": {
                  "line": 0,
                  "character": 62
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:56"
            },
            "parentId": "Auth.authconfiguration.getsamlssourl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "samlid": {
          "id": "Auth.authconfiguration.method.getsamlssourl(string,string,string).varParam.samlid",
          "nodeType": "variable",
          "name": "samlId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "samlId",
            "textToLower": "samlid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 80
              },
              "end": {
                "line": 0,
                "character": 86
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_samlId_0:80"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "samlId",
            "textToLower": "samlid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 80
              },
              "end": {
                "line": 0,
                "character": 86
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_samlId_0:80"
          },
          "parentId": "Auth.authconfiguration.method.getsamlssourl(string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "Auth.authconfiguration.getsamlssourl.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 73
                },
                "end": {
                  "line": 0,
                  "character": 79
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:73"
            },
            "parentId": "Auth.authconfiguration.getsamlssourl",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The URL for the community or My Domain subdomain. If not null and not specified as an empty string, you get the URL for a community. If null or specified as an empty string, you get the URL for a My Domain subdomain. The page users see after successfully logging in to the community or My Domain subdomain The unique identifier of the SamlSsoConfig standard object for the community or My Domain subdomain",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getselfregistrationenabled()": {
      "id": "Auth.authconfiguration.method.getselfregistrationenabled()",
      "nodeType": "method",
      "name": "getSelfRegistrationEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSelfRegistrationEnabled",
        "textToLower": "getselfregistrationenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSelfRegistrationEnabled_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 16,
      "memberOrder": 18,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean getSelfRegistrationEnabled()",
      "overrideSignature": "public override Boolean getSelfRegistrationEnabled()",
      "simplifiedSignature": "getSelfRegistrationEnabled()",
      "datatype": {
        "id": "Auth.authconfiguration.getselfregistrationenabled.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Auth.authconfiguration.getselfregistrationenabled",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Indicates whether the current community allows new users to create their own account by filling out a registration form.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getselfregistrationurl()": {
      "id": "Auth.authconfiguration.method.getselfregistrationurl()",
      "nodeType": "method",
      "name": "getSelfRegistrationUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSelfRegistrationUrl",
        "textToLower": "getselfregistrationurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSelfRegistrationUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 17,
      "memberOrder": 19,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getSelfRegistrationUrl()",
      "overrideSignature": "public override String getSelfRegistrationUrl()",
      "simplifiedSignature": "getSelfRegistrationUrl()",
      "datatype": {
        "id": "Auth.authconfiguration.getselfregistrationurl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getselfregistrationurl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the location of the self-registration page for new users to sign up for an account with a community.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getstarturl()": {
      "id": "Auth.authconfiguration.method.getstarturl()",
      "nodeType": "method",
      "name": "getStartUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getStartUrl",
        "textToLower": "getstarturl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getStartUrl_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 18,
      "memberOrder": 20,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getStartUrl()",
      "overrideSignature": "public override String getStartUrl()",
      "simplifiedSignature": "getStartUrl()",
      "datatype": {
        "id": "Auth.authconfiguration.getstarturl.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authconfiguration.getstarturl",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the start page of a community or Salesforce My Domain subdomain. This URL is the first page that users see when they log in.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getusernamepasswordenabled()": {
      "id": "Auth.authconfiguration.method.getusernamepasswordenabled()",
      "nodeType": "method",
      "name": "getUsernamePasswordEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUsernamePasswordEnabled",
        "textToLower": "getusernamepasswordenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUsernamePasswordEnabled_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 19,
      "memberOrder": 21,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean getUsernamePasswordEnabled()",
      "overrideSignature": "public override Boolean getUsernamePasswordEnabled()",
      "simplifiedSignature": "getUsernamePasswordEnabled()",
      "datatype": {
        "id": "Auth.authconfiguration.getusernamepasswordenabled.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Auth.authconfiguration.getusernamepasswordenabled",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Indicates whether the current community is set to display a login form asking for a username and password. You can configure the community not to request a username and password if it is for unauthenticated users or users logging in with a third-party authentication provider.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iscommunityusingsiteascontainer()": {
      "id": "Auth.authconfiguration.method.iscommunityusingsiteascontainer()",
      "nodeType": "method",
      "name": "isCommunityUsingSiteAsContainer",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCommunityUsingSiteAsContainer",
        "textToLower": "iscommunityusingsiteascontainer",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCommunityUsingSiteAsContainer_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 20,
      "memberOrder": 22,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isCommunityUsingSiteAsContainer()",
      "overrideSignature": "public override Boolean isCommunityUsingSiteAsContainer()",
      "simplifiedSignature": "isCommunityUsingSiteAsContainer()",
      "datatype": {
        "id": "Auth.authconfiguration.iscommunityusingsiteascontainer.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Auth.authconfiguration.iscommunityusingsiteascontainer",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the community uses Site.com pages; otherwise, returns false.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {
    "authconfiguration(string,string)": {
      "id": "Auth.authconfiguration.method.authconfiguration(string,string)",
      "nodeType": "constructor",
      "name": "AuthConfiguration",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "AuthConfiguration",
        "textToLower": "authconfiguration",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_AuthConfiguration_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public AuthConfiguration(String communityOrCustomUrl, String startUrl)",
      "overrideSignature": "public override AuthConfiguration(String communityOrCustomUrl, String startUrl)",
      "simplifiedSignature": "AuthConfiguration(String,String)",
      "description": "Creates an instance of the AuthConfiguration class using the specified URL for a community or a My Domain subdomain and the start URL for authenticated users.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {
        "communityorcustomurl": {
          "id": "Auth.authconfiguration.method.authconfiguration(string,string).varParam.communityorcustomurl",
          "nodeType": "variable",
          "name": "communityOrCustomUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityOrCustomUrl",
            "textToLower": "communityorcustomurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityOrCustomUrl_0:32"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityOrCustomUrl",
            "textToLower": "communityorcustomurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityOrCustomUrl_0:32"
          },
          "parentId": "Auth.authconfiguration.method.authconfiguration(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authconfiguration.authconfiguration.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 25
                },
                "end": {
                  "line": 0,
                  "character": 31
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:25"
            },
            "parentId": "Auth.authconfiguration.authconfiguration",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "starturl": {
          "id": "Auth.authconfiguration.method.authconfiguration(string,string).varParam.starturl",
          "nodeType": "variable",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:61"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:61"
          },
          "parentId": "Auth.authconfiguration.method.authconfiguration(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authconfiguration.authconfiguration.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 54
                },
                "end": {
                  "line": 0,
                  "character": 60
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:54"
            },
            "parentId": "Auth.authconfiguration.authconfiguration",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The URL for the domain, which can be a Salesforce subdomain created with My Domain (my.salesforce.com) or a subdomain of a community (force.com). The page users see after successfully logging in to the community or My Domain subdomain.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "authconfiguration(id,string)": {
      "id": "Auth.authconfiguration.method.authconfiguration(id,string)",
      "nodeType": "constructor",
      "name": "AuthConfiguration",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "AuthConfiguration",
        "textToLower": "authconfiguration",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_AuthConfiguration_-1:0"
      },
      "parentId": "Auth.authconfiguration",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public AuthConfiguration(Id networkId, String startUrl)",
      "overrideSignature": "public override AuthConfiguration(Id networkId, String startUrl)",
      "simplifiedSignature": "AuthConfiguration(Id,String)",
      "description": "Creates an instance of the AuthConfiguration class using the specified community ID and authenticated-user starting URL.",
      "parentName": "AuthConfiguration",
      "variables": {},
      "params": {
        "networkid": {
          "id": "Auth.authconfiguration.method.authconfiguration(id,string).varParam.networkid",
          "nodeType": "variable",
          "name": "networkId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "networkId",
            "textToLower": "networkid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 37
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_networkId_0:28"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "networkId",
            "textToLower": "networkid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 37
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_networkId_0:28"
          },
          "parentId": "Auth.authconfiguration.method.authconfiguration(id,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authconfiguration.authconfiguration.datatype.Id",
            "nodeType": "datatype",
            "name": "Id",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Id",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 25
                },
                "end": {
                  "line": 0,
                  "character": 27
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Id_0:25"
            },
            "parentId": "Auth.authconfiguration.authconfiguration",
            "order": 0,
            "memberOrder": 0,
            "type": "Id"
          },
          "scope": null
        },
        "starturl": {
          "id": "Auth.authconfiguration.method.authconfiguration(id,string).varParam.starturl",
          "nodeType": "variable",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:46"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:46"
          },
          "parentId": "Auth.authconfiguration.method.authconfiguration(id,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authconfiguration.authconfiguration.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 39
                },
                "end": {
                  "line": 0,
                  "character": 45
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:39"
            },
            "parentId": "Auth.authconfiguration.authconfiguration",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The ID of the community. The page users see after successfully logging in to the community.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 22,
  "queries": []
}