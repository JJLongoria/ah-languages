{
  "id": "Auth.authproviderplugin",
  "nodeType": "interface",
  "name": "AuthProviderPlugin",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "AuthProviderPlugin",
    "textToLower": "authproviderplugin",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_AuthProviderPlugin_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "This interface is deprecated. For new development, use the abstract class Auth.AuthProviderPluginClass to create a custom OAuth-based authentication provider plug-in for single sign-on in to Salesforce.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_interface_Auth_AuthProviderPlugin.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getcustommetadatatype()": {
      "id": "Auth.authproviderplugin.method.getcustommetadatatype()",
      "nodeType": "method",
      "name": "getCustomMetadataType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCustomMetadataType",
        "textToLower": "getcustommetadatatype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCustomMetadataType_-1:0"
      },
      "parentId": "Auth.authproviderplugin",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getCustomMetadataType()",
      "overrideSignature": "public override String getCustomMetadataType()",
      "simplifiedSignature": "getCustomMetadataType()",
      "datatype": {
        "id": "Auth.authproviderplugin.getcustommetadatatype.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.authproviderplugin.getcustommetadatatype",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "parentName": "AuthProviderPlugin",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getuserinfo(map<string,string>,auth.authprovidertokenresponse)": {
      "id": "Auth.authproviderplugin.method.getuserinfo(map<string,string>,auth.authprovidertokenresponse)",
      "nodeType": "method",
      "name": "getUserInfo",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUserInfo",
        "textToLower": "getuserinfo",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUserInfo_-1:0"
      },
      "parentId": "Auth.authproviderplugin",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Auth.UserData getUserInfo(Map<String,String> authProviderConfiguration, Auth.AuthProviderTokenResponse response)",
      "overrideSignature": "public override Auth.UserData getUserInfo(Map<String,String> authProviderConfiguration, Auth.AuthProviderTokenResponse response)",
      "simplifiedSignature": "getUserInfo(Map<String,String>,Auth.AuthProviderTokenResponse)",
      "datatype": {
        "id": "Auth.authproviderplugin.getuserinfo.datatype.Auth.UserData",
        "nodeType": "datatype",
        "name": "Auth.UserData",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Auth",
          "textToLower": "auth",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Auth_0:7"
        },
        "parentId": "Auth.authproviderplugin.getuserinfo",
        "order": 0,
        "memberOrder": 0,
        "type": "Auth.UserData"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "parentName": "AuthProviderPlugin",
      "variables": {},
      "params": {
        "authproviderconfiguration": {
          "id": "Auth.authproviderplugin.method.getuserinfo(map<string,string>,auth.authprovidertokenresponse).varParam.authproviderconfiguration",
          "nodeType": "variable",
          "name": "authProviderConfiguration",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration",
            "textToLower": "authproviderconfiguration",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 52
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderConfiguration_0:52"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration",
            "textToLower": "authproviderconfiguration",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 52
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderConfiguration_0:52"
          },
          "parentId": "Auth.authproviderplugin.method.getuserinfo(map<string,string>,auth.authprovidertokenresponse)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authproviderplugin.getuserinfo.datatype.Map<String,String>",
            "nodeType": "datatype",
            "name": "Map<String,String>",
            "startToken": {
              "type": "datatype.collection",
              "text": "Map",
              "textToLower": "map",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 33
                },
                "end": {
                  "line": 0,
                  "character": 36
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Map_0:33"
            },
            "parentId": "Auth.authproviderplugin.getuserinfo",
            "order": 0,
            "memberOrder": 0,
            "type": "Map",
            "value": {
              "id": "Auth.authproviderplugin.getuserinfo.datatype.Map<String,String>.value.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 44
                  },
                  "end": {
                    "line": 0,
                    "character": 50
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:44"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            },
            "key": {
              "id": "Auth.authproviderplugin.getuserinfo.datatype.Map<String,String>.key.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 37
                  },
                  "end": {
                    "line": 0,
                    "character": 43
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:37"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            }
          },
          "scope": null
        },
        "response": {
          "id": "Auth.authproviderplugin.method.getuserinfo(map<string,string>,auth.authprovidertokenresponse).varParam.response",
          "nodeType": "variable",
          "name": "response",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "response",
            "textToLower": "response",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 110
              },
              "end": {
                "line": 0,
                "character": 118
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_response_0:110"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "response",
            "textToLower": "response",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 110
              },
              "end": {
                "line": 0,
                "character": 118
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_response_0:110"
          },
          "parentId": "Auth.authproviderplugin.method.getuserinfo(map<string,string>,auth.authprovidertokenresponse)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authproviderplugin.getuserinfo.datatype.Auth.AuthProviderTokenResponse",
            "nodeType": "datatype",
            "name": "Auth.AuthProviderTokenResponse",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Auth",
              "textToLower": "auth",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 83
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Auth_0:79"
            },
            "parentId": "Auth.authproviderplugin.getuserinfo",
            "order": 0,
            "memberOrder": 0,
            "type": "Auth.AuthProviderTokenResponse"
          },
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup.  The OAuth access token, OAuth secret or refresh token, and state provided by the authentication provider to authenticate the current user.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "handlecallback(map<string,string>,auth.authprovidercallbackstate)": {
      "id": "Auth.authproviderplugin.method.handlecallback(map<string,string>,auth.authprovidercallbackstate)",
      "nodeType": "method",
      "name": "handleCallback",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "handleCallback",
        "textToLower": "handlecallback",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_handleCallback_-1:0"
      },
      "parentId": "Auth.authproviderplugin",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Auth.AuthProviderTokenResponse handleCallback(Map<String,String> authProviderConfiguration, Auth.AuthProviderCallbackState callbackState)",
      "overrideSignature": "public override Auth.AuthProviderTokenResponse handleCallback(Map<String,String> authProviderConfiguration, Auth.AuthProviderCallbackState callbackState)",
      "simplifiedSignature": "handleCallback(Map<String,String>,Auth.AuthProviderCallbackState)",
      "datatype": {
        "id": "Auth.authproviderplugin.handlecallback.datatype.Auth.AuthProviderTokenResponse",
        "nodeType": "datatype",
        "name": "Auth.AuthProviderTokenResponse",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Auth",
          "textToLower": "auth",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Auth_0:7"
        },
        "parentId": "Auth.authproviderplugin.handlecallback",
        "order": 0,
        "memberOrder": 0,
        "type": "Auth.AuthProviderTokenResponse"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "parentName": "AuthProviderPlugin",
      "variables": {},
      "params": {
        "authproviderconfiguration": {
          "id": "Auth.authproviderplugin.method.handlecallback(map<string,string>,auth.authprovidercallbackstate).varParam.authproviderconfiguration",
          "nodeType": "variable",
          "name": "authProviderConfiguration",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration",
            "textToLower": "authproviderconfiguration",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderConfiguration_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration",
            "textToLower": "authproviderconfiguration",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderConfiguration_0:72"
          },
          "parentId": "Auth.authproviderplugin.method.handlecallback(map<string,string>,auth.authprovidercallbackstate)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authproviderplugin.handlecallback.datatype.Map<String,String>",
            "nodeType": "datatype",
            "name": "Map<String,String>",
            "startToken": {
              "type": "datatype.collection",
              "text": "Map",
              "textToLower": "map",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 53
                },
                "end": {
                  "line": 0,
                  "character": 56
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Map_0:53"
            },
            "parentId": "Auth.authproviderplugin.handlecallback",
            "order": 0,
            "memberOrder": 0,
            "type": "Map",
            "value": {
              "id": "Auth.authproviderplugin.handlecallback.datatype.Map<String,String>.value.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 64
                  },
                  "end": {
                    "line": 0,
                    "character": 70
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:64"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            },
            "key": {
              "id": "Auth.authproviderplugin.handlecallback.datatype.Map<String,String>.key.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 57
                  },
                  "end": {
                    "line": 0,
                    "character": 63
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:57"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            }
          },
          "scope": null
        },
        "callbackstate": {
          "id": "Auth.authproviderplugin.method.handlecallback(map<string,string>,auth.authprovidercallbackstate).varParam.callbackstate",
          "nodeType": "variable",
          "name": "callbackState",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callbackState",
            "textToLower": "callbackstate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 130
              },
              "end": {
                "line": 0,
                "character": 143
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callbackState_0:130"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "callbackState",
            "textToLower": "callbackstate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 130
              },
              "end": {
                "line": 0,
                "character": 143
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callbackState_0:130"
          },
          "parentId": "Auth.authproviderplugin.method.handlecallback(map<string,string>,auth.authprovidercallbackstate)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authproviderplugin.handlecallback.datatype.Auth.AuthProviderCallbackState",
            "nodeType": "datatype",
            "name": "Auth.AuthProviderCallbackState",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Auth",
              "textToLower": "auth",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 103
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Auth_0:99"
            },
            "parentId": "Auth.authproviderplugin.handlecallback",
            "order": 0,
            "memberOrder": 0,
            "type": "Auth.AuthProviderCallbackState"
          },
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup. The class that contains the HTTP headers, body, and queryParams of the authentication request.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "initiate(map<string,string>,string)": {
      "id": "Auth.authproviderplugin.method.initiate(map<string,string>,string)",
      "nodeType": "method",
      "name": "initiate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "initiate",
        "textToLower": "initiate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_initiate_-1:0"
      },
      "parentId": "Auth.authproviderplugin",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public System.PageReference initiate(Map<String,String> authProviderConfiguration, String stateToPropagate)",
      "overrideSignature": "public override System.PageReference initiate(Map<String,String> authProviderConfiguration, String stateToPropagate)",
      "simplifiedSignature": "initiate(Map<String,String>,String)",
      "datatype": {
        "id": "Auth.authproviderplugin.initiate.datatype.System.PageReference",
        "nodeType": "datatype",
        "name": "System.PageReference",
        "startToken": {
          "type": "datatype.support.class",
          "text": "System",
          "textToLower": "system",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_System_0:7"
        },
        "parentId": "Auth.authproviderplugin.initiate",
        "order": 0,
        "memberOrder": 0,
        "type": "System.PageReference"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "parentName": "AuthProviderPlugin",
      "variables": {},
      "params": {
        "authproviderconfiguration": {
          "id": "Auth.authproviderplugin.method.initiate(map<string,string>,string).varParam.authproviderconfiguration",
          "nodeType": "variable",
          "name": "authProviderConfiguration",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration",
            "textToLower": "authproviderconfiguration",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 81
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderConfiguration_0:56"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration",
            "textToLower": "authproviderconfiguration",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 81
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderConfiguration_0:56"
          },
          "parentId": "Auth.authproviderplugin.method.initiate(map<string,string>,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authproviderplugin.initiate.datatype.Map<String,String>",
            "nodeType": "datatype",
            "name": "Map<String,String>",
            "startToken": {
              "type": "datatype.collection",
              "text": "Map",
              "textToLower": "map",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 37
                },
                "end": {
                  "line": 0,
                  "character": 40
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Map_0:37"
            },
            "parentId": "Auth.authproviderplugin.initiate",
            "order": 0,
            "memberOrder": 0,
            "type": "Map",
            "value": {
              "id": "Auth.authproviderplugin.initiate.datatype.Map<String,String>.value.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 48
                  },
                  "end": {
                    "line": 0,
                    "character": 54
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:48"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            },
            "key": {
              "id": "Auth.authproviderplugin.initiate.datatype.Map<String,String>.key.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 41
                  },
                  "end": {
                    "line": 0,
                    "character": 47
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:41"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            }
          },
          "scope": null
        },
        "statetopropagate": {
          "id": "Auth.authproviderplugin.method.initiate(map<string,string>,string).varParam.statetopropagate",
          "nodeType": "variable",
          "name": "stateToPropagate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stateToPropagate",
            "textToLower": "statetopropagate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 106
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_stateToPropagate_0:90"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "stateToPropagate",
            "textToLower": "statetopropagate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 106
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_stateToPropagate_0:90"
          },
          "parentId": "Auth.authproviderplugin.method.initiate(map<string,string>,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authproviderplugin.initiate.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 83
                },
                "end": {
                  "line": 0,
                  "character": 89
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:83"
            },
            "parentId": "Auth.authproviderplugin.initiate",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The configuration for the custom authentication provider. When you create a custom metadata type in Salesforce, the configuration populates with the custom metadata type default values. Or you can set the configuration with values you enter when you create the custom provider in Auth. Providers in Setup. The state passed in to initiate the authentication request for the user.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 4,
  "queries": []
}