{
  "id": "Auth.authproviderplugin",
  "nodeType": "interface",
  "name": "AuthProviderPlugin",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "AuthProviderPlugin",
    "textToLower": "authproviderplugin",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_AuthProviderPlugin_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "This interface is deprecated. For new development, use the abstract class Auth.AuthProviderPluginClass to create a custom OAuth-based authentication provider plug-in for single sign-on in to Salesforce.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_interface_Auth_AuthProviderPlugin.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getcustommetadatatype()": {
      "id": "Auth.authproviderplugin.getcustommetadatatype",
      "nodeType": "method",
      "name": "getCustomMetadataType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCustomMetadataType",
        "textToLower": "getcustommetadatatype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCustomMetadataType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getCustomMetadataType()",
      "simplifiedSignature": "getCustomMetadataType()",
      "datatype": {
        "id": "Auth.authproviderplugin.getcustommetadatatype.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": {}
    },
    "getuserinfo(map,string>)": {
      "id": "Auth.authproviderplugin.getuserinfo",
      "nodeType": "method",
      "name": "getUserInfo",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUserInfo",
        "textToLower": "getuserinfo",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUserInfo_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Auth.UserData getUserInfo(Map <String, String> authProviderConfiguration,)",
      "simplifiedSignature": "getUserInfo(Map,String>)",
      "datatype": {
        "id": "Auth.authproviderplugin.getuserinfo.Auth.UserData",
        "nodeType": "datatype",
        "name": "Auth.UserData"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": {
        "<String": {
          "id": "Auth.authproviderplugin.getuserinfo.<string",
          "type": "var",
          "name": "<String",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String",
            "textToLower": "<string",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String_-1:0"
          },
          "signature": "Map <String",
          "datatype": {
            "id": "Auth.authproviderplugin.getuserinfo.map",
            "nodeType": "datatype",
            "name": "Map"
          }
        },
        "authProviderConfiguration,": {
          "id": "Auth.authproviderplugin.getuserinfo.authproviderconfiguration,",
          "type": "var",
          "name": "authProviderConfiguration,",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration,",
            "textToLower": "authproviderconfiguration,",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_authProviderConfiguration,_-1:0"
          },
          "signature": "String> authProviderConfiguration,",
          "datatype": {
            "id": "Auth.authproviderplugin.getuserinfo.string>",
            "nodeType": "datatype",
            "name": "String>"
          }
        }
      }
    },
    "handlecallback(map,string>)": {
      "id": "Auth.authproviderplugin.handlecallback",
      "nodeType": "method",
      "name": "handleCallback",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "handleCallback",
        "textToLower": "handlecallback",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_handleCallback_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Auth.AuthProviderTokenResponse handleCallback(Map <String, String> authProviderConfiguration,)",
      "simplifiedSignature": "handleCallback(Map,String>)",
      "datatype": {
        "id": "Auth.authproviderplugin.handlecallback.Auth.AuthProviderTokenResponse",
        "nodeType": "datatype",
        "name": "Auth.AuthProviderTokenResponse"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": {
        "<String": {
          "id": "Auth.authproviderplugin.handlecallback.<string",
          "type": "var",
          "name": "<String",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String",
            "textToLower": "<string",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String_-1:0"
          },
          "signature": "Map <String",
          "datatype": {
            "id": "Auth.authproviderplugin.handlecallback.map",
            "nodeType": "datatype",
            "name": "Map"
          }
        },
        "authProviderConfiguration,": {
          "id": "Auth.authproviderplugin.handlecallback.authproviderconfiguration,",
          "type": "var",
          "name": "authProviderConfiguration,",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration,",
            "textToLower": "authproviderconfiguration,",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_authProviderConfiguration,_-1:0"
          },
          "signature": "String> authProviderConfiguration,",
          "datatype": {
            "id": "Auth.authproviderplugin.handlecallback.string>",
            "nodeType": "datatype",
            "name": "String>"
          }
        }
      }
    },
    "initiate(map,string>)": {
      "id": "Auth.authproviderplugin.initiate",
      "nodeType": "method",
      "name": "initiate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "initiate",
        "textToLower": "initiate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_initiate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.PageReference initiate(Map <String, String> authProviderConfiguration,)",
      "simplifiedSignature": "initiate(Map,String>)",
      "datatype": {
        "id": "Auth.authproviderplugin.initiate.System.PageReference",
        "nodeType": "datatype",
        "name": "System.PageReference"
      },
      "description": "Deprecated as of API version 39.0. Use the corresponding method in Auth.AuthProviderPluginClass.",
      "params": {
        "<String": {
          "id": "Auth.authproviderplugin.initiate.<string",
          "type": "var",
          "name": "<String",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String",
            "textToLower": "<string",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String_-1:0"
          },
          "signature": "Map <String",
          "datatype": {
            "id": "Auth.authproviderplugin.initiate.map",
            "nodeType": "datatype",
            "name": "Map"
          }
        },
        "authProviderConfiguration,": {
          "id": "Auth.authproviderplugin.initiate.authproviderconfiguration,",
          "type": "var",
          "name": "authProviderConfiguration,",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderConfiguration,",
            "textToLower": "authproviderconfiguration,",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_authProviderConfiguration,_-1:0"
          },
          "signature": "String> authProviderConfiguration,",
          "datatype": {
            "id": "Auth.authproviderplugin.initiate.string>",
            "nodeType": "datatype",
            "name": "String>"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}