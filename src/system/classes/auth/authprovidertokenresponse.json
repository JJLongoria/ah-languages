{
  "id": "Auth.authprovidertokenresponse",
  "nodeType": "class",
  "name": "AuthProviderTokenResponse",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "AuthProviderTokenResponse",
    "textToLower": "authprovidertokenresponse",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_AuthProviderTokenResponse_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Stores the response from the AuthProviderPlugin.handleCallback method.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_AuthProviderTokenResponse.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "oauthsecretorrefreshtoken": {
      "id": "Auth.authprovidertokenresponse.oauthsecretorrefreshtoken",
      "nodeType": "property",
      "name": "oauthSecretOrRefreshToken",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "oauthSecretOrRefreshToken",
        "textToLower": "oauthsecretorrefreshtoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_oauthSecretOrRefreshToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String oauthSecretOrRefreshToken {get; set;}",
      "simplifiedSignature": "String oauthSecretOrRefreshToken { get; set; }",
      "datatype": {
        "id": "Auth.authprovidertokenresponse.oauthsecretorrefreshtoken.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "The OAuth secret or refresh token for the currently logged-in user.",
      "getter": {
        "id": "Auth.authprovidertokenresponse.oauthsecretorrefreshtoken.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.authprovidertokenresponse.oauthsecretorrefreshtoken.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "oauthtoken": {
      "id": "Auth.authprovidertokenresponse.oauthtoken",
      "nodeType": "property",
      "name": "oauthToken",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "oauthToken",
        "textToLower": "oauthtoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_oauthToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String oauthToken {get; set;}",
      "simplifiedSignature": "String oauthToken { get; set; }",
      "datatype": {
        "id": "Auth.authprovidertokenresponse.oauthtoken.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "The OAuth access token.",
      "getter": {
        "id": "Auth.authprovidertokenresponse.oauthtoken.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.authprovidertokenresponse.oauthtoken.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "provider": {
      "id": "Auth.authprovidertokenresponse.provider",
      "nodeType": "property",
      "name": "provider",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "provider",
        "textToLower": "provider",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_provider_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String provider {get; set;}",
      "simplifiedSignature": "String provider { get; set; }",
      "datatype": {
        "id": "Auth.authprovidertokenresponse.provider.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "The authentication provider.",
      "getter": {
        "id": "Auth.authprovidertokenresponse.provider.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.authprovidertokenresponse.provider.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {},
  "constructors": {
    "authprovidertokenresponse(string,string,string,string)": {
      "id": "Auth.authprovidertokenresponse.authprovidertokenresponse",
      "nodeType": "constructor",
      "name": "AuthProviderTokenResponse",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "AuthProviderTokenResponse",
        "textToLower": "authprovidertokenresponse",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_AuthProviderTokenResponse_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public AuthProviderTokenResponse(String provider, String oauthToken, String oauthSecretOrRefreshToken, String state)",
      "simplifiedSignature": "AuthProviderTokenResponse(String,String,String,String)",
      "datatype": {
        "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.constructor",
        "nodeType": "datatype",
        "name": "AuthProviderTokenResponse"
      },
      "description": "Creates an instance of the AuthProviderTokenResponse class using the specified authentication provider, OAuth access token, OAuth secret or refresh token, and state for a custom authentication provider plug-in.",
      "params": {
        "provider": {
          "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.provider",
          "type": "var",
          "name": "provider",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "provider",
            "textToLower": "provider",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_provider_-1:0"
          },
          "signature": "String provider",
          "datatype": {
            "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "oauthToken": {
          "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.oauthtoken",
          "type": "var",
          "name": "oauthToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "oauthToken",
            "textToLower": "oauthtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_oauthToken_-1:0"
          },
          "signature": "String oauthToken",
          "datatype": {
            "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "oauthSecretOrRefreshToken": {
          "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.oauthsecretorrefreshtoken",
          "type": "var",
          "name": "oauthSecretOrRefreshToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "oauthSecretOrRefreshToken",
            "textToLower": "oauthsecretorrefreshtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_oauthSecretOrRefreshToken_-1:0"
          },
          "signature": "String oauthSecretOrRefreshToken",
          "datatype": {
            "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "state": {
          "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.state",
          "type": "var",
          "name": "state",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "state",
            "textToLower": "state",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_state_-1:0"
          },
          "signature": "String state",
          "datatype": {
            "id": "Auth.authprovidertokenresponse.authprovidertokenresponse.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}