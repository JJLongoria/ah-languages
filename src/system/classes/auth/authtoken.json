{
  "id": "Auth.authtoken",
  "nodeType": "class",
  "name": "AuthToken",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "AuthToken",
    "textToLower": "authtoken",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_AuthToken_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for providing the access token associated with an authentication provider for an authenticated user, except for the Janrain provider.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_AuthToken.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getaccesstoken(string,string)": {
      "id": "Auth.authtoken.method.getaccesstoken(string,string)",
      "nodeType": "method",
      "name": "getAccessToken",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAccessToken",
        "textToLower": "getaccesstoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAccessToken_-1:0"
      },
      "parentId": "Auth.authtoken",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static String getAccessToken(String authProviderId, String providerName)",
      "overrideSignature": "public static override String getAccessToken(String authProviderId, String providerName)",
      "simplifiedSignature": "getAccessToken(String,String)",
      "datatype": {
        "id": "Auth.authtoken.getaccesstoken.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:14"
        },
        "parentId": "Auth.authtoken.getaccesstoken",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns an access token for the current user using the specified 18-character identifier of an AuthProvider definition in your org and the proper name of the third party, such as Salesforce or Facebook. Note that querying the ProviderType field on the AuthProvider object sometimes returns a value that differs from the expected provider name value. For example, for Open ID Connect providers, OpenIdConnect is the ProviderType value for the AuthProvider object, but the expected providerName is Open ID Connect.",
      "parentName": "AuthToken",
      "variables": {},
      "params": {
        "authproviderid": {
          "id": "Auth.authtoken.method.getaccesstoken(string,string).varParam.authproviderid",
          "nodeType": "variable",
          "name": "authProviderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 43
              },
              "end": {
                "line": 0,
                "character": 57
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:43"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 43
              },
              "end": {
                "line": 0,
                "character": 57
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:43"
          },
          "parentId": "Auth.authtoken.method.getaccesstoken(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authtoken.getaccesstoken.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 36
                },
                "end": {
                  "line": 0,
                  "character": 42
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:36"
            },
            "parentId": "Auth.authtoken.getaccesstoken",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "providername": {
          "id": "Auth.authtoken.method.getaccesstoken(string,string).varParam.providername",
          "nodeType": "variable",
          "name": "providerName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:66"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:66"
          },
          "parentId": "Auth.authtoken.method.getaccesstoken(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authtoken.getaccesstoken.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 59
                },
                "end": {
                  "line": 0,
                  "character": 65
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:59"
            },
            "parentId": "Auth.authtoken.getaccesstoken",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getaccesstokenmap(string,string)": {
      "id": "Auth.authtoken.method.getaccesstokenmap(string,string)",
      "nodeType": "method",
      "name": "getAccessTokenMap",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAccessTokenMap",
        "textToLower": "getaccesstokenmap",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAccessTokenMap_-1:0"
      },
      "parentId": "Auth.authtoken",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Map<String,String> getAccessTokenMap(String authProviderId, String providerName)",
      "overrideSignature": "public static override Map<String,String> getAccessTokenMap(String authProviderId, String providerName)",
      "simplifiedSignature": "getAccessTokenMap(String,String)",
      "datatype": {
        "id": "Auth.authtoken.getaccesstokenmap.datatype.Map<String,String>",
        "nodeType": "datatype",
        "name": "Map<String,String>",
        "startToken": {
          "type": "datatype.collection",
          "text": "Map",
          "textToLower": "map",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 17
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Map_0:14"
        },
        "parentId": "Auth.authtoken.getaccesstokenmap",
        "order": 0,
        "memberOrder": 0,
        "type": "Map",
        "value": {
          "id": "Auth.authtoken.getaccesstokenmap.datatype.Map<String,String>.value.String",
          "nodeType": "datatype",
          "name": "String",
          "startToken": {
            "type": "datatype.primitive",
            "text": "String",
            "textToLower": "string",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 32
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_String_0:26"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "String"
        },
        "key": {
          "id": "Auth.authtoken.getaccesstokenmap.datatype.Map<String,String>.key.String",
          "nodeType": "datatype",
          "name": "String",
          "startToken": {
            "type": "datatype.primitive",
            "text": "String",
            "textToLower": "string",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 18
              },
              "end": {
                "line": 0,
                "character": 24
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_String_0:18"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "String"
        }
      },
      "description": "Returns a map from the third-party identifier to the access token for the currently logged-in Salesforce user. The identifier value depends on the third party. For example, for Salesforce it would be the user ID, while for Facebook it would be the user number. Note that querying the ProviderType field on the AuthProvider object sometimes returns a value that differs from the expected provider name value. For example, for Open ID Connect providers, OpenIdConnect is the ProviderType value for the AuthProvider object, but the expected providerName is Open ID Connect.",
      "parentName": "AuthToken",
      "variables": {},
      "params": {
        "authproviderid": {
          "id": "Auth.authtoken.method.getaccesstokenmap(string,string).varParam.authproviderid",
          "nodeType": "variable",
          "name": "authProviderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:59"
          },
          "parentId": "Auth.authtoken.method.getaccesstokenmap(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authtoken.getaccesstokenmap.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "Auth.authtoken.getaccesstokenmap",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "providername": {
          "id": "Auth.authtoken.method.getaccesstokenmap(string,string).varParam.providername",
          "nodeType": "variable",
          "name": "providerName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 82
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:82"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 82
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:82"
          },
          "parentId": "Auth.authtoken.method.getaccesstokenmap(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authtoken.getaccesstokenmap.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 75
                },
                "end": {
                  "line": 0,
                  "character": 81
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:75"
            },
            "parentId": "Auth.authtoken.getaccesstokenmap",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The proper name of the third party. For all providers except Janrain, the expected values are Facebook  Salesforce  Open ID Connect  Microsoft Access Control Service  LinkedIn  Twitter  Google   For Janrain providers, the parameter value is the proper name of the third party used. Yahoo! is an example of a Janrain provider value.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "refreshaccesstoken(string,string,string)": {
      "id": "Auth.authtoken.method.refreshaccesstoken(string,string,string)",
      "nodeType": "method",
      "name": "refreshAccessToken",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "refreshAccessToken",
        "textToLower": "refreshaccesstoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_refreshAccessToken_-1:0"
      },
      "parentId": "Auth.authtoken",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Map<String,String> refreshAccessToken(String authProviderId, String providerName, String oldAccessToken)",
      "overrideSignature": "public static override Map<String,String> refreshAccessToken(String authProviderId, String providerName, String oldAccessToken)",
      "simplifiedSignature": "refreshAccessToken(String,String,String)",
      "datatype": {
        "id": "Auth.authtoken.refreshaccesstoken.datatype.Map<String,String>",
        "nodeType": "datatype",
        "name": "Map<String,String>",
        "startToken": {
          "type": "datatype.collection",
          "text": "Map",
          "textToLower": "map",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 17
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Map_0:14"
        },
        "parentId": "Auth.authtoken.refreshaccesstoken",
        "order": 0,
        "memberOrder": 0,
        "type": "Map",
        "value": {
          "id": "Auth.authtoken.refreshaccesstoken.datatype.Map<String,String>.value.String",
          "nodeType": "datatype",
          "name": "String",
          "startToken": {
            "type": "datatype.primitive",
            "text": "String",
            "textToLower": "string",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 32
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_String_0:26"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "String"
        },
        "key": {
          "id": "Auth.authtoken.refreshaccesstoken.datatype.Map<String,String>.key.String",
          "nodeType": "datatype",
          "name": "String",
          "startToken": {
            "type": "datatype.primitive",
            "text": "String",
            "textToLower": "string",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 18
              },
              "end": {
                "line": 0,
                "character": 24
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_String_0:18"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "String"
        }
      },
      "description": "Returns a map from the third-party identifier containing a refreshed access token for the currently logged-in Salesforce user. Note that querying the ProviderType field on the AuthProvider object sometimes returns a value that differs from the expected provider name value. For example, for Open ID Connect providers, OpenIdConnect is the ProviderType value for the AuthProvider object, but the expected providerName is Open ID Connect.",
      "parentName": "AuthToken",
      "variables": {},
      "params": {
        "authproviderid": {
          "id": "Auth.authtoken.method.refreshaccesstoken(string,string,string).varParam.authproviderid",
          "nodeType": "variable",
          "name": "authProviderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:60"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:60"
          },
          "parentId": "Auth.authtoken.method.refreshaccesstoken(string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authtoken.refreshaccesstoken.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 53
                },
                "end": {
                  "line": 0,
                  "character": 59
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:53"
            },
            "parentId": "Auth.authtoken.refreshaccesstoken",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "providername": {
          "id": "Auth.authtoken.method.refreshaccesstoken(string,string,string).varParam.providername",
          "nodeType": "variable",
          "name": "providerName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:83"
          },
          "parentId": "Auth.authtoken.method.refreshaccesstoken(string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authtoken.refreshaccesstoken.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "Auth.authtoken.refreshaccesstoken",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "oldaccesstoken": {
          "id": "Auth.authtoken.method.refreshaccesstoken(string,string,string).varParam.oldaccesstoken",
          "nodeType": "variable",
          "name": "oldAccessToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "oldAccessToken",
            "textToLower": "oldaccesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 118
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_oldAccessToken_0:104"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "oldAccessToken",
            "textToLower": "oldaccesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 118
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_oldAccessToken_0:104"
          },
          "parentId": "Auth.authtoken.method.refreshaccesstoken(string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "Auth.authtoken.refreshaccesstoken.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 97
                },
                "end": {
                  "line": 0,
                  "character": 103
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:97"
            },
            "parentId": "Auth.authtoken.refreshaccesstoken",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The proper name of the third party. For all providers except Janrain, the expected values are Facebook  Salesforce  Open ID Connect  Microsoft Access Control Service  LinkedIn  Twitter  Google   For Janrain providers, the parameter value is the proper name of the third party used. Yahoo! is an example of a Janrain provider value.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "revokeaccess(string,string,string,string)": {
      "id": "Auth.authtoken.method.revokeaccess(string,string,string,string)",
      "nodeType": "method",
      "name": "revokeAccess",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "revokeAccess",
        "textToLower": "revokeaccess",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_revokeAccess_-1:0"
      },
      "parentId": "Auth.authtoken",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Boolean revokeAccess(String authProviderId, String providerName, String userId, String remoteIdentifier)",
      "overrideSignature": "public static override Boolean revokeAccess(String authProviderId, String providerName, String userId, String remoteIdentifier)",
      "simplifiedSignature": "revokeAccess(String,String,String,String)",
      "datatype": {
        "id": "Auth.authtoken.revokeaccess.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 21
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:14"
        },
        "parentId": "Auth.authtoken.revokeaccess",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Revokes the access token for a specified social sign-on user from a third-party service such as Facebook©. Note that querying the ProviderType field on the AuthProvider object sometimes returns a value that differs from the expected provider name value. For example, for Open ID Connect providers, OpenIdConnect is the ProviderType value for the AuthProvider object, but the expected providerName is Open ID Connect.",
      "parentName": "AuthToken",
      "variables": {},
      "params": {
        "authproviderid": {
          "id": "Auth.authtoken.method.revokeaccess(string,string,string,string).varParam.authproviderid",
          "nodeType": "variable",
          "name": "authProviderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 42
              },
              "end": {
                "line": 0,
                "character": 56
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:42"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "authProviderId",
            "textToLower": "authproviderid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 42
              },
              "end": {
                "line": 0,
                "character": 56
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_authProviderId_0:42"
          },
          "parentId": "Auth.authtoken.method.revokeaccess(string,string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.authtoken.revokeaccess.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 35
                },
                "end": {
                  "line": 0,
                  "character": 41
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:35"
            },
            "parentId": "Auth.authtoken.revokeaccess",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "providername": {
          "id": "Auth.authtoken.method.revokeaccess(string,string,string,string).varParam.providername",
          "nodeType": "variable",
          "name": "providerName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 65
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:65"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "providerName",
            "textToLower": "providername",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 65
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_providerName_0:65"
          },
          "parentId": "Auth.authtoken.method.revokeaccess(string,string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.authtoken.revokeaccess.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 58
                },
                "end": {
                  "line": 0,
                  "character": 64
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:58"
            },
            "parentId": "Auth.authtoken.revokeaccess",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "Auth.authtoken.method.revokeaccess(string,string,string,string).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:86"
          },
          "parentId": "Auth.authtoken.method.revokeaccess(string,string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "Auth.authtoken.revokeaccess.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "Auth.authtoken.revokeaccess",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "remoteidentifier": {
          "id": "Auth.authtoken.method.revokeaccess(string,string,string,string).varParam.remoteidentifier",
          "nodeType": "variable",
          "name": "remoteIdentifier",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "remoteIdentifier",
            "textToLower": "remoteidentifier",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 101
              },
              "end": {
                "line": 0,
                "character": 117
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_remoteIdentifier_0:101"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "remoteIdentifier",
            "textToLower": "remoteidentifier",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 101
              },
              "end": {
                "line": 0,
                "character": 117
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_remoteIdentifier_0:101"
          },
          "parentId": "Auth.authtoken.method.revokeaccess(string,string,string,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "Auth.authtoken.revokeaccess.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 94
                },
                "end": {
                  "line": 0,
                  "character": 100
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:94"
            },
            "parentId": "Auth.authtoken.revokeaccess",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The ID of the Auth. Provider in the Salesforce organization. The proper name of the third party. For all providers except Janrain, the expected values are Facebook  Salesforce  Open ID Connect  Microsoft Access Control Service  LinkedIn  Twitter  Google   For Janrain providers, the parameter value is the proper name of the third party used. Yahoo! is an example of a Janrain provider value. The 15-character ID for the user whose access is being revoked. The unique ID for the user in the third-party system (this value is in the associated ThirdPartyAccountLink standard object).",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 4,
  "queries": []
}