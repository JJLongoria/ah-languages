{
  "id": "Auth.configurableselfreghandler",
  "type": "interface",
  "name": "ConfigurableSelfRegHandler",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ConfigurableSelfRegHandler",
    "textToLower": "configurableselfreghandler",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ConfigurableSelfRegHandler_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Gives you more control over how visitors self-register for your community by creating a class that implements Auth.ConfigurableSelfRegHandler. You choose the user information to collect, and how users identify themselves—with their email address, phone number, or another identifier. Once verified, you create a new external user and log the user in to your community.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_interface_Auth_ConfigurableSelfRegHandler.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "createuser(id,id,map,string>)": {
      "id": "Auth.configurableselfreghandler.createuser",
      "type": "method",
      "name": "createUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createUser",
        "textToLower": "createuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Id createUser(Id accountId, Id profileId, Map <Schema.SObjectField, String> registrationAttributes,)",
      "simplifiedSignature": "createUser(Id,Id,Map,String>)",
      "datatype": {
        "id": "Auth.configurableselfreghandler.createuser.Id",
        "type": "datatype",
        "name": "Id"
      },
      "description": "Create a community member from the information that the visitor provided on your community’s self-registration page.",
      "variables": {
        "accountId": {
          "id": "Auth.configurableselfreghandler.createuser.accountid",
          "type": "var",
          "name": "accountId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accountId",
            "textToLower": "accountid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_accountId_-1:0"
          },
          "signature": "Id accountId",
          "datatype": {
            "id": "Auth.configurableselfreghandler.createuser.id",
            "type": "datatype",
            "name": "Id"
          }
        },
        "profileId": {
          "id": "Auth.configurableselfreghandler.createuser.profileid",
          "type": "var",
          "name": "profileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "profileId",
            "textToLower": "profileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_profileId_-1:0"
          },
          "signature": "Id profileId",
          "datatype": {
            "id": "Auth.configurableselfreghandler.createuser.id",
            "type": "datatype",
            "name": "Id"
          }
        },
        "<Schema.SObjectField": {
          "id": "Auth.configurableselfreghandler.createuser.<schema.sobjectfield",
          "type": "var",
          "name": "<Schema.SObjectField",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Schema.SObjectField",
            "textToLower": "<schema.sobjectfield",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Schema.SObjectField_-1:0"
          },
          "signature": "Map <Schema.SObjectField",
          "datatype": {
            "id": "Auth.configurableselfreghandler.createuser.map",
            "type": "datatype",
            "name": "Map"
          }
        },
        "registrationAttributes,": {
          "id": "Auth.configurableselfreghandler.createuser.registrationattributes,",
          "type": "var",
          "name": "registrationAttributes,",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "registrationAttributes,",
            "textToLower": "registrationattributes,",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_registrationAttributes,_-1:0"
          },
          "signature": "String> registrationAttributes,",
          "datatype": {
            "id": "Auth.configurableselfreghandler.createuser.string>",
            "type": "datatype",
            "name": "String>"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}