{
  "id": "Auth.connectedappplugin",
  "nodeType": "class",
  "name": "ConnectedAppPlugin",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ConnectedAppPlugin",
    "textToLower": "connectedappplugin",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ConnectedAppPlugin_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for extending the behavior of a connected app, for example, customizing how a connected app is invoked depending on the protocol used. This class gives you more control over the interaction between Salesforce and your connected app.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_ConnectedAppPlugin.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "authorize(id,id,boolean)": {
      "id": "Auth.connectedappplugin.authorize",
      "nodeType": "method",
      "name": "authorize",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "authorize",
        "textToLower": "authorize",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_authorize_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean authorize(Id userId, Id connectedAppId, Boolean isAdminApproved)",
      "simplifiedSignature": "authorize(Id,Id,Boolean)",
      "datatype": {
        "id": "Auth.connectedappplugin.authorize.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Deprecated and available only in API versions 35.0 and 36.0. As of version 37.0, use authorize(userId, connectedAppId, isAdminApproved, context) instead.",
      "params": {
        "userId": {
          "id": "Auth.connectedappplugin.authorize.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "Auth.connectedappplugin.authorize.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "connectedAppId": {
          "id": "Auth.connectedappplugin.authorize.connectedappid",
          "type": "var",
          "name": "connectedAppId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "connectedAppId",
            "textToLower": "connectedappid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_connectedAppId_-1:0"
          },
          "signature": "Id connectedAppId",
          "datatype": {
            "id": "Auth.connectedappplugin.authorize.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "isAdminApproved": {
          "id": "Auth.connectedappplugin.authorize.isadminapproved",
          "type": "var",
          "name": "isAdminApproved",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isAdminApproved",
            "textToLower": "isadminapproved",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isAdminApproved_-1:0"
          },
          "signature": "Boolean isAdminApproved",
          "datatype": {
            "id": "Auth.connectedappplugin.authorize.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "authorize(id,id,boolean,auth.invocationcontext)": {
      "id": "Auth.connectedappplugin.authorize",
      "nodeType": "method",
      "name": "authorize",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "authorize",
        "textToLower": "authorize",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_authorize_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean authorize(Id userId, Id connectedAppId, Boolean isAdminApproved, Auth.InvocationContext context)",
      "simplifiedSignature": "authorize(Id,Id,Boolean,Auth.InvocationContext)",
      "datatype": {
        "id": "Auth.connectedappplugin.authorize.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Authorizes the specified user to access the connected app. If the connected app is set for users to self-authorize, this method isnâ€™t invoked.",
      "params": {
        "userId": {
          "id": "Auth.connectedappplugin.authorize.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "Auth.connectedappplugin.authorize.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "connectedAppId": {
          "id": "Auth.connectedappplugin.authorize.connectedappid",
          "type": "var",
          "name": "connectedAppId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "connectedAppId",
            "textToLower": "connectedappid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_connectedAppId_-1:0"
          },
          "signature": "Id connectedAppId",
          "datatype": {
            "id": "Auth.connectedappplugin.authorize.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "isAdminApproved": {
          "id": "Auth.connectedappplugin.authorize.isadminapproved",
          "type": "var",
          "name": "isAdminApproved",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isAdminApproved",
            "textToLower": "isadminapproved",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isAdminApproved_-1:0"
          },
          "signature": "Boolean isAdminApproved",
          "datatype": {
            "id": "Auth.connectedappplugin.authorize.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        },
        "context": {
          "id": "Auth.connectedappplugin.authorize.context",
          "type": "var",
          "name": "context",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "context",
            "textToLower": "context",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_context_-1:0"
          },
          "signature": "Auth.InvocationContext context",
          "datatype": {
            "id": "Auth.connectedappplugin.authorize.auth.invocationcontext",
            "nodeType": "datatype",
            "name": "Auth.InvocationContext"
          }
        }
      }
    },
    "customattributes(id,id,map,string>)": {
      "id": "Auth.connectedappplugin.customattributes",
      "nodeType": "method",
      "name": "customAttributes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "customAttributes",
        "textToLower": "customattributes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_customAttributes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Map<String, String> customAttributes(Id userId, Id connectedAppId, Map <String, String> formulaDefinedAttributes,)",
      "simplifiedSignature": "customAttributes(Id,Id,Map,String>)",
      "datatype": {
        "id": "Auth.connectedappplugin.customattributes.Map<String, String>",
        "nodeType": "datatype",
        "name": "Map<String, String>"
      },
      "description": "Sets new attributes for the specified user. When the connected app gets the userâ€™s attributes from the UserInfo endpoint or through a SAML assertion, use this method to update the attribute values.",
      "params": {
        "userId": {
          "id": "Auth.connectedappplugin.customattributes.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "Auth.connectedappplugin.customattributes.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "connectedAppId": {
          "id": "Auth.connectedappplugin.customattributes.connectedappid",
          "type": "var",
          "name": "connectedAppId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "connectedAppId",
            "textToLower": "connectedappid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_connectedAppId_-1:0"
          },
          "signature": "Id connectedAppId",
          "datatype": {
            "id": "Auth.connectedappplugin.customattributes.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "<String": {
          "id": "Auth.connectedappplugin.customattributes.<string",
          "type": "var",
          "name": "<String",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String",
            "textToLower": "<string",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String_-1:0"
          },
          "signature": "Map <String",
          "datatype": {
            "id": "Auth.connectedappplugin.customattributes.map",
            "nodeType": "datatype",
            "name": "Map"
          }
        },
        "formulaDefinedAttributes,": {
          "id": "Auth.connectedappplugin.customattributes.formuladefinedattributes,",
          "type": "var",
          "name": "formulaDefinedAttributes,",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formulaDefinedAttributes,",
            "textToLower": "formuladefinedattributes,",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formulaDefinedAttributes,_-1:0"
          },
          "signature": "String> formulaDefinedAttributes,",
          "datatype": {
            "id": "Auth.connectedappplugin.customattributes.string>",
            "nodeType": "datatype",
            "name": "String>"
          }
        }
      }
    },
    "modifysamlresponse(map,string>)": {
      "id": "Auth.connectedappplugin.modifysamlresponse",
      "nodeType": "method",
      "name": "modifySAMLResponse",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "modifySAMLResponse",
        "textToLower": "modifysamlresponse",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_modifySAMLResponse_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode modifySAMLResponse(Map <String, String> authSession,)",
      "simplifiedSignature": "modifySAMLResponse(Map,String>)",
      "datatype": {
        "id": "Auth.connectedappplugin.modifysamlresponse.Dom.XmlNode",
        "nodeType": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Modifies the XML generated by the Salesforce SAML Identity Provider (IDP) before itâ€™s sent to the service provider.",
      "params": {
        "<String": {
          "id": "Auth.connectedappplugin.modifysamlresponse.<string",
          "type": "var",
          "name": "<String",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String",
            "textToLower": "<string",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String_-1:0"
          },
          "signature": "Map <String",
          "datatype": {
            "id": "Auth.connectedappplugin.modifysamlresponse.map",
            "nodeType": "datatype",
            "name": "Map"
          }
        },
        "authSession,": {
          "id": "Auth.connectedappplugin.modifysamlresponse.authsession,",
          "type": "var",
          "name": "authSession,",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "authSession,",
            "textToLower": "authsession,",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_authSession,_-1:0"
          },
          "signature": "String> authSession,",
          "datatype": {
            "id": "Auth.connectedappplugin.modifysamlresponse.string>",
            "nodeType": "datatype",
            "name": "String>"
          }
        }
      }
    },
    "refresh(id,id)": {
      "id": "Auth.connectedappplugin.refresh",
      "nodeType": "method",
      "name": "refresh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "refresh",
        "textToLower": "refresh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_refresh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void refresh(Id userId, Id connectedAppId)",
      "simplifiedSignature": "refresh(Id,Id)",
      "datatype": {
        "id": "Auth.connectedappplugin.refresh.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Deprecated and available only in API versions 35.0 and 36.0. As of version 37.0, use refresh(userId, connectedAppId, context) instead.",
      "params": {
        "userId": {
          "id": "Auth.connectedappplugin.refresh.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "Auth.connectedappplugin.refresh.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "connectedAppId": {
          "id": "Auth.connectedappplugin.refresh.connectedappid",
          "type": "var",
          "name": "connectedAppId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "connectedAppId",
            "textToLower": "connectedappid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_connectedAppId_-1:0"
          },
          "signature": "Id connectedAppId",
          "datatype": {
            "id": "Auth.connectedappplugin.refresh.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        }
      }
    },
    "refresh(id,id,auth.invocationcontext)": {
      "id": "Auth.connectedappplugin.refresh",
      "nodeType": "method",
      "name": "refresh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "refresh",
        "textToLower": "refresh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_refresh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void refresh(Id userId, Id connectedAppId, Auth.InvocationContext context)",
      "simplifiedSignature": "refresh(Id,Id,Auth.InvocationContext)",
      "datatype": {
        "id": "Auth.connectedappplugin.refresh.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Salesforce calls this method during a refresh token exchange.",
      "params": {
        "userId": {
          "id": "Auth.connectedappplugin.refresh.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "Auth.connectedappplugin.refresh.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "connectedAppId": {
          "id": "Auth.connectedappplugin.refresh.connectedappid",
          "type": "var",
          "name": "connectedAppId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "connectedAppId",
            "textToLower": "connectedappid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_connectedAppId_-1:0"
          },
          "signature": "Id connectedAppId",
          "datatype": {
            "id": "Auth.connectedappplugin.refresh.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "context": {
          "id": "Auth.connectedappplugin.refresh.context",
          "type": "var",
          "name": "context",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "context",
            "textToLower": "context",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_context_-1:0"
          },
          "signature": "Auth.InvocationContext context",
          "datatype": {
            "id": "Auth.connectedappplugin.refresh.auth.invocationcontext",
            "nodeType": "datatype",
            "name": "Auth.InvocationContext"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}