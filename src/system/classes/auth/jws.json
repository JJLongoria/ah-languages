{
  "id": "Auth.jws",
  "type": "class",
  "name": "JWS",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "JWS",
    "textToLower": "jws",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_JWS_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods that apply a digital signature to a JSON Web Token (JWT), using a JSON Web Signature (JWS) data structure. This class creates the signed JWT bearer token, which can be used to request an OAuth access token in the OAuth 2.0 JWT bearer token flow.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_JWS.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "clone()": {
      "id": "Auth.jws.clone",
      "type": "method",
      "name": "clone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clone",
        "textToLower": "clone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public JWS clone()",
      "simplifiedSignature": "clone()",
      "datatype": {
        "id": "Auth.jws.clone.JWS",
        "type": "datatype",
        "name": "JWS"
      },
      "description": "Makes a duplicate copy of the JWS object.",
      "variables": {}
    },
    "getcompactserialization()": {
      "id": "Auth.jws.getcompactserialization",
      "type": "method",
      "name": "getCompactSerialization",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCompactSerialization",
        "textToLower": "getcompactserialization",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCompactSerialization_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getCompactSerialization()",
      "simplifiedSignature": "getCompactSerialization()",
      "datatype": {
        "id": "Auth.jws.getcompactserialization.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the compact serialization representation of the JWS as a concatenated string, with the encoded JWS header, encoded JWS payload, and encoded JWS signature strings separated by period ('.') characters.",
      "variables": {}
    }
  },
  "constructors": {
    "jws(auth.jwt,string)": {
      "id": "Auth.jws.jws",
      "type": "constructor",
      "name": "JWS",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "JWS",
        "textToLower": "jws",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_JWS_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public JWS(Auth.JWT jwt, String certDevName)",
      "simplifiedSignature": "JWS(Auth.JWT,String)",
      "datatype": {
        "id": "Auth.jws.jws.constructor",
        "type": "datatype",
        "name": "JWS"
      },
      "description": "Creates an instance of the JWS class using the specified Auth.JWT payload and the certificate used for signing the JWT bearer token.",
      "variables": {
        "jwt": {
          "id": "Auth.jws.jws.jwt",
          "type": "var",
          "name": "jwt",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "jwt",
            "textToLower": "jwt",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_jwt_-1:0"
          },
          "signature": "Auth.JWT jwt",
          "datatype": {
            "id": "Auth.jws.jws.auth.jwt",
            "type": "datatype",
            "name": "Auth.JWT"
          }
        },
        "certDevName": {
          "id": "Auth.jws.jws.certdevname",
          "type": "var",
          "name": "certDevName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "certDevName",
            "textToLower": "certdevname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_certDevName_-1:0"
          },
          "signature": "String certDevName",
          "datatype": {
            "id": "Auth.jws.jws.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "jws(string,string)": {
      "id": "Auth.jws.jws",
      "type": "constructor",
      "name": "JWS",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "JWS",
        "textToLower": "jws",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_JWS_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public JWS(String payload, String certDevName)",
      "simplifiedSignature": "JWS(String,String)",
      "datatype": {
        "id": "Auth.jws.jws.constructor",
        "type": "datatype",
        "name": "JWS"
      },
      "description": "Creates an instance of the JWS class using the specified payload and certificate used for signing the JWT bearer token.",
      "variables": {
        "payload": {
          "id": "Auth.jws.jws.payload",
          "type": "var",
          "name": "payload",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "payload",
            "textToLower": "payload",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_payload_-1:0"
          },
          "signature": "String payload",
          "datatype": {
            "id": "Auth.jws.jws.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "certDevName": {
          "id": "Auth.jws.jws.certdevname",
          "type": "var",
          "name": "certDevName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "certDevName",
            "textToLower": "certdevname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_certDevName_-1:0"
          },
          "signature": "String certDevName",
          "datatype": {
            "id": "Auth.jws.jws.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}