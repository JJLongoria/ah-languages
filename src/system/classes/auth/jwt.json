{
  "id": "Auth.jwt",
  "nodeType": "class",
  "name": "JWT",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "JWT",
    "textToLower": "jwt",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_JWT_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Generates the JSON Claims Set in a JSON Web Token (JWT). The resulting Base64-encoded payload can be passed as an argument to create an instance of the Auth.JWS class.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_JWT.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "clone()": {
      "id": "Auth.jwt.method.clone()",
      "nodeType": "method",
      "name": "clone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clone",
        "textToLower": "clone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clone_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Object clone()",
      "overrideSignature": "public override Object clone()",
      "simplifiedSignature": "clone()",
      "datatype": {
        "id": "Auth.jwt.clone.datatype.Object",
        "nodeType": "datatype",
        "name": "Object",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Object",
          "textToLower": "object",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Object_0:7"
        },
        "parentId": "Auth.jwt.clone",
        "order": 0,
        "memberOrder": 0,
        "type": "Object"
      },
      "description": "Makes a duplicate copy of the JWT object.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getadditionalclaims()": {
      "id": "Auth.jwt.method.getadditionalclaims()",
      "nodeType": "method",
      "name": "getAdditionalClaims",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAdditionalClaims",
        "textToLower": "getadditionalclaims",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAdditionalClaims_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Map<String,ANY> getAdditionalClaims()",
      "overrideSignature": "public override Map<String,ANY> getAdditionalClaims()",
      "simplifiedSignature": "getAdditionalClaims()",
      "datatype": {
        "id": "Auth.jwt.getadditionalclaims.datatype.Map<String,ANY>",
        "nodeType": "datatype",
        "name": "Map<String,ANY>",
        "startToken": {
          "type": "datatype.collection",
          "text": "Map",
          "textToLower": "map",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 10
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Map_0:7"
        },
        "parentId": "Auth.jwt.getadditionalclaims",
        "order": 0,
        "memberOrder": 0,
        "type": "Map",
        "value": {
          "id": "Auth.jwt.getadditionalclaims.datatype.Map<String,ANY>.value.ANY",
          "nodeType": "datatype",
          "name": "ANY",
          "startToken": {
            "type": "datatype.custom.class",
            "text": "ANY",
            "textToLower": "any",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 18
              },
              "end": {
                "line": 0,
                "character": 21
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_ANY_0:18"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "ANY"
        },
        "key": {
          "id": "Auth.jwt.getadditionalclaims.datatype.Map<String,ANY>.key.String",
          "nodeType": "datatype",
          "name": "String",
          "startToken": {
            "type": "datatype.primitive",
            "text": "String",
            "textToLower": "string",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 11
              },
              "end": {
                "line": 0,
                "character": 17
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_String_0:11"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "String"
        }
      },
      "description": "Returns a map of additional claims in the JWT, where the key string contains the name of the claim, and the value contains the value of the claim.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getaud()": {
      "id": "Auth.jwt.method.getaud()",
      "nodeType": "method",
      "name": "getAud",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAud",
        "textToLower": "getaud",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAud_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getAud()",
      "overrideSignature": "public override String getAud()",
      "simplifiedSignature": "getAud()",
      "datatype": {
        "id": "Auth.jwt.getaud.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.jwt.getaud",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the audience claim that identifies the intended recipients of the JWT.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getiss()": {
      "id": "Auth.jwt.method.getiss()",
      "nodeType": "method",
      "name": "getIss",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getIss",
        "textToLower": "getiss",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getIss_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getIss()",
      "overrideSignature": "public override String getIss()",
      "simplifiedSignature": "getIss()",
      "datatype": {
        "id": "Auth.jwt.getiss.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.jwt.getiss",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the issuer claim that identifies the issuer of the JWT.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getnbfclockskew()": {
      "id": "Auth.jwt.method.getnbfclockskew()",
      "nodeType": "method",
      "name": "getNbfClockSkew",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNbfClockSkew",
        "textToLower": "getnbfclockskew",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNbfClockSkew_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getNbfClockSkew()",
      "overrideSignature": "public override Integer getNbfClockSkew()",
      "simplifiedSignature": "getNbfClockSkew()",
      "datatype": {
        "id": "Auth.jwt.getnbfclockskew.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Auth.jwt.getnbfclockskew",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "Returns the not before claim that identifies the time before which the JWT must not be accepted for processing, while allowing some leeway for clock skew.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getsub()": {
      "id": "Auth.jwt.method.getsub()",
      "nodeType": "method",
      "name": "getSub",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSub",
        "textToLower": "getsub",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSub_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getSub()",
      "overrideSignature": "public override String getSub()",
      "simplifiedSignature": "getSub()",
      "datatype": {
        "id": "Auth.jwt.getsub.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.jwt.getsub",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the subject claim that identifies the current user of the JWT.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getvaliditylength()": {
      "id": "Auth.jwt.method.getvaliditylength()",
      "nodeType": "method",
      "name": "getValidityLength",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getValidityLength",
        "textToLower": "getvaliditylength",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getValidityLength_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 7,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getValidityLength()",
      "overrideSignature": "public override Integer getValidityLength()",
      "simplifiedSignature": "getValidityLength()",
      "datatype": {
        "id": "Auth.jwt.getvaliditylength.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Auth.jwt.getvaliditylength",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "Returns the length of time that the JWT is valid, which affects the expiration claim.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "setadditionalclaims(map<string,any>)": {
      "id": "Auth.jwt.method.setadditionalclaims(map<string,any>)",
      "nodeType": "method",
      "name": "setAdditionalClaims",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAdditionalClaims",
        "textToLower": "setadditionalclaims",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAdditionalClaims_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 8,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public void setAdditionalClaims(Map<String,ANY> additionalClaims)",
      "overrideSignature": "public override void setAdditionalClaims(Map<String,ANY> additionalClaims)",
      "simplifiedSignature": "setAdditionalClaims(Map<String,ANY>)",
      "datatype": {
        "id": "Auth.jwt.setadditionalclaims.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:7"
        },
        "parentId": "Auth.jwt.setadditionalclaims",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets the additional claims in the JWT. Returned by the getAdditionalClaims() method.",
      "parentName": "JWT",
      "variables": {},
      "params": {
        "additionalclaims": {
          "id": "Auth.jwt.method.setadditionalclaims(map<string,any>).varParam.additionalclaims",
          "nodeType": "variable",
          "name": "additionalClaims",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "additionalClaims",
            "textToLower": "additionalclaims",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 48
              },
              "end": {
                "line": 0,
                "character": 64
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_additionalClaims_0:48"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "additionalClaims",
            "textToLower": "additionalclaims",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 48
              },
              "end": {
                "line": 0,
                "character": 64
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_additionalClaims_0:48"
          },
          "parentId": "Auth.jwt.method.setadditionalclaims(map<string,any>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.jwt.setadditionalclaims.datatype.Map<String,ANY>",
            "nodeType": "datatype",
            "name": "Map<String,ANY>",
            "startToken": {
              "type": "datatype.collection",
              "text": "Map",
              "textToLower": "map",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 32
                },
                "end": {
                  "line": 0,
                  "character": 35
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Map_0:32"
            },
            "parentId": "Auth.jwt.setadditionalclaims",
            "order": 0,
            "memberOrder": 0,
            "type": "Map",
            "value": {
              "id": "Auth.jwt.setadditionalclaims.datatype.Map<String,ANY>.value.ANY",
              "nodeType": "datatype",
              "name": "ANY",
              "startToken": {
                "type": "datatype.custom.class",
                "text": "ANY",
                "textToLower": "any",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 43
                  },
                  "end": {
                    "line": 0,
                    "character": 46
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_ANY_0:43"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "ANY"
            },
            "key": {
              "id": "Auth.jwt.setadditionalclaims.datatype.Map<String,ANY>.key.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 36
                  },
                  "end": {
                    "line": 0,
                    "character": 42
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:36"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            }
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setaud(string)": {
      "id": "Auth.jwt.method.setaud(string)",
      "nodeType": "method",
      "name": "setAud",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAud",
        "textToLower": "setaud",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAud_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 9,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public void setAud(String aud)",
      "overrideSignature": "public override void setAud(String aud)",
      "simplifiedSignature": "setAud(String)",
      "datatype": {
        "id": "Auth.jwt.setaud.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:7"
        },
        "parentId": "Auth.jwt.setaud",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets the audience claim in the JWT. Returned by the getAud() method.",
      "parentName": "JWT",
      "variables": {},
      "params": {
        "aud": {
          "id": "Auth.jwt.method.setaud(string).varParam.aud",
          "nodeType": "variable",
          "name": "aud",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "aud",
            "textToLower": "aud",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 29
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_aud_0:26"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "aud",
            "textToLower": "aud",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 29
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_aud_0:26"
          },
          "parentId": "Auth.jwt.method.setaud(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.jwt.setaud.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 19
                },
                "end": {
                  "line": 0,
                  "character": 25
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:19"
            },
            "parentId": "Auth.jwt.setaud",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setiss(string)": {
      "id": "Auth.jwt.method.setiss(string)",
      "nodeType": "method",
      "name": "setIss",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setIss",
        "textToLower": "setiss",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setIss_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 10,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public void setIss(String iss)",
      "overrideSignature": "public override void setIss(String iss)",
      "simplifiedSignature": "setIss(String)",
      "datatype": {
        "id": "Auth.jwt.setiss.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:7"
        },
        "parentId": "Auth.jwt.setiss",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets the issuer claim in the JWT. Returned by the getIss() method.",
      "parentName": "JWT",
      "variables": {},
      "params": {
        "iss": {
          "id": "Auth.jwt.method.setiss(string).varParam.iss",
          "nodeType": "variable",
          "name": "iss",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "iss",
            "textToLower": "iss",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 29
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_iss_0:26"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "iss",
            "textToLower": "iss",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 29
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_iss_0:26"
          },
          "parentId": "Auth.jwt.method.setiss(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.jwt.setiss.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 19
                },
                "end": {
                  "line": 0,
                  "character": 25
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:19"
            },
            "parentId": "Auth.jwt.setiss",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setnbfclockskew(integer)": {
      "id": "Auth.jwt.method.setnbfclockskew(integer)",
      "nodeType": "method",
      "name": "setNbfClockSkew",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setNbfClockSkew",
        "textToLower": "setnbfclockskew",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setNbfClockSkew_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 11,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public void setNbfClockSkew(Integer nbfClockSkew)",
      "overrideSignature": "public override void setNbfClockSkew(Integer nbfClockSkew)",
      "simplifiedSignature": "setNbfClockSkew(Integer)",
      "datatype": {
        "id": "Auth.jwt.setnbfclockskew.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:7"
        },
        "parentId": "Auth.jwt.setnbfclockskew",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets the not before claim in the JWT. Returned by the getNbfClockSkew() method.",
      "parentName": "JWT",
      "variables": {},
      "params": {
        "nbfclockskew": {
          "id": "Auth.jwt.method.setnbfclockskew(integer).varParam.nbfclockskew",
          "nodeType": "variable",
          "name": "nbfClockSkew",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "nbfClockSkew",
            "textToLower": "nbfclockskew",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 36
              },
              "end": {
                "line": 0,
                "character": 48
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_nbfClockSkew_0:36"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "nbfClockSkew",
            "textToLower": "nbfclockskew",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 36
              },
              "end": {
                "line": 0,
                "character": 48
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_nbfClockSkew_0:36"
          },
          "parentId": "Auth.jwt.method.setnbfclockskew(integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.jwt.setnbfclockskew.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 28
                },
                "end": {
                  "line": 0,
                  "character": 35
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:28"
            },
            "parentId": "Auth.jwt.setnbfclockskew",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setsub(string)": {
      "id": "Auth.jwt.method.setsub(string)",
      "nodeType": "method",
      "name": "setSub",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setSub",
        "textToLower": "setsub",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setSub_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 12,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public void setSub(String sub)",
      "overrideSignature": "public override void setSub(String sub)",
      "simplifiedSignature": "setSub(String)",
      "datatype": {
        "id": "Auth.jwt.setsub.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:7"
        },
        "parentId": "Auth.jwt.setsub",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets the subject claim in the JWT. Returned by the getSub() method.",
      "parentName": "JWT",
      "variables": {},
      "params": {
        "sub": {
          "id": "Auth.jwt.method.setsub(string).varParam.sub",
          "nodeType": "variable",
          "name": "sub",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sub",
            "textToLower": "sub",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 29
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sub_0:26"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sub",
            "textToLower": "sub",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 29
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sub_0:26"
          },
          "parentId": "Auth.jwt.method.setsub(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.jwt.setsub.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 19
                },
                "end": {
                  "line": 0,
                  "character": 25
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:19"
            },
            "parentId": "Auth.jwt.setsub",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setvaliditylength(integer)": {
      "id": "Auth.jwt.method.setvaliditylength(integer)",
      "nodeType": "method",
      "name": "setValidityLength",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setValidityLength",
        "textToLower": "setvaliditylength",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setValidityLength_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 13,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public void setValidityLength(Integer validityLength)",
      "overrideSignature": "public override void setValidityLength(Integer validityLength)",
      "simplifiedSignature": "setValidityLength(Integer)",
      "datatype": {
        "id": "Auth.jwt.setvaliditylength.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:7"
        },
        "parentId": "Auth.jwt.setvaliditylength",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets the length of time that the JWT is valid, which affects the expiration claim. Returned by the getValidityLength() method.",
      "parentName": "JWT",
      "variables": {},
      "params": {
        "validitylength": {
          "id": "Auth.jwt.method.setvaliditylength(integer).varParam.validitylength",
          "nodeType": "variable",
          "name": "validityLength",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "validityLength",
            "textToLower": "validitylength",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_validityLength_0:38"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "validityLength",
            "textToLower": "validitylength",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_validityLength_0:38"
          },
          "parentId": "Auth.jwt.method.setvaliditylength(integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.jwt.setvaliditylength.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 30
                },
                "end": {
                  "line": 0,
                  "character": 37
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:30"
            },
            "parentId": "Auth.jwt.setvaliditylength",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "tojsonstring()": {
      "id": "Auth.jwt.method.tojsonstring()",
      "nodeType": "method",
      "name": "toJSONString",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toJSONString",
        "textToLower": "tojsonstring",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toJSONString_-1:0"
      },
      "parentId": "Auth.jwt",
      "order": 14,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String toJSONString()",
      "overrideSignature": "public override String toJSONString()",
      "simplifiedSignature": "toJSONString()",
      "datatype": {
        "id": "Auth.jwt.tojsonstring.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Auth.jwt.tojsonstring",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Generates the JSON object representation of the Claims Set as an encoded JWT payload.",
      "parentName": "JWT",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 14,
  "queries": []
}