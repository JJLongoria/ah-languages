{
  "id": "Auth.mydomainlogindiscoveryhandler",
  "nodeType": "class",
  "name": "MyDomainLoginDiscoveryHandler",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "MyDomainLoginDiscoveryHandler",
    "textToLower": "mydomainlogindiscoveryhandler",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_MyDomainLoginDiscoveryHandler_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "The handler used to implement the My Domain Login Discovery page, which is an interview-based (two-step) login process. First the user is prompted for a unique identifier such as an email address or phone number. Then the handler determines (discovers) how to authenticate the user. Either the user enters a password or is directed to an identity providerâ€™s login page.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_interface_Auth_MyDomainLoginDiscoveryHandler.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "login(string,string,map<string,string>)": {
      "id": "Auth.mydomainlogindiscoveryhandler.method.login(string,string,map<string,string>)",
      "nodeType": "method",
      "name": "login",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "login",
        "textToLower": "login",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_login_-1:0"
      },
      "parentId": "Auth.mydomainlogindiscoveryhandler",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public System.PageReference login(String identifier, String startUrl, Map<String,String> requestAttributes)",
      "overrideSignature": "public override System.PageReference login(String identifier, String startUrl, Map<String,String> requestAttributes)",
      "simplifiedSignature": "login(String,String,Map<String,String>)",
      "datatype": {
        "id": "Auth.mydomainlogindiscoveryhandler.login.datatype.System.PageReference",
        "nodeType": "datatype",
        "name": "System.PageReference",
        "startToken": {
          "type": "datatype.support.class",
          "text": "System",
          "textToLower": "system",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_System_0:7"
        },
        "parentId": "Auth.mydomainlogindiscoveryhandler.login",
        "order": 0,
        "memberOrder": 0,
        "type": "System.PageReference"
      },
      "description": "Log in a Salesforce user given the specified identifier, such as email or phone number. If successful, redirect the user to the page specified by the start URL.",
      "parentName": "MyDomainLoginDiscoveryHandler",
      "variables": {},
      "params": {
        "identifier": {
          "id": "Auth.mydomainlogindiscoveryhandler.method.login(string,string,map<string,string>).varParam.identifier",
          "nodeType": "variable",
          "name": "identifier",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "identifier",
            "textToLower": "identifier",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 41
              },
              "end": {
                "line": 0,
                "character": 51
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_identifier_0:41"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "identifier",
            "textToLower": "identifier",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 41
              },
              "end": {
                "line": 0,
                "character": 51
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_identifier_0:41"
          },
          "parentId": "Auth.mydomainlogindiscoveryhandler.method.login(string,string,map<string,string>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.mydomainlogindiscoveryhandler.login.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 34
                },
                "end": {
                  "line": 0,
                  "character": 40
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:34"
            },
            "parentId": "Auth.mydomainlogindiscoveryhandler.login",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "starturl": {
          "id": "Auth.mydomainlogindiscoveryhandler.method.login(string,string,map<string,string>).varParam.starturl",
          "nodeType": "variable",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:60"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startUrl_0:60"
          },
          "parentId": "Auth.mydomainlogindiscoveryhandler.method.login(string,string,map<string,string>)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.mydomainlogindiscoveryhandler.login.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 53
                },
                "end": {
                  "line": 0,
                  "character": 59
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:53"
            },
            "parentId": "Auth.mydomainlogindiscoveryhandler.login",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "requestattributes": {
          "id": "Auth.mydomainlogindiscoveryhandler.method.login(string,string,map<string,string>).varParam.requestattributes",
          "nodeType": "variable",
          "name": "requestAttributes",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "requestAttributes",
            "textToLower": "requestattributes",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 89
              },
              "end": {
                "line": 0,
                "character": 106
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_requestAttributes_0:89"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "requestAttributes",
            "textToLower": "requestattributes",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 89
              },
              "end": {
                "line": 0,
                "character": 106
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_requestAttributes_0:89"
          },
          "parentId": "Auth.mydomainlogindiscoveryhandler.method.login(string,string,map<string,string>)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "Auth.mydomainlogindiscoveryhandler.login.datatype.Map<String,String>",
            "nodeType": "datatype",
            "name": "Map<String,String>",
            "startToken": {
              "type": "datatype.collection",
              "text": "Map",
              "textToLower": "map",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 70
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Map_0:70"
            },
            "parentId": "Auth.mydomainlogindiscoveryhandler.login",
            "order": 0,
            "memberOrder": 0,
            "type": "Map",
            "value": {
              "id": "Auth.mydomainlogindiscoveryhandler.login.datatype.Map<String,String>.value.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 81
                  },
                  "end": {
                    "line": 0,
                    "character": 87
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:81"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            },
            "key": {
              "id": "Auth.mydomainlogindiscoveryhandler.login.datatype.Map<String,String>.key.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 74
                  },
                  "end": {
                    "line": 0,
                    "character": 80
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:74"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            }
          },
          "description": "Identifier the Salesforce user entered at the login prompt, for example, an email address or phone number. The page users see after successfully logging in to the My Domain subdomain. Information about the login request based on the userâ€™s browser state when accessing the login page. requestAttributes passes in the MyDomainUrl, IpAddress, UserAgent, Platform, Application, City, Country, and Subdivision values. The City, Country, and Subdivision values come from IP address geolocation.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 1,
  "queries": []
}