{
  "id": "Auth.oauthrefreshresult",
  "nodeType": "class",
  "name": "OAuthRefreshResult",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "OAuthRefreshResult",
    "textToLower": "oauthrefreshresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_OAuthRefreshResult_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Stores the result of an AuthProviderPluginClass refresh method. OAuth authentication flow provides a refresh token that can be used to get a new access token. Access tokens have a limited lifetime as specified by the session timeout value. When an access token expires, use a refresh token to get a new access token.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_OAuthRefreshResult.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "accesstoken": {
      "id": "Auth.oauthrefreshresult.accesstoken",
      "nodeType": "property",
      "name": "accessToken",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "accessToken",
        "textToLower": "accesstoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_accessToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String accessToken {get; set;}",
      "simplifiedSignature": "String accessToken { get; set; }",
      "datatype": {
        "id": "Auth.oauthrefreshresult.accesstoken.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "The OAuth access token for the user who is currently logged in.",
      "getter": {
        "id": "Auth.oauthrefreshresult.accesstoken.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.oauthrefreshresult.accesstoken.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "error": {
      "id": "Auth.oauthrefreshresult.error",
      "nodeType": "property",
      "name": "error",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "error",
        "textToLower": "error",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_error_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String error {get; set;}",
      "simplifiedSignature": "String error { get; set; }",
      "datatype": {
        "id": "Auth.oauthrefreshresult.error.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Error that occurs when a user unsuccessfully attempts to authenticate with the custom authentication provider.",
      "getter": {
        "id": "Auth.oauthrefreshresult.error.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.oauthrefreshresult.error.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {},
  "constructors": {
    "oauthrefreshresult(string,string,string)": {
      "id": "Auth.oauthrefreshresult.oauthrefreshresult",
      "nodeType": "constructor",
      "name": "OAuthRefreshResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "OAuthRefreshResult",
        "textToLower": "oauthrefreshresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_OAuthRefreshResult_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public OAuthRefreshResult(String accessToken, String refreshToken, String error)",
      "simplifiedSignature": "OAuthRefreshResult(String,String,String)",
      "datatype": {
        "id": "Auth.oauthrefreshresult.oauthrefreshresult.constructor",
        "nodeType": "datatype",
        "name": "OAuthRefreshResult"
      },
      "description": "Creates an instance of the OAuthRefreshResult class using the specified access token, refresh token, and error for a custom authentication provider plug-in.",
      "params": {
        "accessToken": {
          "id": "Auth.oauthrefreshresult.oauthrefreshresult.accesstoken",
          "type": "var",
          "name": "accessToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accessToken",
            "textToLower": "accesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_accessToken_-1:0"
          },
          "signature": "String accessToken",
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "refreshToken": {
          "id": "Auth.oauthrefreshresult.oauthrefreshresult.refreshtoken",
          "type": "var",
          "name": "refreshToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "refreshToken",
            "textToLower": "refreshtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_refreshToken_-1:0"
          },
          "signature": "String refreshToken",
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "error": {
          "id": "Auth.oauthrefreshresult.oauthrefreshresult.error",
          "type": "var",
          "name": "error",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "error",
            "textToLower": "error",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_error_-1:0"
          },
          "signature": "String error",
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "oauthrefreshresult(string,string)": {
      "id": "Auth.oauthrefreshresult.oauthrefreshresult",
      "nodeType": "constructor",
      "name": "OAuthRefreshResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "OAuthRefreshResult",
        "textToLower": "oauthrefreshresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_OAuthRefreshResult_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public OAuthRefreshResult(String accessToken, String refreshToken)",
      "simplifiedSignature": "OAuthRefreshResult(String,String)",
      "datatype": {
        "id": "Auth.oauthrefreshresult.oauthrefreshresult.constructor",
        "nodeType": "datatype",
        "name": "OAuthRefreshResult"
      },
      "description": "Creates an instance of the OAuthRefreshResult class using the specified access token and refresh token for a custom authentication provider plug-in. Use this method when you know that the refresh was successful.",
      "params": {
        "accessToken": {
          "id": "Auth.oauthrefreshresult.oauthrefreshresult.accesstoken",
          "type": "var",
          "name": "accessToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accessToken",
            "textToLower": "accesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_accessToken_-1:0"
          },
          "signature": "String accessToken",
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "refreshToken": {
          "id": "Auth.oauthrefreshresult.oauthrefreshresult.refreshtoken",
          "type": "var",
          "name": "refreshToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "refreshToken",
            "textToLower": "refreshtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_refreshToken_-1:0"
          },
          "signature": "String refreshToken",
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}