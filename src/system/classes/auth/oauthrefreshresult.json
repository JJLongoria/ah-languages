{
  "id": "Auth.oauthrefreshresult",
  "nodeType": "class",
  "name": "OAuthRefreshResult",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "OAuthRefreshResult",
    "textToLower": "oauthrefreshresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_OAuthRefreshResult_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Stores the result of an AuthProviderPluginClass refresh method. OAuth authentication flow provides a refresh token that can be used to get a new access token. Access tokens have a limited lifetime as specified by the session timeout value. When an access token expires, use a refresh token to get a new access token.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_OAuthRefreshResult.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "accesstoken": {
      "id": "Auth.oauthrefreshresult.method.string accesstoken{get;set;}",
      "nodeType": "property",
      "name": "accessToken",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "accessToken",
        "textToLower": "accesstoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_accessToken_-1:0"
      },
      "parentId": "Auth.oauthrefreshresult",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String accessToken { get; set; }",
      "simplifiedSignature": "String accessToken{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "OAuthRefreshResult",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    },
    "error": {
      "id": "Auth.oauthrefreshresult.method.string error{get;set;}",
      "nodeType": "property",
      "name": "error",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "error",
        "textToLower": "error",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_error_-1:0"
      },
      "parentId": "Auth.oauthrefreshresult",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String error { get; set; }",
      "simplifiedSignature": "String error{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "OAuthRefreshResult",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    }
  },
  "methods": {},
  "constructors": {
    "oauthrefreshresult(string,string,string)": {
      "id": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string,string)",
      "nodeType": "constructor",
      "name": "OAuthRefreshResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "OAuthRefreshResult",
        "textToLower": "oauthrefreshresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_OAuthRefreshResult_-1:0"
      },
      "parentId": "Auth.oauthrefreshresult",
      "order": 1,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public OAuthRefreshResult(String accessToken, String refreshToken, String error)",
      "overrideSignature": "public override OAuthRefreshResult(String accessToken, String refreshToken, String error)",
      "simplifiedSignature": "OAuthRefreshResult(String,String,String)",
      "description": "Creates an instance of the OAuthRefreshResult class using the specified access token, refresh token, and error for a custom authentication provider plug-in.",
      "parentName": "OAuthRefreshResult",
      "variables": {},
      "params": {
        "accesstoken": {
          "id": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string,string).varParam.accesstoken",
          "nodeType": "variable",
          "name": "accessToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accessToken",
            "textToLower": "accesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 33
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_accessToken_0:33"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "accessToken",
            "textToLower": "accesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 33
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_accessToken_0:33"
          },
          "parentId": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 26
                },
                "end": {
                  "line": 0,
                  "character": 32
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:26"
            },
            "parentId": "Auth.oauthrefreshresult.oauthrefreshresult",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "refreshtoken": {
          "id": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string,string).varParam.refreshtoken",
          "nodeType": "variable",
          "name": "refreshToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "refreshToken",
            "textToLower": "refreshtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_refreshToken_0:53"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "refreshToken",
            "textToLower": "refreshtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_refreshToken_0:53"
          },
          "parentId": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 52
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:46"
            },
            "parentId": "Auth.oauthrefreshresult.oauthrefreshresult",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "error": {
          "id": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string,string).varParam.error",
          "nodeType": "variable",
          "name": "error",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "error",
            "textToLower": "error",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 79
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_error_0:74"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "error",
            "textToLower": "error",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 79
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_error_0:74"
          },
          "parentId": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 67
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:67"
            },
            "parentId": "Auth.oauthrefreshresult.oauthrefreshresult",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "OAuth access token for the user who is currently logged in. OAuth refresh token for the user who is currently logged in. Error that occurred when a user attempted to authenticate with the custom authentication provider.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "oauthrefreshresult(string,string)": {
      "id": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string)",
      "nodeType": "constructor",
      "name": "OAuthRefreshResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "OAuthRefreshResult",
        "textToLower": "oauthrefreshresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_OAuthRefreshResult_-1:0"
      },
      "parentId": "Auth.oauthrefreshresult",
      "order": 2,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public OAuthRefreshResult(String accessToken, String refreshToken)",
      "overrideSignature": "public override OAuthRefreshResult(String accessToken, String refreshToken)",
      "simplifiedSignature": "OAuthRefreshResult(String,String)",
      "description": "Creates an instance of the OAuthRefreshResult class using the specified access token and refresh token for a custom authentication provider plug-in. Use this method when you know that the refresh was successful.",
      "parentName": "OAuthRefreshResult",
      "variables": {},
      "params": {
        "accesstoken": {
          "id": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string).varParam.accesstoken",
          "nodeType": "variable",
          "name": "accessToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accessToken",
            "textToLower": "accesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 33
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_accessToken_0:33"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "accessToken",
            "textToLower": "accesstoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 33
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_accessToken_0:33"
          },
          "parentId": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 26
                },
                "end": {
                  "line": 0,
                  "character": 32
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:26"
            },
            "parentId": "Auth.oauthrefreshresult.oauthrefreshresult",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "refreshtoken": {
          "id": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string).varParam.refreshtoken",
          "nodeType": "variable",
          "name": "refreshToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "refreshToken",
            "textToLower": "refreshtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_refreshToken_0:53"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "refreshToken",
            "textToLower": "refreshtoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_refreshToken_0:53"
          },
          "parentId": "Auth.oauthrefreshresult.method.oauthrefreshresult(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.oauthrefreshresult.oauthrefreshresult.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 52
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:46"
            },
            "parentId": "Auth.oauthrefreshresult.oauthrefreshresult",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The OAuth access token for the user who is logged in. The OAuth refresh token for the user who is logged in.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 4,
  "queries": []
}