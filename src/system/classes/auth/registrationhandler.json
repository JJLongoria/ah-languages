{
  "id": "Auth.registrationhandler",
  "nodeType": "interface",
  "name": "RegistrationHandler",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "RegistrationHandler",
    "textToLower": "registrationhandler",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_RegistrationHandler_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Salesforce provides the ability to use an authentication provider, such as Facebook© or Janrain©, for single sign-on into Salesforce.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_auth_plugin.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "createuser(id,auth.userdata)": {
      "id": "Auth.registrationhandler.createuser",
      "nodeType": "method",
      "name": "createUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createUser",
        "textToLower": "createuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public User createUser(ID portalId, Auth.UserData userData)",
      "simplifiedSignature": "createUser(ID,Auth.UserData)",
      "datatype": {
        "id": "Auth.registrationhandler.createuser.User",
        "nodeType": "datatype",
        "name": "User"
      },
      "description": "Returns a User object using the specified portal ID and user information from the third party, such as the username and email address. The User object corresponds to the third party’s user information and may be a new user that hasn’t been inserted in the database or may represent an existing user record in the database.",
      "params": {
        "portalId": {
          "id": "Auth.registrationhandler.createuser.portalid",
          "type": "var",
          "name": "portalId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "portalId",
            "textToLower": "portalid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_portalId_-1:0"
          },
          "signature": "ID portalId",
          "datatype": {
            "id": "Auth.registrationhandler.createuser.id",
            "nodeType": "datatype",
            "name": "ID"
          }
        },
        "userData": {
          "id": "Auth.registrationhandler.createuser.userdata",
          "type": "var",
          "name": "userData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userData",
            "textToLower": "userdata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userData_-1:0"
          },
          "signature": "Auth.UserData userData",
          "datatype": {
            "id": "Auth.registrationhandler.createuser.auth.userdata",
            "nodeType": "datatype",
            "name": "Auth.UserData"
          }
        }
      }
    },
    "updateuser(id,id,auth.userdata)": {
      "id": "Auth.registrationhandler.updateuser",
      "nodeType": "method",
      "name": "updateUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateUser",
        "textToLower": "updateuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void updateUser(ID userId, ID portalId, Auth.UserData userData)",
      "simplifiedSignature": "updateUser(ID,ID,Auth.UserData)",
      "datatype": {
        "id": "Auth.registrationhandler.updateuser.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Updates the specified user’s information. This method is called if the user has logged in before with the authorization provider and then logs in again.",
      "params": {
        "userId": {
          "id": "Auth.registrationhandler.updateuser.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "ID userId",
          "datatype": {
            "id": "Auth.registrationhandler.updateuser.id",
            "nodeType": "datatype",
            "name": "ID"
          }
        },
        "portalId": {
          "id": "Auth.registrationhandler.updateuser.portalid",
          "type": "var",
          "name": "portalId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "portalId",
            "textToLower": "portalid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_portalId_-1:0"
          },
          "signature": "ID portalId",
          "datatype": {
            "id": "Auth.registrationhandler.updateuser.id",
            "nodeType": "datatype",
            "name": "ID"
          }
        },
        "userData": {
          "id": "Auth.registrationhandler.updateuser.userdata",
          "type": "var",
          "name": "userData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userData",
            "textToLower": "userdata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userData_-1:0"
          },
          "signature": "Auth.UserData userData",
          "datatype": {
            "id": "Auth.registrationhandler.updateuser.auth.userdata",
            "nodeType": "datatype",
            "name": "Auth.UserData"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}