{
  "id": "Auth.registrationhandler",
  "nodeType": "interface",
  "name": "RegistrationHandler",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "RegistrationHandler",
    "textToLower": "registrationhandler",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_RegistrationHandler_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Salesforce provides the ability to use an authentication provider, such as Facebook© or Janrain©, for single sign-on into Salesforce.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_auth_plugin.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "createuser(id,auth.userdata)": {
      "id": "Auth.registrationhandler.method.createuser(id,auth.userdata)",
      "nodeType": "method",
      "name": "createUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createUser",
        "textToLower": "createuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createUser_-1:0"
      },
      "parentId": "Auth.registrationhandler",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public User createUser(ID portalId, Auth.UserData userData)",
      "overrideSignature": "public override User createUser(ID portalId, Auth.UserData userData)",
      "simplifiedSignature": "createUser(ID,Auth.UserData)",
      "datatype": {
        "id": "Auth.registrationhandler.createuser.datatype.User",
        "nodeType": "datatype",
        "name": "User",
        "startToken": {
          "type": "datatype.support.sobject",
          "text": "User",
          "textToLower": "user",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_User_0:7"
        },
        "parentId": "Auth.registrationhandler.createuser",
        "order": 0,
        "memberOrder": 0,
        "type": "User"
      },
      "description": "Returns a User object using the specified portal ID and user information from the third party, such as the username and email address. The User object corresponds to the third party’s user information and may be a new user that hasn’t been inserted in the database or may represent an existing user record in the database.",
      "parentName": "RegistrationHandler",
      "variables": {},
      "params": {
        "portalid": {
          "id": "Auth.registrationhandler.method.createuser(id,auth.userdata).varParam.portalid",
          "nodeType": "variable",
          "name": "portalId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "portalId",
            "textToLower": "portalid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 34
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_portalId_0:26"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "portalId",
            "textToLower": "portalid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 34
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_portalId_0:26"
          },
          "parentId": "Auth.registrationhandler.method.createuser(id,auth.userdata)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.registrationhandler.createuser.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 23
                },
                "end": {
                  "line": 0,
                  "character": 25
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:23"
            },
            "parentId": "Auth.registrationhandler.createuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "scope": null
        },
        "userdata": {
          "id": "Auth.registrationhandler.method.createuser(id,auth.userdata).varParam.userdata",
          "nodeType": "variable",
          "name": "userData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userData",
            "textToLower": "userdata",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 58
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userData_0:50"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userData",
            "textToLower": "userdata",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 58
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userData_0:50"
          },
          "parentId": "Auth.registrationhandler.method.createuser(id,auth.userdata)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.registrationhandler.createuser.datatype.Auth.UserData",
            "nodeType": "datatype",
            "name": "Auth.UserData",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Auth",
              "textToLower": "auth",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 36
                },
                "end": {
                  "line": 0,
                  "character": 40
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Auth_0:36"
            },
            "parentId": "Auth.registrationhandler.createuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Auth.UserData"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updateuser(id,id,auth.userdata)": {
      "id": "Auth.registrationhandler.method.updateuser(id,id,auth.userdata)",
      "nodeType": "method",
      "name": "updateUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateUser",
        "textToLower": "updateuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateUser_-1:0"
      },
      "parentId": "Auth.registrationhandler",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void updateUser(ID userId, ID portalId, Auth.UserData userData)",
      "overrideSignature": "public override Void updateUser(ID userId, ID portalId, Auth.UserData userData)",
      "simplifiedSignature": "updateUser(ID,ID,Auth.UserData)",
      "datatype": {
        "id": "Auth.registrationhandler.updateuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Auth.registrationhandler.updateuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Updates the specified user’s information. This method is called if the user has logged in before with the authorization provider and then logs in again.",
      "parentName": "RegistrationHandler",
      "variables": {},
      "params": {
        "userid": {
          "id": "Auth.registrationhandler.method.updateuser(id,id,auth.userdata).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 32
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:26"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 32
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:26"
          },
          "parentId": "Auth.registrationhandler.method.updateuser(id,id,auth.userdata)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Auth.registrationhandler.updateuser.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 23
                },
                "end": {
                  "line": 0,
                  "character": 25
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:23"
            },
            "parentId": "Auth.registrationhandler.updateuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "scope": null
        },
        "portalid": {
          "id": "Auth.registrationhandler.method.updateuser(id,id,auth.userdata).varParam.portalid",
          "nodeType": "variable",
          "name": "portalId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "portalId",
            "textToLower": "portalid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_portalId_0:37"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "portalId",
            "textToLower": "portalid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_portalId_0:37"
          },
          "parentId": "Auth.registrationhandler.method.updateuser(id,id,auth.userdata)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "Auth.registrationhandler.updateuser.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 34
                },
                "end": {
                  "line": 0,
                  "character": 36
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:34"
            },
            "parentId": "Auth.registrationhandler.updateuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "scope": null
        },
        "userdata": {
          "id": "Auth.registrationhandler.method.updateuser(id,id,auth.userdata).varParam.userdata",
          "nodeType": "variable",
          "name": "userData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userData",
            "textToLower": "userdata",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userData_0:61"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userData",
            "textToLower": "userdata",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userData_0:61"
          },
          "parentId": "Auth.registrationhandler.method.updateuser(id,id,auth.userdata)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "Auth.registrationhandler.updateuser.datatype.Auth.UserData",
            "nodeType": "datatype",
            "name": "Auth.UserData",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Auth",
              "textToLower": "auth",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 47
                },
                "end": {
                  "line": 0,
                  "character": 51
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Auth_0:47"
            },
            "parentId": "Auth.registrationhandler.updateuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Auth.UserData"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 2,
  "queries": []
}