{
  "id": "Auth.verificationresult",
  "nodeType": "class",
  "name": "VerificationResult",
  "namespace": "Auth",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "VerificationResult",
    "textToLower": "verificationresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_VerificationResult_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains the result of a verification challenge that you invoke when you create your own Verify page. The challenge can be initiated by either the System.UserManagement.verifyPasswordlessLogin or System.UserManagement.verifySelfRegistration method.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Auth_VerificationResult.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "message": {
      "id": "Auth.verificationresult.message",
      "nodeType": "property",
      "name": "message",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "message",
        "textToLower": "message",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_message_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String message {get; set;}",
      "simplifiedSignature": "String message { get; set; }",
      "datatype": {
        "id": "Auth.verificationresult.message.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Message that displays as a result of a verification challenge. SUCCESS if the identity verification is successful. Other values are FAILURE, PENDING, RATE_LIMITED, or FAILURE_REPORT.",
      "getter": {
        "id": "Auth.verificationresult.message.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.verificationresult.message.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "redirect": {
      "id": "Auth.verificationresult.redirect",
      "nodeType": "property",
      "name": "redirect",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "redirect",
        "textToLower": "redirect",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_redirect_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.PageReference redirect {get; set;}",
      "simplifiedSignature": "System.PageReference redirect { get; set; }",
      "datatype": {
        "id": "Auth.verificationresult.redirect.system.pagereference",
        "nodeType": "datatype",
        "name": "System.PageReference"
      },
      "description": "Where the user is directed after entering the verification code successfully, for example, the community home page or location specified by the start URL.",
      "getter": {
        "id": "Auth.verificationresult.redirect.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.verificationresult.redirect.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "success": {
      "id": "Auth.verificationresult.success",
      "nodeType": "property",
      "name": "success",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "success",
        "textToLower": "success",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_success_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean success {get; set;}",
      "simplifiedSignature": "Boolean success { get; set; }",
      "datatype": {
        "id": "Auth.verificationresult.success.boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "The verification challenge is successful.",
      "getter": {
        "id": "Auth.verificationresult.success.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Auth.verificationresult.success.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {
    "clone()": {
      "id": "Auth.verificationresult.clone",
      "nodeType": "method",
      "name": "clone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clone",
        "textToLower": "clone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public VerificationResult clone()",
      "simplifiedSignature": "clone()",
      "datatype": {
        "id": "Auth.verificationresult.clone.VerificationResult",
        "nodeType": "datatype",
        "name": "VerificationResult"
      },
      "description": "Duplicates the Auth.VerificationResult object.",
      "params": {}
    }
  },
  "constructors": {
    "verificationresult(system.pagereference,boolean,string)": {
      "id": "Auth.verificationresult.verificationresult",
      "nodeType": "constructor",
      "name": "VerificationResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "VerificationResult",
        "textToLower": "verificationresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_VerificationResult_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public VerificationResult(System.PageReference redirect, Boolean success, String message)",
      "simplifiedSignature": "VerificationResult(System.PageReference,Boolean,String)",
      "datatype": {
        "id": "Auth.verificationresult.verificationresult.constructor",
        "nodeType": "datatype",
        "name": "VerificationResult"
      },
      "description": "Creates an instance of the VerificationResult class that contains the verification result from System.UserManagement.verifySelfRegistration.",
      "params": {
        "redirect": {
          "id": "Auth.verificationresult.verificationresult.redirect",
          "type": "var",
          "name": "redirect",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "redirect",
            "textToLower": "redirect",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_redirect_-1:0"
          },
          "signature": "System.PageReference redirect",
          "datatype": {
            "id": "Auth.verificationresult.verificationresult.system.pagereference",
            "nodeType": "datatype",
            "name": "System.PageReference"
          }
        },
        "success": {
          "id": "Auth.verificationresult.verificationresult.success",
          "type": "var",
          "name": "success",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "success",
            "textToLower": "success",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_success_-1:0"
          },
          "signature": "Boolean success",
          "datatype": {
            "id": "Auth.verificationresult.verificationresult.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        },
        "message": {
          "id": "Auth.verificationresult.verificationresult.message",
          "type": "var",
          "name": "message",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "message",
            "textToLower": "message",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_message_-1:0"
          },
          "signature": "String message",
          "datatype": {
            "id": "Auth.verificationresult.verificationresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}