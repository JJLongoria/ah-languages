{
  "id": "Cache.sessionpartition",
  "type": "class",
  "name": "SessionPartition",
  "namespace": "Cache",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "SessionPartition",
    "textToLower": "sessionpartition",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_SessionPartition_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods to manage cache values in the session cache of a specific partition.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_cache_SessionPartition.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "contains(string)": {
      "id": "Cache.sessionpartition.contains",
      "type": "method",
      "name": "contains",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "contains",
        "textToLower": "contains",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_contains_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean contains(String key)",
      "simplifiedSignature": "contains(String)",
      "datatype": {
        "id": "Cache.sessionpartition.contains.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the cache partition contains a cached value corresponding to the specified key.",
      "variables": {
        "key": {
          "id": "Cache.sessionpartition.contains.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.contains.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "get(string)": {
      "id": "Cache.sessionpartition.get",
      "type": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object get(String key)",
      "simplifiedSignature": "get(String)",
      "datatype": {
        "id": "Cache.sessionpartition.get.Object",
        "type": "datatype",
        "name": "Object"
      },
      "description": "Returns the cached value corresponding to the specified key from the cache partition.",
      "variables": {
        "key": {
          "id": "Cache.sessionpartition.get.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.get.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "get(system.type,string)": {
      "id": "Cache.sessionpartition.get",
      "type": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object get(System.Type cacheBuilder, String key)",
      "simplifiedSignature": "get(System.Type,String)",
      "datatype": {
        "id": "Cache.sessionpartition.get.Object",
        "type": "datatype",
        "name": "Object"
      },
      "description": "Returns the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "variables": {
        "cacheBuilder": {
          "id": "Cache.sessionpartition.get.cachebuilder",
          "type": "var",
          "name": "cacheBuilder",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "cacheBuilder",
            "textToLower": "cachebuilder",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_cacheBuilder_-1:0"
          },
          "signature": "System.Type cacheBuilder",
          "datatype": {
            "id": "Cache.sessionpartition.get.system.type",
            "type": "datatype",
            "name": "System.Type"
          }
        },
        "key": {
          "id": "Cache.sessionpartition.get.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.get.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getavggettime()": {
      "id": "Cache.sessionpartition.getavggettime",
      "type": "method",
      "name": "getAvgGetTime",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAvgGetTime",
        "textToLower": "getavggettime",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAvgGetTime_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long getAvgGetTime()",
      "simplifiedSignature": "getAvgGetTime()",
      "datatype": {
        "id": "Cache.sessionpartition.getavggettime.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the average time taken to get a key from the partition, in nanoseconds.",
      "variables": {}
    },
    "getavgvaluesize()": {
      "id": "Cache.sessionpartition.getavgvaluesize",
      "type": "method",
      "name": "getAvgValueSize",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAvgValueSize",
        "textToLower": "getavgvaluesize",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAvgValueSize_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long getAvgValueSize()",
      "simplifiedSignature": "getAvgValueSize()",
      "datatype": {
        "id": "Cache.sessionpartition.getavgvaluesize.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the average item size for keys in the partition, in bytes.",
      "variables": {}
    },
    "getcapacity()": {
      "id": "Cache.sessionpartition.getcapacity",
      "type": "method",
      "name": "getCapacity",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCapacity",
        "textToLower": "getcapacity",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCapacity_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Double getCapacity()",
      "simplifiedSignature": "getCapacity()",
      "datatype": {
        "id": "Cache.sessionpartition.getcapacity.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the percentage of cache used of the total capacity for this partition.",
      "variables": {}
    },
    "getkeys()": {
      "id": "Cache.sessionpartition.getkeys",
      "type": "method",
      "name": "getKeys",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getKeys",
        "textToLower": "getkeys",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getKeys_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Set<String> getKeys()",
      "simplifiedSignature": "getKeys()",
      "datatype": {
        "id": "Cache.sessionpartition.getkeys.Set<String>",
        "type": "datatype",
        "name": "Set<String>"
      },
      "description": "Returns a set of all keys that are stored in the cache partition and visible to the invoking namespace.",
      "variables": {}
    },
    "getmaxgettime()": {
      "id": "Cache.sessionpartition.getmaxgettime",
      "type": "method",
      "name": "getMaxGetTime",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getMaxGetTime",
        "textToLower": "getmaxgettime",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getMaxGetTime_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long getMaxGetTime()",
      "simplifiedSignature": "getMaxGetTime()",
      "datatype": {
        "id": "Cache.sessionpartition.getmaxgettime.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the maximum time taken to get a key from the partition, in nanoseconds.",
      "variables": {}
    },
    "getmaxvaluesize()": {
      "id": "Cache.sessionpartition.getmaxvaluesize",
      "type": "method",
      "name": "getMaxValueSize",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getMaxValueSize",
        "textToLower": "getmaxvaluesize",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getMaxValueSize_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long getMaxValueSize()",
      "simplifiedSignature": "getMaxValueSize()",
      "datatype": {
        "id": "Cache.sessionpartition.getmaxvaluesize.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the maximum item size for keys in the partition, in bytes.",
      "variables": {}
    },
    "getmissrate()": {
      "id": "Cache.sessionpartition.getmissrate",
      "type": "method",
      "name": "getMissRate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getMissRate",
        "textToLower": "getmissrate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getMissRate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Double getMissRate()",
      "simplifiedSignature": "getMissRate()",
      "datatype": {
        "id": "Cache.sessionpartition.getmissrate.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the miss rate in the partition.",
      "variables": {}
    },
    "getname()": {
      "id": "Cache.sessionpartition.getname",
      "type": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "Cache.sessionpartition.getname.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the name of this cache partition.",
      "variables": {}
    },
    "getnumkeys()": {
      "id": "Cache.sessionpartition.getnumkeys",
      "type": "method",
      "name": "getNumKeys",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNumKeys",
        "textToLower": "getnumkeys",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNumKeys_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long getNumKeys()",
      "simplifiedSignature": "getNumKeys()",
      "datatype": {
        "id": "Cache.sessionpartition.getnumkeys.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the total number of keys in the partition.",
      "variables": {}
    },
    "isavailable()": {
      "id": "Cache.sessionpartition.isavailable",
      "type": "method",
      "name": "isAvailable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAvailable",
        "textToLower": "isavailable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAvailable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAvailable()",
      "simplifiedSignature": "isAvailable()",
      "datatype": {
        "id": "Cache.sessionpartition.isavailable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the Salesforce session is available. Only applies to Cache.SessionPartition. The session cache isn’t available when an active session isn’t present, such as in asynchronous Apex or code called by asynchronous Apex. For example, if batch Apex causes an Apex trigger to execute, the session cache isn’t available in the trigger because the trigger runs in asynchronous context.",
      "variables": {}
    },
    "put(string,object)": {
      "id": "Cache.sessionpartition.put",
      "type": "method",
      "name": "put",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "put",
        "textToLower": "put",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_put_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void put(String key, Object value)",
      "simplifiedSignature": "put(String,Object)",
      "datatype": {
        "id": "Cache.sessionpartition.put.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. The put method can write only to the cache in your org’s namespace.",
      "variables": {
        "key": {
          "id": "Cache.sessionpartition.put.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.put.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "Cache.sessionpartition.put.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "Object value",
          "datatype": {
            "id": "Cache.sessionpartition.put.object",
            "type": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "put(string,object,cache.visibility)": {
      "id": "Cache.sessionpartition.put",
      "type": "method",
      "name": "put",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "put",
        "textToLower": "put",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_put_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void put(String key, Object value, cache.Visibility visibility)",
      "simplifiedSignature": "put(String,Object,cache.Visibility)",
      "datatype": {
        "id": "Cache.sessionpartition.put.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s visibility.",
      "variables": {
        "key": {
          "id": "Cache.sessionpartition.put.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.put.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "Cache.sessionpartition.put.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "Object value",
          "datatype": {
            "id": "Cache.sessionpartition.put.object",
            "type": "datatype",
            "name": "Object"
          }
        },
        "visibility": {
          "id": "Cache.sessionpartition.put.visibility",
          "type": "var",
          "name": "visibility",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "visibility",
            "textToLower": "visibility",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_visibility_-1:0"
          },
          "signature": "cache.Visibility visibility",
          "datatype": {
            "id": "Cache.sessionpartition.put.cache.visibility",
            "type": "datatype",
            "name": "cache.Visibility"
          }
        }
      }
    },
    "put(string,object,integer)": {
      "id": "Cache.sessionpartition.put",
      "type": "method",
      "name": "put",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "put",
        "textToLower": "put",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_put_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void put(String key, Object value, Integer ttlSecs)",
      "simplifiedSignature": "put(String,Object,Integer)",
      "datatype": {
        "id": "Cache.sessionpartition.put.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Stores the specified key/value pair as a cached entry in the cache partition and sets the cached value’s lifetime.",
      "variables": {
        "key": {
          "id": "Cache.sessionpartition.put.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.put.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "Cache.sessionpartition.put.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "Object value",
          "datatype": {
            "id": "Cache.sessionpartition.put.object",
            "type": "datatype",
            "name": "Object"
          }
        },
        "ttlSecs": {
          "id": "Cache.sessionpartition.put.ttlsecs",
          "type": "var",
          "name": "ttlSecs",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "ttlSecs",
            "textToLower": "ttlsecs",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_ttlSecs_-1:0"
          },
          "signature": "Integer ttlSecs",
          "datatype": {
            "id": "Cache.sessionpartition.put.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "put(string,object,integer,cache.visibility,boolean)": {
      "id": "Cache.sessionpartition.put",
      "type": "method",
      "name": "put",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "put",
        "textToLower": "put",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_put_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void put(String key, Object value, Integer ttlSecs, cache.Visibility visibility, Boolean immutable)",
      "simplifiedSignature": "put(String,Object,Integer,cache.Visibility,Boolean)",
      "datatype": {
        "id": "Cache.sessionpartition.put.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Stores the specified key/value pair as a cached entry in the cache partition. This method also sets the cached value’s lifetime, visibility, and whether it can be overwritten by another namespace.",
      "variables": {
        "key": {
          "id": "Cache.sessionpartition.put.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.put.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "Cache.sessionpartition.put.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "Object value",
          "datatype": {
            "id": "Cache.sessionpartition.put.object",
            "type": "datatype",
            "name": "Object"
          }
        },
        "ttlSecs": {
          "id": "Cache.sessionpartition.put.ttlsecs",
          "type": "var",
          "name": "ttlSecs",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "ttlSecs",
            "textToLower": "ttlsecs",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_ttlSecs_-1:0"
          },
          "signature": "Integer ttlSecs",
          "datatype": {
            "id": "Cache.sessionpartition.put.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "visibility": {
          "id": "Cache.sessionpartition.put.visibility",
          "type": "var",
          "name": "visibility",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "visibility",
            "textToLower": "visibility",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_visibility_-1:0"
          },
          "signature": "cache.Visibility visibility",
          "datatype": {
            "id": "Cache.sessionpartition.put.cache.visibility",
            "type": "datatype",
            "name": "cache.Visibility"
          }
        },
        "immutable": {
          "id": "Cache.sessionpartition.put.immutable",
          "type": "var",
          "name": "immutable",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "immutable",
            "textToLower": "immutable",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_immutable_-1:0"
          },
          "signature": "Boolean immutable",
          "datatype": {
            "id": "Cache.sessionpartition.put.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "remove(string)": {
      "id": "Cache.sessionpartition.remove",
      "type": "method",
      "name": "remove",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "remove",
        "textToLower": "remove",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_remove_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean remove(String key)",
      "simplifiedSignature": "remove(String)",
      "datatype": {
        "id": "Cache.sessionpartition.remove.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Deletes the cached value corresponding to the specified key from this cache partition.",
      "variables": {
        "key": {
          "id": "Cache.sessionpartition.remove.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.remove.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "remove(system.type,string)": {
      "id": "Cache.sessionpartition.remove",
      "type": "method",
      "name": "remove",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "remove",
        "textToLower": "remove",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_remove_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean remove(System.Type cacheBuilder, String key)",
      "simplifiedSignature": "remove(System.Type,String)",
      "datatype": {
        "id": "Cache.sessionpartition.remove.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Deletes the cached value corresponding to the specified key from the partition cache. Use this method if your cached value is a class that implements the CacheBuilder interface.",
      "variables": {
        "cacheBuilder": {
          "id": "Cache.sessionpartition.remove.cachebuilder",
          "type": "var",
          "name": "cacheBuilder",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "cacheBuilder",
            "textToLower": "cachebuilder",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_cacheBuilder_-1:0"
          },
          "signature": "System.Type cacheBuilder",
          "datatype": {
            "id": "Cache.sessionpartition.remove.system.type",
            "type": "datatype",
            "name": "System.Type"
          }
        },
        "key": {
          "id": "Cache.sessionpartition.remove.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Cache.sessionpartition.remove.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "Partition",
  "implementTypes": [],
  "implements": {}
}