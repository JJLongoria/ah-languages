{
  "id": "commercepayments.auditparamsrequest",
  "nodeType": "class",
  "name": "AuditParamsRequest",
  "namespace": "commercepayments",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "AuditParamsRequest",
    "textToLower": "auditparamsrequest",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_AuditParamsRequest_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "AuditParamsRequest is used for audit parameters in a transaction request. This is an abstract request class that is extended by the BaseRequest class.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_commercepayments_AuditParamsRequest.htm#apex_class_commerce_payments_AuditParamsRequest",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "email": {
      "id": "commercepayments.auditparamsrequest.method.string email{get;set;}",
      "nodeType": "property",
      "name": "email",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "email",
        "textToLower": "email",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_email_-1:0"
      },
      "parentId": "commercepayments.auditparamsrequest",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String email { get; set; }",
      "simplifiedSignature": "String email{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "AuditParamsRequest",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    },
    "ipaddress": {
      "id": "commercepayments.auditparamsrequest.method.string ipaddress{get;set;}",
      "nodeType": "property",
      "name": "ipAddress",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "ipAddress",
        "textToLower": "ipaddress",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_ipAddress_-1:0"
      },
      "parentId": "commercepayments.auditparamsrequest",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String ipAddress { get; set; }",
      "simplifiedSignature": "String ipAddress{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "AuditParamsRequest",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    },
    "macaddress": {
      "id": "commercepayments.auditparamsrequest.method.string macaddress{get;set;}",
      "nodeType": "property",
      "name": "macAddress",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "macAddress",
        "textToLower": "macaddress",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_macAddress_-1:0"
      },
      "parentId": "commercepayments.auditparamsrequest",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String macAddress { get; set; }",
      "simplifiedSignature": "String macAddress{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "AuditParamsRequest",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    },
    "phone": {
      "id": "commercepayments.auditparamsrequest.method.string phone{get;set;}",
      "nodeType": "property",
      "name": "phone",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "phone",
        "textToLower": "phone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_phone_-1:0"
      },
      "parentId": "commercepayments.auditparamsrequest",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String phone { get; set; }",
      "simplifiedSignature": "String phone{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "AuditParamsRequest",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    }
  },
  "methods": {},
  "constructors": {
    "auditparamsrequest(string,string,string,string)": {
      "id": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string)",
      "nodeType": "constructor",
      "name": "AuditParamsRequest",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "AuditParamsRequest",
        "textToLower": "auditparamsrequest",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_AuditParamsRequest_-1:0"
      },
      "parentId": "commercepayments.auditparamsrequest",
      "order": 1,
      "memberOrder": 5,
      "signature": "AuditParamsRequest(String email, String macAddress, String ipAddress, String phone)",
      "overrideSignature": "override AuditParamsRequest(String email, String macAddress, String ipAddress, String phone)",
      "simplifiedSignature": "AuditParamsRequest(String,String,String,String)",
      "description": "This constructor is intended for test usage and throws an exception if used outside of the Apex test context.",
      "parentName": "AuditParamsRequest",
      "variables": {},
      "params": {
        "email": {
          "id": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string).varParam.email",
          "nodeType": "variable",
          "name": "email",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "email",
            "textToLower": "email",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 31
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_email_0:26"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "email",
            "textToLower": "email",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 31
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_email_0:26"
          },
          "parentId": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "commercepayments.auditparamsrequest.auditparamsrequest.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 19
                },
                "end": {
                  "line": 0,
                  "character": 25
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:19"
            },
            "parentId": "commercepayments.auditparamsrequest.auditparamsrequest",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Email of the client that initiated the request.",
          "scope": null
        },
        "macaddress": {
          "id": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string).varParam.macaddress",
          "nodeType": "variable",
          "name": "macAddress",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "macAddress",
            "textToLower": "macaddress",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 40
              },
              "end": {
                "line": 0,
                "character": 50
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_macAddress_0:40"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "macAddress",
            "textToLower": "macaddress",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 40
              },
              "end": {
                "line": 0,
                "character": 50
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_macAddress_0:40"
          },
          "parentId": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "commercepayments.auditparamsrequest.auditparamsrequest.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 33
                },
                "end": {
                  "line": 0,
                  "character": 39
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:33"
            },
            "parentId": "commercepayments.auditparamsrequest.auditparamsrequest",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Mac address of the customer’s device. Gateways often use this data in risk checks.",
          "scope": null
        },
        "ipaddress": {
          "id": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string).varParam.ipaddress",
          "nodeType": "variable",
          "name": "ipAddress",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "ipAddress",
            "textToLower": "ipaddress",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_ipAddress_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "ipAddress",
            "textToLower": "ipaddress",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_ipAddress_0:59"
          },
          "parentId": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "commercepayments.auditparamsrequest.auditparamsrequest.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "commercepayments.auditparamsrequest.auditparamsrequest",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The customer’s IP address. Gateways often use this data in risk checks.",
          "scope": null
        },
        "phone": {
          "id": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string).varParam.phone",
          "nodeType": "variable",
          "name": "phone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "phone",
            "textToLower": "phone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_phone_0:77"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "phone",
            "textToLower": "phone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_phone_0:77"
          },
          "parentId": "commercepayments.auditparamsrequest.method.auditparamsrequest(string,string,string,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "commercepayments.auditparamsrequest.auditparamsrequest.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 70
                },
                "end": {
                  "line": 0,
                  "character": 76
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:70"
            },
            "parentId": "commercepayments.auditparamsrequest.auditparamsrequest",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Phone number of the client that initiated the request.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 5,
  "queries": []
}