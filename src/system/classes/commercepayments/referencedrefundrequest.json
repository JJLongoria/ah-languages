{
  "id": "commercepayments.referencedrefundrequest",
  "nodeType": "class",
  "name": "ReferencedRefundRequest",
  "namespace": "commercepayments",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ReferencedRefundRequest",
    "textToLower": "referencedrefundrequest",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ReferencedRefundRequest_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Access information about the referenced refund requests. Extends RefundRequest.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_commercepayments_ReferencedRefundRequest.htm#apex_class_commerce_payments_ReferencedRefundRequest",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "paymentid": {
      "id": "commercepayments.referencedrefundrequest.method.string paymentid{get;set;}",
      "nodeType": "property",
      "name": "PaymentId",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "PaymentId",
        "textToLower": "paymentid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_PaymentId_-1:0"
      },
      "parentId": "commercepayments.referencedrefundrequest",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String PaymentId { get; set; }",
      "simplifiedSignature": "String PaymentId{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "ReferencedRefundRequest",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    },
    "accountid": {
      "id": "commercepayments.referencedrefundrequest.method.string accountid{get;set;}",
      "nodeType": "property",
      "name": "accountId",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "accountId",
        "textToLower": "accountid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_accountId_-1:0"
      },
      "parentId": "commercepayments.referencedrefundrequest",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String accountId { get; set; }",
      "simplifiedSignature": "String accountId{get;set;}",
      "datatype": {
        "id": ".datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "parentName": "ReferencedRefundRequest",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    },
    "amount": {
      "id": "commercepayments.referencedrefundrequest.method.double amount{get;set;}",
      "nodeType": "property",
      "name": "amount",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "amount",
        "textToLower": "amount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_amount_-1:0"
      },
      "parentId": "commercepayments.referencedrefundrequest",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Double amount { get; set; }",
      "simplifiedSignature": "Double amount{get;set;}",
      "datatype": {
        "id": ".datatype.Double",
        "nodeType": "datatype",
        "name": "Double",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Double",
          "textToLower": "double",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Double_0:7"
        },
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "type": "Double"
      },
      "parentName": "ReferencedRefundRequest",
      "getter": {
        "id": ".getter.get",
        "nodeType": "getter",
        "name": "get",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      },
      "setter": {
        "id": ".getter.set",
        "nodeType": "setter",
        "name": "set",
        "parentId": "",
        "order": 0,
        "memberOrder": 0,
        "variables": {},
        "queries": []
      }
    }
  },
  "methods": {},
  "constructors": {
    "referencedrefundrequest(double,string)": {
      "id": "commercepayments.referencedrefundrequest.method.referencedrefundrequest(double,string)",
      "nodeType": "constructor",
      "name": "ReferencedRefundRequest",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "ReferencedRefundRequest",
        "textToLower": "referencedrefundrequest",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_ReferencedRefundRequest_-1:0"
      },
      "parentId": "commercepayments.referencedrefundrequest",
      "order": 1,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public ReferencedRefundRequest(Double amount, String paymentId)",
      "overrideSignature": "public override ReferencedRefundRequest(Double amount, String paymentId)",
      "simplifiedSignature": "ReferencedRefundRequest(Double,String)",
      "description": "Use only for testing.",
      "parentName": "ReferencedRefundRequest",
      "variables": {},
      "params": {
        "amount": {
          "id": "commercepayments.referencedrefundrequest.method.referencedrefundrequest(double,string).varParam.amount",
          "nodeType": "variable",
          "name": "amount",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "amount",
            "textToLower": "amount",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_amount_0:38"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "amount",
            "textToLower": "amount",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_amount_0:38"
          },
          "parentId": "commercepayments.referencedrefundrequest.method.referencedrefundrequest(double,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "commercepayments.referencedrefundrequest.referencedrefundrequest.datatype.Double",
            "nodeType": "datatype",
            "name": "Double",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Double",
              "textToLower": "double",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 31
                },
                "end": {
                  "line": 0,
                  "character": 37
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Double_0:31"
            },
            "parentId": "commercepayments.referencedrefundrequest.referencedrefundrequest",
            "order": 0,
            "memberOrder": 0,
            "type": "Double"
          },
          "description": "The amount to be debited or captured.",
          "scope": null
        },
        "paymentid": {
          "id": "commercepayments.referencedrefundrequest.method.referencedrefundrequest(double,string).varParam.paymentid",
          "nodeType": "variable",
          "name": "paymentId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "paymentId",
            "textToLower": "paymentid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_paymentId_0:53"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "paymentId",
            "textToLower": "paymentid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_paymentId_0:53"
          },
          "parentId": "commercepayments.referencedrefundrequest.method.referencedrefundrequest(double,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "commercepayments.referencedrefundrequest.referencedrefundrequest.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 52
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:46"
            },
            "parentId": "commercepayments.referencedrefundrequest.referencedrefundrequest",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The payment record.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 4,
  "queries": []
}