{
  "id": "ConnectApi.contenthub",
  "type": "class",
  "name": "ContentHub",
  "namespace": "ConnectApi",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ContentHub",
    "textToLower": "contenthub",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ContentHub_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Access Files Connect repositories and their files and folders.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ConnectAPI_ContentHub_static_methods.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "addrepositoryitem(string,string,connectapi.contenthubiteminput)": {
      "id": "ConnectApi.contenthub.addrepositoryitem",
      "type": "method",
      "name": "addRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addRepositoryItem",
        "textToLower": "addrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItem addRepositoryItem(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file)",
      "simplifiedSignature": "addRepositoryItem(String,String,ConnectApi.ContentHubItemInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.addrepositoryitem.ConnectApi.RepositoryFolderItem",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItem"
      },
      "description": "Add a repository item.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.addrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        }
      }
    },
    "addrepositoryitem(string,string,string,connectapi.contenthubiteminput)": {
      "id": "ConnectApi.contenthub.addrepositoryitem",
      "type": "method",
      "name": "addRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addRepositoryItem",
        "textToLower": "addrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItem addRepositoryItem(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file)",
      "simplifiedSignature": "addRepositoryItem(String,String,String,ConnectApi.ContentHubItemInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.addrepositoryitem.ConnectApi.RepositoryFolderItem",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItem"
      },
      "description": "Add a repository item in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.addrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        }
      }
    },
    "addrepositoryitem(string,string,connectapi.contenthubiteminput,connectapi.binaryinput)": {
      "id": "ConnectApi.contenthub.addrepositoryitem",
      "type": "method",
      "name": "addRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addRepositoryItem",
        "textToLower": "addrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItem addRepositoryItem(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)",
      "simplifiedSignature": "addRepositoryItem(String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.addrepositoryitem.ConnectApi.RepositoryFolderItem",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItem"
      },
      "description": "Add a repository item, including the binary file.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.addrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.addrepositoryitem.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    },
    "addrepositoryitem(string,string,string,connectapi.contenthubiteminput,connectapi.binaryinput)": {
      "id": "ConnectApi.contenthub.addrepositoryitem",
      "type": "method",
      "name": "addRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addRepositoryItem",
        "textToLower": "addrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItem addRepositoryItem(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)",
      "simplifiedSignature": "addRepositoryItem(String,String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.addrepositoryitem.ConnectApi.RepositoryFolderItem",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItem"
      },
      "description": "Add a repository item, including the binary file, in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.addrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.addrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.addrepositoryitem.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.addrepositoryitem.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    },
    "getalloweditemtypes(string,string)": {
      "id": "ConnectApi.contenthub.getalloweditemtypes",
      "type": "method",
      "name": "getAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAllowedItemTypes",
        "textToLower": "getalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String repositoryId, String repositoryFolderId)",
      "simplifiedSignature": "getAllowedItemTypes(String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getalloweditemtypes.ConnectApi.ContentHubAllowedItemTypeCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
      },
      "description": "Get the item types that the context user is allowed to create in the repository folder.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getalloweditemtypes(string,string,connectapi.connectcontenthubitemtype)": {
      "id": "ConnectApi.contenthub.getalloweditemtypes",
      "type": "method",
      "name": "getAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAllowedItemTypes",
        "textToLower": "getalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String repositoryId, String repositoryFolderId, ConnectApi.ConnectContentHubItemType filter)",
      "simplifiedSignature": "getAllowedItemTypes(String,String,ConnectApi.ConnectContentHubItemType)",
      "datatype": {
        "id": "ConnectApi.contenthub.getalloweditemtypes.ConnectApi.ContentHubAllowedItemTypeCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
      },
      "description": "Get the item types, filtered by type, that the context user is allowed to create in the repository folder.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "filter": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.filter",
          "type": "var",
          "name": "filter",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "filter",
            "textToLower": "filter",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_filter_-1:0"
          },
          "signature": "ConnectApi.ConnectContentHubItemType filter",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.connectapi.connectcontenthubitemtype",
            "type": "datatype",
            "name": "ConnectApi.ConnectContentHubItemType"
          }
        }
      }
    },
    "getalloweditemtypes(string,string,string)": {
      "id": "ConnectApi.contenthub.getalloweditemtypes",
      "type": "method",
      "name": "getAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAllowedItemTypes",
        "textToLower": "getalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String communityId, String repositoryId, String repositoryFolderId)",
      "simplifiedSignature": "getAllowedItemTypes(String,String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getalloweditemtypes.ConnectApi.ContentHubAllowedItemTypeCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
      },
      "description": "Get the item types that the context user is allowed to create in the repository folder in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getalloweditemtypes(string,string,string,connectapi.connectcontenthubitemtype)": {
      "id": "ConnectApi.contenthub.getalloweditemtypes",
      "type": "method",
      "name": "getAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAllowedItemTypes",
        "textToLower": "getalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubAllowedItemTypeCollection getAllowedItemTypes(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ConnectContentHubItemType filter)",
      "simplifiedSignature": "getAllowedItemTypes(String,String,String,ConnectApi.ConnectContentHubItemType)",
      "datatype": {
        "id": "ConnectApi.contenthub.getalloweditemtypes.ConnectApi.ContentHubAllowedItemTypeCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
      },
      "description": "Get the item types, filtered by type, that the context user is allowed to create in the repository folder in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "filter": {
          "id": "ConnectApi.contenthub.getalloweditemtypes.filter",
          "type": "var",
          "name": "filter",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "filter",
            "textToLower": "filter",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_filter_-1:0"
          },
          "signature": "ConnectApi.ConnectContentHubItemType filter",
          "datatype": {
            "id": "ConnectApi.contenthub.getalloweditemtypes.connectapi.connectcontenthubitemtype",
            "type": "datatype",
            "name": "ConnectApi.ConnectContentHubItemType"
          }
        }
      }
    },
    "getfilepreview(string,string,connectapi.filepreviewformat)": {
      "id": "ConnectApi.contenthub.getfilepreview",
      "type": "method",
      "name": "getFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFilePreview",
        "textToLower": "getfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.FilePreview getFilePreview(String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType)",
      "simplifiedSignature": "getFilePreview(String,String,ConnectApi.FilePreviewFormat)",
      "datatype": {
        "id": "ConnectApi.contenthub.getfilepreview.ConnectApi.FilePreview",
        "type": "datatype",
        "name": "ConnectApi.FilePreview"
      },
      "description": "Get a repository file preview.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.getfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        }
      }
    },
    "getfilepreview(string,string,connectapi.filepreviewformat,integer,integer)": {
      "id": "ConnectApi.contenthub.getfilepreview",
      "type": "method",
      "name": "getFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFilePreview",
        "textToLower": "getfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.FilePreview getFilePreview(String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, Integer startPageNumber, Integer endPageNumber)",
      "simplifiedSignature": "getFilePreview(String,String,ConnectApi.FilePreviewFormat,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.contenthub.getfilepreview.ConnectApi.FilePreview",
        "type": "datatype",
        "name": "ConnectApi.FilePreview"
      },
      "description": "Get a page or page range of a repository file preview.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.getfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        },
        "startPageNumber": {
          "id": "ConnectApi.contenthub.getfilepreview.startpagenumber",
          "type": "var",
          "name": "startPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startPageNumber",
            "textToLower": "startpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startPageNumber_-1:0"
          },
          "signature": "Integer startPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "endPageNumber": {
          "id": "ConnectApi.contenthub.getfilepreview.endpagenumber",
          "type": "var",
          "name": "endPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endPageNumber",
            "textToLower": "endpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endPageNumber_-1:0"
          },
          "signature": "Integer endPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getfilepreview(string,string,string,connectapi.filepreviewformat)": {
      "id": "ConnectApi.contenthub.getfilepreview",
      "type": "method",
      "name": "getFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFilePreview",
        "textToLower": "getfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.FilePreview getFilePreview(String communityId, String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType)",
      "simplifiedSignature": "getFilePreview(String,String,String,ConnectApi.FilePreviewFormat)",
      "datatype": {
        "id": "ConnectApi.contenthub.getfilepreview.ConnectApi.FilePreview",
        "type": "datatype",
        "name": "ConnectApi.FilePreview"
      },
      "description": "Get a repository file preview in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getfilepreview.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.getfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        }
      }
    },
    "getfilepreview(string,string,string,connectapi.filepreviewformat,integer,integer)": {
      "id": "ConnectApi.contenthub.getfilepreview",
      "type": "method",
      "name": "getFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFilePreview",
        "textToLower": "getfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.FilePreview getFilePreview(String communityId, String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, Integer startPageNumber, Integer endPageNumber)",
      "simplifiedSignature": "getFilePreview(String,String,String,ConnectApi.FilePreviewFormat,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.contenthub.getfilepreview.ConnectApi.FilePreview",
        "type": "datatype",
        "name": "ConnectApi.FilePreview"
      },
      "description": "Get a page or page range of a repository file preview in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getfilepreview.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.getfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        },
        "startPageNumber": {
          "id": "ConnectApi.contenthub.getfilepreview.startpagenumber",
          "type": "var",
          "name": "startPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startPageNumber",
            "textToLower": "startpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startPageNumber_-1:0"
          },
          "signature": "Integer startPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "endPageNumber": {
          "id": "ConnectApi.contenthub.getfilepreview.endpagenumber",
          "type": "var",
          "name": "endPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endPageNumber",
            "textToLower": "endpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endPageNumber_-1:0"
          },
          "signature": "Integer endPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.getfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getitemtype(string,string)": {
      "id": "ConnectApi.contenthub.getitemtype",
      "type": "method",
      "name": "getItemType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getItemType",
        "textToLower": "getitemtype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getItemType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubItemTypeDetail getItemType(String repositoryId, String repositoryItemTypeId)",
      "simplifiedSignature": "getItemType(String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getitemtype.ConnectApi.ContentHubItemTypeDetail",
        "type": "datatype",
        "name": "ConnectApi.ContentHubItemTypeDetail"
      },
      "description": "Get information about an item type associated with a repository.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getitemtype.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryItemTypeId": {
          "id": "ConnectApi.contenthub.getitemtype.repositoryitemtypeid",
          "type": "var",
          "name": "repositoryItemTypeId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryItemTypeId",
            "textToLower": "repositoryitemtypeid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryItemTypeId_-1:0"
          },
          "signature": "String repositoryItemTypeId",
          "datatype": {
            "id": "ConnectApi.contenthub.getitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getitemtype(string,string,string)": {
      "id": "ConnectApi.contenthub.getitemtype",
      "type": "method",
      "name": "getItemType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getItemType",
        "textToLower": "getitemtype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getItemType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubItemTypeDetail getItemType(String communityId, String repositoryId, String repositoryItemTypeId)",
      "simplifiedSignature": "getItemType(String,String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getitemtype.ConnectApi.ContentHubItemTypeDetail",
        "type": "datatype",
        "name": "ConnectApi.ContentHubItemTypeDetail"
      },
      "description": "Get information about an item type associated with a repository in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getitemtype.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getitemtype.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryItemTypeId": {
          "id": "ConnectApi.contenthub.getitemtype.repositoryitemtypeid",
          "type": "var",
          "name": "repositoryItemTypeId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryItemTypeId",
            "textToLower": "repositoryitemtypeid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryItemTypeId_-1:0"
          },
          "signature": "String repositoryItemTypeId",
          "datatype": {
            "id": "ConnectApi.contenthub.getitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getpreviews(string,string)": {
      "id": "ConnectApi.contenthub.getpreviews",
      "type": "method",
      "name": "getPreviews",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPreviews",
        "textToLower": "getpreviews",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPreviews_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.FilePreviewCollection getPreviews(String repositoryId, String repositoryFileId)",
      "simplifiedSignature": "getPreviews(String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getpreviews.ConnectApi.FilePreviewCollection",
        "type": "datatype",
        "name": "ConnectApi.FilePreviewCollection"
      },
      "description": "Get information about a repository file’s supported previews.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getpreviews.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getpreviews.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getpreviews(string,string,string)": {
      "id": "ConnectApi.contenthub.getpreviews",
      "type": "method",
      "name": "getPreviews",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPreviews",
        "textToLower": "getpreviews",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPreviews_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.FilePreviewCollection getPreviews(String communityId, String repositoryId, String repositoryFileId)",
      "simplifiedSignature": "getPreviews(String,String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getpreviews.ConnectApi.FilePreviewCollection",
        "type": "datatype",
        "name": "ConnectApi.FilePreviewCollection"
      },
      "description": "Get information about a repository file’s supported previews in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getpreviews.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getpreviews.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getpreviews.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositories()": {
      "id": "ConnectApi.contenthub.getrepositories",
      "type": "method",
      "name": "getRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositories",
        "textToLower": "getrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubRepositoryCollection getRepositories()",
      "simplifiedSignature": "getRepositories()",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositories.ConnectApi.ContentHubRepositoryCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubRepositoryCollection"
      },
      "description": "Get a list of repositories.",
      "variables": {}
    },
    "getrepositories(string)": {
      "id": "ConnectApi.contenthub.getrepositories",
      "type": "method",
      "name": "getRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositories",
        "textToLower": "getrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubRepositoryCollection getRepositories(String communityId)",
      "simplifiedSignature": "getRepositories(String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositories.ConnectApi.ContentHubRepositoryCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubRepositoryCollection"
      },
      "description": "Get a list of repositories in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepositories.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositories.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositories(integer,integer)": {
      "id": "ConnectApi.contenthub.getrepositories",
      "type": "method",
      "name": "getRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositories",
        "textToLower": "getrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubRepositoryCollection getRepositories(Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getRepositories(Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositories.ConnectApi.ContentHubRepositoryCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubRepositoryCollection"
      },
      "description": "Get a page of repositories.",
      "variables": {
        "pageParam": {
          "id": "ConnectApi.contenthub.getrepositories.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.getrepositories.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getrepositories(string,integer,integer)": {
      "id": "ConnectApi.contenthub.getrepositories",
      "type": "method",
      "name": "getRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositories",
        "textToLower": "getrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubRepositoryCollection getRepositories(String communityId, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getRepositories(String,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositories.ConnectApi.ContentHubRepositoryCollection",
        "type": "datatype",
        "name": "ConnectApi.ContentHubRepositoryCollection"
      },
      "description": "Get a page of repositories in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepositories.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositories.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.contenthub.getrepositories.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.getrepositories.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getrepository(string)": {
      "id": "ConnectApi.contenthub.getrepository",
      "type": "method",
      "name": "getRepository",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepository",
        "textToLower": "getrepository",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepository_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubRepository getRepository(String repositoryId)",
      "simplifiedSignature": "getRepository(String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepository.ConnectApi.ContentHubRepository",
        "type": "datatype",
        "name": "ConnectApi.ContentHubRepository"
      },
      "description": "Get a repository.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepository.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepository.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepository(string,string)": {
      "id": "ConnectApi.contenthub.getrepository",
      "type": "method",
      "name": "getRepository",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepository",
        "textToLower": "getrepository",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepository_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.ContentHubRepository getRepository(String communityId, String repositoryId)",
      "simplifiedSignature": "getRepository(String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepository.ConnectApi.ContentHubRepository",
        "type": "datatype",
        "name": "ConnectApi.ContentHubRepository"
      },
      "description": "Get a repository in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepository.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepository.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepository.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepository.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositoryfile(string,string)": {
      "id": "ConnectApi.contenthub.getrepositoryfile",
      "type": "method",
      "name": "getRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFile",
        "textToLower": "getrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail getRepositoryFile(String repositoryId, String repositoryFileId)",
      "simplifiedSignature": "getRepositoryFile(String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Get a repository file.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositoryfile(string,string,boolean)": {
      "id": "ConnectApi.contenthub.getrepositoryfile",
      "type": "method",
      "name": "getRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFile",
        "textToLower": "getrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail getRepositoryFile(String repositoryId, String repositoryFileId, Boolean includeExternalFilePermissionsInfo)",
      "simplifiedSignature": "getRepositoryFile(String,String,Boolean)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Get a repository file with or without permissions information.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "includeExternalFilePermissionsInfo": {
          "id": "ConnectApi.contenthub.getrepositoryfile.includeexternalfilepermissionsinfo",
          "type": "var",
          "name": "includeExternalFilePermissionsInfo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "includeExternalFilePermissionsInfo",
            "textToLower": "includeexternalfilepermissionsinfo",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_includeExternalFilePermissionsInfo_-1:0"
          },
          "signature": "Boolean includeExternalFilePermissionsInfo",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "getrepositoryfile(string,string,string)": {
      "id": "ConnectApi.contenthub.getrepositoryfile",
      "type": "method",
      "name": "getRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFile",
        "textToLower": "getrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail getRepositoryFile(String communityId, String repositoryId, String repositoryFileId)",
      "simplifiedSignature": "getRepositoryFile(String,String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Get a repository file in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositoryfile(string,string,string,boolean)": {
      "id": "ConnectApi.contenthub.getrepositoryfile",
      "type": "method",
      "name": "getRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFile",
        "textToLower": "getrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail getRepositoryFile(String communityId, String repositoryId, String repositoryFileId, Boolean includeExternalFilePermissionsInfo)",
      "simplifiedSignature": "getRepositoryFile(String,String,String,Boolean)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Get a repository file with or without permissions information in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.getrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "includeExternalFilePermissionsInfo": {
          "id": "ConnectApi.contenthub.getrepositoryfile.includeexternalfilepermissionsinfo",
          "type": "var",
          "name": "includeExternalFilePermissionsInfo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "includeExternalFilePermissionsInfo",
            "textToLower": "includeexternalfilepermissionsinfo",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_includeExternalFilePermissionsInfo_-1:0"
          },
          "signature": "Boolean includeExternalFilePermissionsInfo",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfile.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "getrepositoryfolder(string,string)": {
      "id": "ConnectApi.contenthub.getrepositoryfolder",
      "type": "method",
      "name": "getRepositoryFolder",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFolder",
        "textToLower": "getrepositoryfolder",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFolder_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderDetail getRepositoryFolder(String repositoryId, String repositoryFolderId)",
      "simplifiedSignature": "getRepositoryFolder(String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfolder.ConnectApi.RepositoryFolderDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderDetail"
      },
      "description": "Get a repository folder.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfolder.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getrepositoryfolder.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositoryfolder(string,string,string)": {
      "id": "ConnectApi.contenthub.getrepositoryfolder",
      "type": "method",
      "name": "getRepositoryFolder",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFolder",
        "textToLower": "getrepositoryfolder",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFolder_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderDetail getRepositoryFolder(String communityId, String repositoryId, String repositoryFolderId)",
      "simplifiedSignature": "getRepositoryFolder(String,String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfolder.ConnectApi.RepositoryFolderDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderDetail"
      },
      "description": "Get a repository folder in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepositoryfolder.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfolder.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getrepositoryfolder.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositoryfolderitems(string,string)": {
      "id": "ConnectApi.contenthub.getrepositoryfolderitems",
      "type": "method",
      "name": "getRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFolderItems",
        "textToLower": "getrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String repositoryId, String repositoryFolderId)",
      "simplifiedSignature": "getRepositoryFolderItems(String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfolderitems.ConnectApi.RepositoryFolderItemsCollection",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItemsCollection"
      },
      "description": "Get repository folder items.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositoryfolderitems(string,string,string)": {
      "id": "ConnectApi.contenthub.getrepositoryfolderitems",
      "type": "method",
      "name": "getRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFolderItems",
        "textToLower": "getrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String communityId, String repositoryId, String repositoryFolderId)",
      "simplifiedSignature": "getRepositoryFolderItems(String,String,String)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfolderitems.ConnectApi.RepositoryFolderItemsCollection",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItemsCollection"
      },
      "description": "Get repository folder items in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrepositoryfolderitems(string,string,integer,integer)": {
      "id": "ConnectApi.contenthub.getrepositoryfolderitems",
      "type": "method",
      "name": "getRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFolderItems",
        "textToLower": "getrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String repositoryId, String repositoryFolderId, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getRepositoryFolderItems(String,String,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfolderitems.ConnectApi.RepositoryFolderItemsCollection",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItemsCollection"
      },
      "description": "Get a page of repository folder items.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getrepositoryfolderitems(string,string,string,integer,integer)": {
      "id": "ConnectApi.contenthub.getrepositoryfolderitems",
      "type": "method",
      "name": "getRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRepositoryFolderItems",
        "textToLower": "getrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFolderItemsCollection getRepositoryFolderItems(String communityId, String repositoryId, String repositoryFolderId, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getRepositoryFolderItems(String,String,String,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.contenthub.getrepositoryfolderitems.ConnectApi.RepositoryFolderItemsCollection",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFolderItemsCollection"
      },
      "description": "Get a page of repository folder items in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.getrepositoryfolderitems.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.getrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "updaterepositoryfile(string,string,connectapi.contenthubiteminput)": {
      "id": "ConnectApi.contenthub.updaterepositoryfile",
      "type": "method",
      "name": "updateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRepositoryFile",
        "textToLower": "updaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail updateRepositoryFile(String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file)",
      "simplifiedSignature": "updateRepositoryFile(String,String,ConnectApi.ContentHubItemInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.updaterepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Update the metadata of a repository file.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        }
      }
    },
    "updaterepositoryfile(string,string,connectapi.contenthubiteminput,connectapi.binaryinput)": {
      "id": "ConnectApi.contenthub.updaterepositoryfile",
      "type": "method",
      "name": "updateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRepositoryFile",
        "textToLower": "updaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail updateRepositoryFile(String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)",
      "simplifiedSignature": "updateRepositoryFile(String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.updaterepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Update the content of a repository file.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    },
    "updaterepositoryfile(string,string,string,connectapi.contenthubiteminput)": {
      "id": "ConnectApi.contenthub.updaterepositoryfile",
      "type": "method",
      "name": "updateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRepositoryFile",
        "textToLower": "updaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail updateRepositoryFile(String communityId, String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file)",
      "simplifiedSignature": "updateRepositoryFile(String,String,String,ConnectApi.ContentHubItemInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.updaterepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Update the metadata of a repository file in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        }
      }
    },
    "updaterepositoryfile(string,string,string,connectapi.contenthubiteminput,connectapi.binaryinput)": {
      "id": "ConnectApi.contenthub.updaterepositoryfile",
      "type": "method",
      "name": "updateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRepositoryFile",
        "textToLower": "updaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.RepositoryFileDetail updateRepositoryFile(String communityId, String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData)",
      "simplifiedSignature": "updateRepositoryFile(String,String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.contenthub.updaterepositoryfile.ConnectApi.RepositoryFileDetail",
        "type": "datatype",
        "name": "ConnectApi.RepositoryFileDetail"
      },
      "description": "Update the content of a repository file in a community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.updaterepositoryfile.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.updaterepositoryfile.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    },
    "settestaddrepositoryitem(string,string,connectapi.contenthubiteminput,connectapi.repositoryfolderitem)": {
      "id": "ConnectApi.contenthub.settestaddrepositoryitem",
      "type": "method",
      "name": "setTestAddRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestAddRepositoryItem",
        "textToLower": "settestaddrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestAddRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestAddRepositoryItem(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.RepositoryFolderItem result)",
      "simplifiedSignature": "setTestAddRepositoryItem(String,String,ConnectApi.ContentHubItemInput,ConnectApi.RepositoryFolderItem)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestaddrepositoryitem.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItem object to be returned when the matching addRepositoryItem(repositoryId, repositoryFolderId, file) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItem result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.repositoryfolderitem",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItem"
          }
        }
      }
    },
    "settestaddrepositoryitem(string,string,string,connectapi.contenthubiteminput,connectapi.repositoryfolderitem)": {
      "id": "ConnectApi.contenthub.settestaddrepositoryitem",
      "type": "method",
      "name": "setTestAddRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestAddRepositoryItem",
        "textToLower": "settestaddrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestAddRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestAddRepositoryItem(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.RepositoryFolderItem result)",
      "simplifiedSignature": "setTestAddRepositoryItem(String,String,String,ConnectApi.ContentHubItemInput,ConnectApi.RepositoryFolderItem)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestaddrepositoryitem.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItem object to be returned when the matching addRepositoryItem(communityId, repositoryId, repositoryFolderId, file) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItem result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.repositoryfolderitem",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItem"
          }
        }
      }
    },
    "settestaddrepositoryitem(string,string,connectapi.contenthubiteminput,connectapi.binaryinput,connectapi.repositoryfolderitem)": {
      "id": "ConnectApi.contenthub.settestaddrepositoryitem",
      "type": "method",
      "name": "setTestAddRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestAddRepositoryItem",
        "textToLower": "settestaddrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestAddRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestAddRepositoryItem(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData, ConnectApi.RepositoryFolderItem result)",
      "simplifiedSignature": "setTestAddRepositoryItem(String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput,ConnectApi.RepositoryFolderItem)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestaddrepositoryitem.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItem object to be returned when the matching addRepositoryItem(repositoryId, repositoryFolderId, file, fileData) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItem result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.repositoryfolderitem",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItem"
          }
        }
      }
    },
    "settestaddrepositoryitem(string,string,string,connectapi.contenthubiteminput,connectapi.binaryinput,connectapi.repositoryfolderitem)": {
      "id": "ConnectApi.contenthub.settestaddrepositoryitem",
      "type": "method",
      "name": "setTestAddRepositoryItem",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestAddRepositoryItem",
        "textToLower": "settestaddrepositoryitem",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestAddRepositoryItem_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestAddRepositoryItem(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData, ConnectApi.RepositoryFolderItem result)",
      "simplifiedSignature": "setTestAddRepositoryItem(String,String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput,ConnectApi.RepositoryFolderItem)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestaddrepositoryitem.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItem object to be returned when the matching addRepositoryItem(communityId, repositoryId, repositoryFolderId, file, fileData) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestaddrepositoryitem.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItem result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestaddrepositoryitem.connectapi.repositoryfolderitem",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItem"
          }
        }
      }
    },
    "settestgetalloweditemtypes(string,string,connectapi.contenthuballoweditemtypecollection)": {
      "id": "ConnectApi.contenthub.settestgetalloweditemtypes",
      "type": "method",
      "name": "setTestGetAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetAllowedItemTypes",
        "textToLower": "settestgetalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetAllowedItemTypes(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubAllowedItemTypeCollection result)",
      "simplifiedSignature": "setTestGetAllowedItemTypes(String,String,ConnectApi.ContentHubAllowedItemTypeCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetalloweditemtypes.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubAllowedItemTypeCollection object to be returned when the matching getAllowedItemTypes(repositoryId, repositoryFolderId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubAllowedItemTypeCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.connectapi.contenthuballoweditemtypecollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
          }
        }
      }
    },
    "settestgetalloweditemtypes(string,string,connectapi.contenthubitemtype,connectapi.contenthuballoweditemtypecollection)": {
      "id": "ConnectApi.contenthub.settestgetalloweditemtypes",
      "type": "method",
      "name": "setTestGetAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetAllowedItemTypes",
        "textToLower": "settestgetalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetAllowedItemTypes(String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemType filter, ConnectApi.ContentHubAllowedItemTypeCollection result)",
      "simplifiedSignature": "setTestGetAllowedItemTypes(String,String,ConnectApi.ContentHubItemType,ConnectApi.ContentHubAllowedItemTypeCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetalloweditemtypes.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubAllowedItemTypeCollection object to be returned when the matching getAllowedItemTypes(repositoryId, repositoryFolderId, filter) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "filter": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.filter",
          "type": "var",
          "name": "filter",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "filter",
            "textToLower": "filter",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_filter_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemType filter",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.connectapi.contenthubitemtype",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemType"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubAllowedItemTypeCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.connectapi.contenthuballoweditemtypecollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
          }
        }
      }
    },
    "settestgetalloweditemtypes(string,string,string,connectapi.contenthuballoweditemtypecollection)": {
      "id": "ConnectApi.contenthub.settestgetalloweditemtypes",
      "type": "method",
      "name": "setTestGetAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetAllowedItemTypes",
        "textToLower": "settestgetalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetAllowedItemTypes(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubAllowedItemTypeCollection result)",
      "simplifiedSignature": "setTestGetAllowedItemTypes(String,String,String,ConnectApi.ContentHubAllowedItemTypeCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetalloweditemtypes.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubAllowedItemTypeCollection object to be returned when the matching getAllowedItemTypes(communityId, repositoryId, repositoryFolderId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubAllowedItemTypeCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.connectapi.contenthuballoweditemtypecollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
          }
        }
      }
    },
    "settestgetalloweditemtypes(string,string,string,connectapi.contenthubitemtype,connectapi.contenthuballoweditemtypecollection)": {
      "id": "ConnectApi.contenthub.settestgetalloweditemtypes",
      "type": "method",
      "name": "setTestGetAllowedItemTypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetAllowedItemTypes",
        "textToLower": "settestgetalloweditemtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetAllowedItemTypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetAllowedItemTypes(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.ContentHubItemType filter, ConnectApi.ContentHubAllowedItemTypeCollection result)",
      "simplifiedSignature": "setTestGetAllowedItemTypes(String,String,String,ConnectApi.ContentHubItemType,ConnectApi.ContentHubAllowedItemTypeCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetalloweditemtypes.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubAllowedItemTypeCollection object to be returned when the matching getAllowedItemTypes(communityId, repositoryId, repositoryFolderId, filter) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "filter": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.filter",
          "type": "var",
          "name": "filter",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "filter",
            "textToLower": "filter",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_filter_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemType filter",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.connectapi.contenthubitemtype",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemType"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetalloweditemtypes.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubAllowedItemTypeCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetalloweditemtypes.connectapi.contenthuballoweditemtypecollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubAllowedItemTypeCollection"
          }
        }
      }
    },
    "settestgetfilepreview(string,string,connectapi.filepreviewformat,connectapi.filepreview)": {
      "id": "ConnectApi.contenthub.settestgetfilepreview",
      "type": "method",
      "name": "setTestGetFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetFilePreview",
        "textToLower": "settestgetfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetFilePreview(String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, ConnectApi.FilePreview result)",
      "simplifiedSignature": "setTestGetFilePreview(String,String,ConnectApi.FilePreviewFormat,ConnectApi.FilePreview)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetfilepreview.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.FilePreview object to be returned when the matching getFilePreview(repositoryId, repositoryFileId, formatType) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.FilePreview result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreview",
            "type": "datatype",
            "name": "ConnectApi.FilePreview"
          }
        }
      }
    },
    "settestgetfilepreview(string,string,connectapi.filepreviewformat,integer,integer,connectapi.filepreview)": {
      "id": "ConnectApi.contenthub.settestgetfilepreview",
      "type": "method",
      "name": "setTestGetFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetFilePreview",
        "textToLower": "settestgetfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetFilePreview(String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, Integer startPageNumber, Integer endPageNumber, ConnectApi.FilePreview result)",
      "simplifiedSignature": "setTestGetFilePreview(String,String,ConnectApi.FilePreviewFormat,Integer,Integer,ConnectApi.FilePreview)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetfilepreview.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.FilePreview object to be returned when the matching getFilePreview(repositoryId, repositoryFileId, formatType, startPageNumber, endPageNumber) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        },
        "startPageNumber": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.startpagenumber",
          "type": "var",
          "name": "startPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startPageNumber",
            "textToLower": "startpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startPageNumber_-1:0"
          },
          "signature": "Integer startPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "endPageNumber": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.endpagenumber",
          "type": "var",
          "name": "endPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endPageNumber",
            "textToLower": "endpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endPageNumber_-1:0"
          },
          "signature": "Integer endPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.FilePreview result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreview",
            "type": "datatype",
            "name": "ConnectApi.FilePreview"
          }
        }
      }
    },
    "settestgetfilepreview(string,string,string,connectapi.filepreviewformat,connectapi.filepreview)": {
      "id": "ConnectApi.contenthub.settestgetfilepreview",
      "type": "method",
      "name": "setTestGetFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetFilePreview",
        "textToLower": "settestgetfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetFilePreview(String communityId, String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, ConnectApi.FilePreview result)",
      "simplifiedSignature": "setTestGetFilePreview(String,String,String,ConnectApi.FilePreviewFormat,ConnectApi.FilePreview)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetfilepreview.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.FilePreview object to be returned when the matching getFilePreview(communityId, repositoryId, repositoryFileId, formatType) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.FilePreview result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreview",
            "type": "datatype",
            "name": "ConnectApi.FilePreview"
          }
        }
      }
    },
    "settestgetfilepreview(string,string,string,connectapi.filepreviewformat,integer,integer,connectapi.filepreview)": {
      "id": "ConnectApi.contenthub.settestgetfilepreview",
      "type": "method",
      "name": "setTestGetFilePreview",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetFilePreview",
        "textToLower": "settestgetfilepreview",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetFilePreview_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetFilePreview(String communityId, String repositoryId, String repositoryFileId, ConnectApi.FilePreviewFormat formatType, Integer startPageNumber, Integer endPageNumber, ConnectApi.FilePreview result)",
      "simplifiedSignature": "setTestGetFilePreview(String,String,String,ConnectApi.FilePreviewFormat,Integer,Integer,ConnectApi.FilePreview)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetfilepreview.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.FilePreview object to be returned when the matching getFilePreview(communityId, repositoryId, repositoryFileId, formatType, startPageNumber, endPageNumber) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "formatType": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.formattype",
          "type": "var",
          "name": "formatType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formatType",
            "textToLower": "formattype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formatType_-1:0"
          },
          "signature": "ConnectApi.FilePreviewFormat formatType",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreviewformat",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewFormat"
          }
        },
        "startPageNumber": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.startpagenumber",
          "type": "var",
          "name": "startPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startPageNumber",
            "textToLower": "startpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startPageNumber_-1:0"
          },
          "signature": "Integer startPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "endPageNumber": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.endpagenumber",
          "type": "var",
          "name": "endPageNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endPageNumber",
            "textToLower": "endpagenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endPageNumber_-1:0"
          },
          "signature": "Integer endPageNumber",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetfilepreview.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.FilePreview result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetfilepreview.connectapi.filepreview",
            "type": "datatype",
            "name": "ConnectApi.FilePreview"
          }
        }
      }
    },
    "settestgetitemtype(string,string,connectapi.contenthubitemtypedetail)": {
      "id": "ConnectApi.contenthub.settestgetitemtype",
      "type": "method",
      "name": "setTestGetItemType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetItemType",
        "textToLower": "settestgetitemtype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetItemType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetItemType(String repositoryId, String repositoryItemTypeId, ConnectApi.ContentHubItemTypeDetail result)",
      "simplifiedSignature": "setTestGetItemType(String,String,ConnectApi.ContentHubItemTypeDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetitemtype.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubItemTypeDetail object to be returned when the matching getItemType(repositoryId, repositoryItemTypeId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetitemtype.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryItemTypeId": {
          "id": "ConnectApi.contenthub.settestgetitemtype.repositoryitemtypeid",
          "type": "var",
          "name": "repositoryItemTypeId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryItemTypeId",
            "textToLower": "repositoryitemtypeid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryItemTypeId_-1:0"
          },
          "signature": "String repositoryItemTypeId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetitemtype.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemTypeDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetitemtype.connectapi.contenthubitemtypedetail",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemTypeDetail"
          }
        }
      }
    },
    "settestgetitemtype(string,string,string,connectapi.contenthubitemtypedetail)": {
      "id": "ConnectApi.contenthub.settestgetitemtype",
      "type": "method",
      "name": "setTestGetItemType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetItemType",
        "textToLower": "settestgetitemtype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetItemType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetItemType(String communityId, String repositoryId, String repositoryItemTypeId, ConnectApi.ContentHubItemTypeDetail result)",
      "simplifiedSignature": "setTestGetItemType(String,String,String,ConnectApi.ContentHubItemTypeDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetitemtype.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubItemTypeDetail object to be returned when the matching getItemType(communityId, repositoryId, repositoryItemTypeId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetitemtype.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetitemtype.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryItemTypeId": {
          "id": "ConnectApi.contenthub.settestgetitemtype.repositoryitemtypeid",
          "type": "var",
          "name": "repositoryItemTypeId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryItemTypeId",
            "textToLower": "repositoryitemtypeid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryItemTypeId_-1:0"
          },
          "signature": "String repositoryItemTypeId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetitemtype.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetitemtype.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemTypeDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetitemtype.connectapi.contenthubitemtypedetail",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemTypeDetail"
          }
        }
      }
    },
    "settestgetpreviews(string,string,connectapi.filepreviewcollection)": {
      "id": "ConnectApi.contenthub.settestgetpreviews",
      "type": "method",
      "name": "setTestGetPreviews",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetPreviews",
        "textToLower": "settestgetpreviews",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetPreviews_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetPreviews(String repositoryId, String repositoryFileId, ConnectApi.FilePreviewCollection result)",
      "simplifiedSignature": "setTestGetPreviews(String,String,ConnectApi.FilePreviewCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetpreviews.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.FilePreviewCollection object to be returned when the matching getPreviews(repositoryId, repositoryFileId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetpreviews.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetpreviews.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetpreviews.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.FilePreviewCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetpreviews.connectapi.filepreviewcollection",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewCollection"
          }
        }
      }
    },
    "settestgetpreviews(string,string,string,connectapi.filepreviewcollection)": {
      "id": "ConnectApi.contenthub.settestgetpreviews",
      "type": "method",
      "name": "setTestGetPreviews",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetPreviews",
        "textToLower": "settestgetpreviews",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetPreviews_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetPreviews(String communityId, String repositoryId, String repositoryFileId, ConnectApi.FilePreviewCollection result)",
      "simplifiedSignature": "setTestGetPreviews(String,String,String,ConnectApi.FilePreviewCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetpreviews.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.FilePreviewCollection object to be returned when the matching getPreviews(communityId, repositoryId, repositoryFileId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetpreviews.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetpreviews.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetpreviews.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetpreviews.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetpreviews.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.FilePreviewCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetpreviews.connectapi.filepreviewcollection",
            "type": "datatype",
            "name": "ConnectApi.FilePreviewCollection"
          }
        }
      }
    },
    "settestgetrepositories(connectapi.contenthubrepositorycollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositories",
      "type": "method",
      "name": "setTestGetRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositories",
        "textToLower": "settestgetrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositories(ConnectApi.ContentHubRepositoryCollection result)",
      "simplifiedSignature": "setTestGetRepositories(ConnectApi.ContentHubRepositoryCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositories.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubRepositoryCollection object to be returned when the matching getRepositories() method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositories.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubRepositoryCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.connectapi.contenthubrepositorycollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubRepositoryCollection"
          }
        }
      }
    },
    "settestgetrepositories(string,connectapi.contenthubrepositorycollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositories",
      "type": "method",
      "name": "setTestGetRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositories",
        "textToLower": "settestgetrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositories(String communityId, ConnectApi.ContentHubRepositoryCollection result)",
      "simplifiedSignature": "setTestGetRepositories(String,ConnectApi.ContentHubRepositoryCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositories.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a getRepositories(communityId) object to be returned when the matching ConnectApi.ContentHubRepositoryCollection method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepositories.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositories.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubRepositoryCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.connectapi.contenthubrepositorycollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubRepositoryCollection"
          }
        }
      }
    },
    "settestgetrepositories(integer,integer,connectapi.contenthubrepositorycollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositories",
      "type": "method",
      "name": "setTestGetRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositories",
        "textToLower": "settestgetrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositories(Integer pageParam, Integer pageSize, ConnectApi.ContentHubRepositoryCollection result)",
      "simplifiedSignature": "setTestGetRepositories(Integer,Integer,ConnectApi.ContentHubRepositoryCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositories.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubRepositoryCollection object to be returned when the matching getRepositories(pageParam, pageSize) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "pageParam": {
          "id": "ConnectApi.contenthub.settestgetrepositories.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.settestgetrepositories.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositories.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubRepositoryCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.connectapi.contenthubrepositorycollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubRepositoryCollection"
          }
        }
      }
    },
    "settestgetrepositories(string,integer,integer,connectapi.contenthubrepositorycollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositories",
      "type": "method",
      "name": "setTestGetRepositories",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositories",
        "textToLower": "settestgetrepositories",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositories_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositories(String communityId, Integer pageParam, Integer pageSize, ConnectApi.ContentHubRepositoryCollection result)",
      "simplifiedSignature": "setTestGetRepositories(String,Integer,Integer,ConnectApi.ContentHubRepositoryCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositories.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubRepositoryCollection object to be returned when the matching getRepositories(communityId, pageParam, pageSize) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepositories.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.contenthub.settestgetrepositories.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.settestgetrepositories.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositories.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubRepositoryCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositories.connectapi.contenthubrepositorycollection",
            "type": "datatype",
            "name": "ConnectApi.ContentHubRepositoryCollection"
          }
        }
      }
    },
    "settestgetrepository(string,connectapi.contenthubrepository)": {
      "id": "ConnectApi.contenthub.settestgetrepository",
      "type": "method",
      "name": "setTestGetRepository",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepository",
        "textToLower": "settestgetrepository",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepository_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepository(String repositoryId, ConnectApi.ContentHubRepository result)",
      "simplifiedSignature": "setTestGetRepository(String,ConnectApi.ContentHubRepository)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepository.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubRepository object to be returned when the matching getRepository(repositoryId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepository.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepository.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepository.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubRepository result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepository.connectapi.contenthubrepository",
            "type": "datatype",
            "name": "ConnectApi.ContentHubRepository"
          }
        }
      }
    },
    "settestgetrepository(string,string,connectapi.contenthubrepository)": {
      "id": "ConnectApi.contenthub.settestgetrepository",
      "type": "method",
      "name": "setTestGetRepository",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepository",
        "textToLower": "settestgetrepository",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepository_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepository(String communityId, String repositoryId, ConnectApi.ContentHubRepository result)",
      "simplifiedSignature": "setTestGetRepository(String,String,ConnectApi.ContentHubRepository)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepository.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ContentHubRepository object to be returned when the matching getRepository(communityId, repositoryId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepository.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepository.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepository.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepository.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepository.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ContentHubRepository result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepository.connectapi.contenthubrepository",
            "type": "datatype",
            "name": "ConnectApi.ContentHubRepository"
          }
        }
      }
    },
    "settestgetrepositoryfile(string,string,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfile",
      "type": "method",
      "name": "setTestGetRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFile",
        "textToLower": "settestgetrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFile(String repositoryId, String repositoryFileId, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestGetRepositoryFile(String,String,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching getRepositoryFile(repositoryId, repositoryFileId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    },
    "settestgetrepositoryfile(string,string,boolean,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfile",
      "type": "method",
      "name": "setTestGetRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFile",
        "textToLower": "settestgetrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFile(String repositoryId, String repositoryFileId, Boolean includeExternalFilePermissionsInfo, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestGetRepositoryFile(String,String,Boolean,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching getRepositoryFile(repositoryId, repositoryFileId, includeExternalFilePermissionsInfo) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "includeExternalFilePermissionsInfo": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.includeexternalfilepermissionsinfo",
          "type": "var",
          "name": "includeExternalFilePermissionsInfo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "includeExternalFilePermissionsInfo",
            "textToLower": "includeexternalfilepermissionsinfo",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_includeExternalFilePermissionsInfo_-1:0"
          },
          "signature": "Boolean includeExternalFilePermissionsInfo",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    },
    "settestgetrepositoryfile(string,string,string,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfile",
      "type": "method",
      "name": "setTestGetRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFile",
        "textToLower": "settestgetrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFile(String communityId, String repositoryId, String repositoryFileId, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestGetRepositoryFile(String,String,String,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching getRepositoryFile(communityId, repositoryId, repositoryFileId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    },
    "settestgetrepositoryfile(string,string,string,boolean,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfile",
      "type": "method",
      "name": "setTestGetRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFile",
        "textToLower": "settestgetrepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFile(String communityId, String repositoryId, String repositoryFileId, Boolean includeExternalFilePermissionsInfo, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestGetRepositoryFile(String,String,String,Boolean,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching getRepositoryFile(communityId, repositoryId, repositoryFileId, includeExternalFilePermissionsInfo) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "includeExternalFilePermissionsInfo": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.includeexternalfilepermissionsinfo",
          "type": "var",
          "name": "includeExternalFilePermissionsInfo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "includeExternalFilePermissionsInfo",
            "textToLower": "includeexternalfilepermissionsinfo",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_includeExternalFilePermissionsInfo_-1:0"
          },
          "signature": "Boolean includeExternalFilePermissionsInfo",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    },
    "settestgetrepositoryfolder(string,string,connectapi.repositoryfolderdetail)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfolder",
      "type": "method",
      "name": "setTestGetRepositoryFolder",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFolder",
        "textToLower": "settestgetrepositoryfolder",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFolder_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFolder(String repositoryId, String repositoryFolderId, ConnectApi.RepositoryFolderDetail result)",
      "simplifiedSignature": "setTestGetRepositoryFolder(String,String,ConnectApi.RepositoryFolderDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfolder.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderDetail object to be returned when the matching getRepositoryFolder(repositoryId, repositoryFolderId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolder.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolder.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolder.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolder.connectapi.repositoryfolderdetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderDetail"
          }
        }
      }
    },
    "settestgetrepositoryfolder(string,string,string,connectapi.repositoryfolderdetail)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfolder",
      "type": "method",
      "name": "setTestGetRepositoryFolder",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFolder",
        "textToLower": "settestgetrepositoryfolder",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFolder_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFolder(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.RepositoryFolderDetail result)",
      "simplifiedSignature": "setTestGetRepositoryFolder(String,String,String,ConnectApi.RepositoryFolderDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfolder.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderDetail object to be returned when the matching getRepositoryFolder(communityId, repositoryId, repositoryFolderId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolder.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolder.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolder.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolder.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolder.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolder.connectapi.repositoryfolderdetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderDetail"
          }
        }
      }
    },
    "settestgetrepositoryfolderitems(string,string,connectapi.repositoryfolderitemscollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems",
      "type": "method",
      "name": "setTestGetRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFolderItems",
        "textToLower": "settestgetrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFolderItems(String repositoryId, String repositoryFolderId, ConnectApi.RepositoryFolderItemsCollection result)",
      "simplifiedSignature": "setTestGetRepositoryFolderItems(String,String,ConnectApi.RepositoryFolderItemsCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItemsCollection object to be returned when the matching getRepositoryFolderItems(repositoryId, repositoryFolderId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItemsCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.connectapi.repositoryfolderitemscollection",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItemsCollection"
          }
        }
      }
    },
    "settestgetrepositoryfolderitems(string,string,string,connectapi.repositoryfolderitemscollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems",
      "type": "method",
      "name": "setTestGetRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFolderItems",
        "textToLower": "settestgetrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFolderItems(String communityId, String repositoryId, String repositoryFolderId, ConnectApi.RepositoryFolderItemsCollection result)",
      "simplifiedSignature": "setTestGetRepositoryFolderItems(String,String,String,ConnectApi.RepositoryFolderItemsCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItemsCollection object to be returned when the matching getRepositoryFolderItems(communityId, repositoryId, repositoryFolderId) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItemsCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.connectapi.repositoryfolderitemscollection",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItemsCollection"
          }
        }
      }
    },
    "settestgetrepositoryfolderitems(string,string,integer,integer,connectapi.repositoryfolderitemscollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems",
      "type": "method",
      "name": "setTestGetRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFolderItems",
        "textToLower": "settestgetrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFolderItems(String repositoryId, String repositoryFolderId, Integer pageParam, Integer pageSize, ConnectApi.RepositoryFolderItemsCollection result)",
      "simplifiedSignature": "setTestGetRepositoryFolderItems(String,String,Integer,Integer,ConnectApi.RepositoryFolderItemsCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItemsCollection object to be returned when the matching getRepositoryFolderItems(repositoryId, repositoryFolderId, pageParam, pageSize) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItemsCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.connectapi.repositoryfolderitemscollection",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItemsCollection"
          }
        }
      }
    },
    "settestgetrepositoryfolderitems(string,string,string,integer,integer,connectapi.repositoryfolderitemscollection)": {
      "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems",
      "type": "method",
      "name": "setTestGetRepositoryFolderItems",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRepositoryFolderItems",
        "textToLower": "settestgetrepositoryfolderitems",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRepositoryFolderItems_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRepositoryFolderItems(String communityId, String repositoryId, String repositoryFolderId, Integer pageParam, Integer pageSize, ConnectApi.RepositoryFolderItemsCollection result)",
      "simplifiedSignature": "setTestGetRepositoryFolderItems(String,String,String,Integer,Integer,ConnectApi.RepositoryFolderItemsCollection)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFolderItemsCollection object to be returned when the matching getRepositoryFolderItems(communityId, repositoryId, repositoryFolderId, pageParam, pageSize) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFolderId": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.repositoryfolderid",
          "type": "var",
          "name": "repositoryFolderId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFolderId",
            "textToLower": "repositoryfolderid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFolderId_-1:0"
          },
          "signature": "String repositoryFolderId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFolderItemsCollection result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestgetrepositoryfolderitems.connectapi.repositoryfolderitemscollection",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFolderItemsCollection"
          }
        }
      }
    },
    "settestupdaterepositoryfile(string,string,string,connectapi.contenthubiteminput,connectapi.binaryinput,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestupdaterepositoryfile",
      "type": "method",
      "name": "setTestUpdateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestUpdateRepositoryFile",
        "textToLower": "settestupdaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestUpdateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestUpdateRepositoryFile(String communityId, String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestUpdateRepositoryFile(String,String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestupdaterepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching updateRepositoryFile(communityId, repositoryId, repositoryFileId, file, fileData) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    },
    "settestupdaterepositoryfile(string,string,connectapi.contenthubiteminput,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestupdaterepositoryfile",
      "type": "method",
      "name": "setTestUpdateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestUpdateRepositoryFile",
        "textToLower": "settestupdaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestUpdateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestUpdateRepositoryFile(String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestUpdateRepositoryFile(String,String,ConnectApi.ContentHubItemInput,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestupdaterepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching updateRepositoryFile(repositoryId, repositoryFileId, file) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    },
    "settestupdaterepositoryfile(string,string,connectapi.contenthubiteminput,connectapi.binaryinput,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestupdaterepositoryfile",
      "type": "method",
      "name": "setTestUpdateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestUpdateRepositoryFile",
        "textToLower": "settestupdaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestUpdateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestUpdateRepositoryFile(String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.BinaryInput fileData, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestUpdateRepositoryFile(String,String,ConnectApi.ContentHubItemInput,ConnectApi.BinaryInput,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestupdaterepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching updateRepositoryFile(repositoryId, repositoryFileId, file, fileData) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "fileData": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.filedata",
          "type": "var",
          "name": "fileData",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileData",
            "textToLower": "filedata",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileData_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileData",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.binaryinput",
            "type": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    },
    "settestupdaterepositoryfile(string,string,string,connectapi.contenthubiteminput,connectapi.repositoryfiledetail)": {
      "id": "ConnectApi.contenthub.settestupdaterepositoryfile",
      "type": "method",
      "name": "setTestUpdateRepositoryFile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestUpdateRepositoryFile",
        "textToLower": "settestupdaterepositoryfile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestUpdateRepositoryFile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestUpdateRepositoryFile(String communityId, String repositoryId, String repositoryFileId, ConnectApi.ContentHubItemInput file, ConnectApi.RepositoryFileDetail result)",
      "simplifiedSignature": "setTestUpdateRepositoryFile(String,String,String,ConnectApi.ContentHubItemInput,ConnectApi.RepositoryFileDetail)",
      "datatype": {
        "id": "ConnectApi.contenthub.settestupdaterepositoryfile.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.RepositoryFileDetail object to be returned when the matching updateRepositoryFile(communityId, repositoryId, repositoryFileId, file) method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryid",
          "type": "var",
          "name": "repositoryId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryId",
            "textToLower": "repositoryid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryId_-1:0"
          },
          "signature": "String repositoryId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "repositoryFileId": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.repositoryfileid",
          "type": "var",
          "name": "repositoryFileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "repositoryFileId",
            "textToLower": "repositoryfileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_repositoryFileId_-1:0"
          },
          "signature": "String repositoryFileId",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "file": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.file",
          "type": "var",
          "name": "file",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "file",
            "textToLower": "file",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_file_-1:0"
          },
          "signature": "ConnectApi.ContentHubItemInput file",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.contenthubiteminput",
            "type": "datatype",
            "name": "ConnectApi.ContentHubItemInput"
          }
        },
        "result": {
          "id": "ConnectApi.contenthub.settestupdaterepositoryfile.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.RepositoryFileDetail result",
          "datatype": {
            "id": "ConnectApi.contenthub.settestupdaterepositoryfile.connectapi.repositoryfiledetail",
            "type": "datatype",
            "name": "ConnectApi.RepositoryFileDetail"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}