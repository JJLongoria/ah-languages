{
  "id": "ConnectApi.managedtopics",
  "nodeType": "class",
  "name": "ManagedTopics",
  "namespace": "ConnectApi",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ManagedTopics",
    "textToLower": "managedtopics",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ManagedTopics_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Access information about managed topics in a community. Create, delete, and reorder managed topics.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ConnectAPI_ManagedTopics_static_methods.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "createmanagedtopic(string,string,connectapi.managedtopictype)": {
      "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype)",
      "nodeType": "method",
      "name": "createManagedTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createManagedTopic",
        "textToLower": "createmanagedtopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createManagedTopic_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopic createManagedTopic(String communityId, String recordId, ConnectApi.ManagedTopicType managedTopicType)",
      "overrideSignature": "public static override ConnectApi.ManagedTopic createManagedTopic(String communityId, String recordId, ConnectApi.ManagedTopicType managedTopicType)",
      "simplifiedSignature": "createManagedTopic(String,String,ConnectApi.ManagedTopicType)",
      "datatype": {
        "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.ConnectApi.ManagedTopic",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopic",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.createmanagedtopic",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopic"
      },
      "description": "Create a managed topic of a specific type for a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:64"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:64"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 57
                },
                "end": {
                  "line": 0,
                  "character": 63
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:57"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recordid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype).varParam.recordid",
          "nodeType": "variable",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:84"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:84"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 77
                },
                "end": {
                  "line": 0,
                  "character": 83
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:77"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 122
              },
              "end": {
                "line": 0,
                "character": 138
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:122"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 122
              },
              "end": {
                "line": 0,
                "character": 138
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:122"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 94
                },
                "end": {
                  "line": 0,
                  "character": 104
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:94"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the topic. Specify the type of managed topic.  Content—Topics that are associated with native content.   Featured—Topics that are featured, for example, on the community home page, but don’t provide overall navigation.   Navigational—Topics that display in a navigational menu in the community.   A topic can be associated with all three managed topic types, so a topic can be a Featured, Navigational, and Content topic. You can create up to 25 Featured and 5,000 Content topics. You can create up to eight levels of Navigational managed topics with 25 top-level topics and 10 children topics per level for a maximum of 2,775 Navigational topics.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createmanagedtopic(string,string,connectapi.managedtopictype,string)": {
      "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string)",
      "nodeType": "method",
      "name": "createManagedTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createManagedTopic",
        "textToLower": "createmanagedtopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createManagedTopic_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopic createManagedTopic(String communityId, String recordId, ConnectApi.ManagedTopicType managedTopicType, String parentId)",
      "overrideSignature": "public static override ConnectApi.ManagedTopic createManagedTopic(String communityId, String recordId, ConnectApi.ManagedTopicType managedTopicType, String parentId)",
      "simplifiedSignature": "createManagedTopic(String,String,ConnectApi.ManagedTopicType,String)",
      "datatype": {
        "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.ConnectApi.ManagedTopic",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopic",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.createmanagedtopic",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopic"
      },
      "description": "Create a child managed topic for a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:64"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:64"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 57
                },
                "end": {
                  "line": 0,
                  "character": 63
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:57"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recordid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string).varParam.recordid",
          "nodeType": "variable",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:84"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:84"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 77
                },
                "end": {
                  "line": 0,
                  "character": 83
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:77"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 122
              },
              "end": {
                "line": 0,
                "character": 138
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:122"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 122
              },
              "end": {
                "line": 0,
                "character": 138
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:122"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 94
                },
                "end": {
                  "line": 0,
                  "character": 104
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:94"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "scope": null
        },
        "parentid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string).varParam.parentid",
          "nodeType": "variable",
          "name": "parentId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "parentId",
            "textToLower": "parentid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 155
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_parentId_0:147"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "parentId",
            "textToLower": "parentid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 155
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_parentId_0:147"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopic(string,string,connectapi.managedtopictype,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 140
                },
                "end": {
                  "line": 0,
                  "character": 146
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:140"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the topic. Specify Navigational for the type of managed topic to create a child managed topic.You can create up to 25 Featured and 5,000 Content topics. You can create up to eight levels of Navigational managed topics with 25 top-level topics and 10 children topics per level for a maximum of 2,775 Navigational topics.  ID of the parent managed topic.You can create up to eight levels (parent, direct children, their children, etc.) of managed topics and up to 10 children managed topics per managed topic.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createmanagedtopicbyname(string,string,connectapi.managedtopictype)": {
      "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype)",
      "nodeType": "method",
      "name": "createManagedTopicByName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createManagedTopicByName",
        "textToLower": "createmanagedtopicbyname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createManagedTopicByName_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopic createManagedTopicByName(String communityId, String name, ConnectApi.ManagedTopicType managedTopicType)",
      "overrideSignature": "public static override ConnectApi.ManagedTopic createManagedTopicByName(String communityId, String name, ConnectApi.ManagedTopicType managedTopicType)",
      "simplifiedSignature": "createManagedTopicByName(String,String,ConnectApi.ManagedTopicType)",
      "datatype": {
        "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.ConnectApi.ManagedTopic",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopic",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopic"
      },
      "description": "Create a managed topic of a specific type by name for a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 81
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:70"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 81
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:70"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 69
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:63"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "name": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype).varParam.name",
          "nodeType": "variable",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:90"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:90"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 83
                },
                "end": {
                  "line": 0,
                  "character": 89
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:83"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 124
              },
              "end": {
                "line": 0,
                "character": 140
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:124"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 124
              },
              "end": {
                "line": 0,
                "character": 140
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:124"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 106
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:96"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "description": "Use either the ID for a community, internal, or null. Name of the topic. Specify the type of managed topic.  Content—Topics that are associated with native content.   Featured—Topics that are featured, for example, on the community home page, but don’t provide overall navigation.   Navigational—Topics that display in a navigational menu in the community.   A topic can be associated with all three managed topic types, so a topic can be a Featured, Navigational, and Content topic. You can create up to 25 Featured and 5,000 Content topics. You can create up to eight levels of Navigational managed topics with 25 top-level topics and 10 children topics per level for a maximum of 2,775 Navigational topics.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createmanagedtopicbyname(string,string,connectapi.managedtopictype,string)": {
      "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string)",
      "nodeType": "method",
      "name": "createManagedTopicByName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createManagedTopicByName",
        "textToLower": "createmanagedtopicbyname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createManagedTopicByName_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopic createManagedTopicByName(String communityId, String name, ConnectApi.ManagedTopicType managedTopicType, String parentId)",
      "overrideSignature": "public static override ConnectApi.ManagedTopic createManagedTopicByName(String communityId, String name, ConnectApi.ManagedTopicType managedTopicType, String parentId)",
      "simplifiedSignature": "createManagedTopicByName(String,String,ConnectApi.ManagedTopicType,String)",
      "datatype": {
        "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.ConnectApi.ManagedTopic",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopic",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopic"
      },
      "description": "Create a child managed topic by name for a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 81
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:70"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 81
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:70"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 69
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:63"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "name": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string).varParam.name",
          "nodeType": "variable",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:90"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:90"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 83
                },
                "end": {
                  "line": 0,
                  "character": 89
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:83"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 124
              },
              "end": {
                "line": 0,
                "character": 140
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:124"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 124
              },
              "end": {
                "line": 0,
                "character": 140
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:124"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 106
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:96"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "scope": null
        },
        "parentid": {
          "id": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string).varParam.parentid",
          "nodeType": "variable",
          "name": "parentId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "parentId",
            "textToLower": "parentid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 149
              },
              "end": {
                "line": 0,
                "character": 157
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_parentId_0:149"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "parentId",
            "textToLower": "parentid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 149
              },
              "end": {
                "line": 0,
                "character": 157
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_parentId_0:149"
          },
          "parentId": "ConnectApi.managedtopics.method.createmanagedtopicbyname(string,string,connectapi.managedtopictype,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.managedtopics.createmanagedtopicbyname.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 142
                },
                "end": {
                  "line": 0,
                  "character": 148
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:142"
            },
            "parentId": "ConnectApi.managedtopics.createmanagedtopicbyname",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. Name of the topic. Specify Navigational for the type of managed topic to create a child managed topic.You can create up to 25 Featured and 5,000 Content topics. You can create up to eight levels of Navigational managed topics with 25 top-level topics and 10 children topics per level for a maximum of 2,775 Navigational topics.  ID of the parent managed topic.You can create up to eight levels (parent, direct children, their children, etc.) of managed topics and up to 10 children managed topics per managed topic.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deletemanagedtopic(string,string)": {
      "id": "ConnectApi.managedtopics.method.deletemanagedtopic(string,string)",
      "nodeType": "method",
      "name": "deleteManagedTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteManagedTopic",
        "textToLower": "deletemanagedtopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteManagedTopic_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static deleteManagedTopic(String communityId, String managedTopicId)",
      "overrideSignature": "public static override deleteManagedTopic(String communityId, String managedTopicId)",
      "simplifiedSignature": "deleteManagedTopic(String,String)",
      "description": "Delete a managed topic from a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.deletemanagedtopic(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 41
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:41"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 41
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:41"
          },
          "parentId": "ConnectApi.managedtopics.method.deletemanagedtopic(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.deletemanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 34
                },
                "end": {
                  "line": 0,
                  "character": 40
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:34"
            },
            "parentId": "ConnectApi.managedtopics.deletemanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopicid": {
          "id": "ConnectApi.managedtopics.method.deletemanagedtopic(string,string).varParam.managedtopicid",
          "nodeType": "variable",
          "name": "managedTopicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicId",
            "textToLower": "managedtopicid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicId_0:61"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicId",
            "textToLower": "managedtopicid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicId_0:61"
          },
          "parentId": "ConnectApi.managedtopics.method.deletemanagedtopic(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.deletemanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 54
                },
                "end": {
                  "line": 0,
                  "character": 60
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:54"
            },
            "parentId": "ConnectApi.managedtopics.deletemanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of managed topic.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopic(string,string)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopic(string,string)",
      "nodeType": "method",
      "name": "getManagedTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopic",
        "textToLower": "getmanagedtopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopic_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopic getManagedTopic(String communityId, String managedTopicId)",
      "overrideSignature": "public static override ConnectApi.ManagedTopic getManagedTopic(String communityId, String managedTopicId)",
      "simplifiedSignature": "getManagedTopic(String,String)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopic.datatype.ConnectApi.ManagedTopic",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopic",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopic",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopic"
      },
      "description": "Get a managed topic in a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopic(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:61"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:61"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopic(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 54
                },
                "end": {
                  "line": 0,
                  "character": 60
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:54"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopicid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopic(string,string).varParam.managedtopicid",
          "nodeType": "variable",
          "name": "managedTopicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicId",
            "textToLower": "managedtopicid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicId_0:81"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicId",
            "textToLower": "managedtopicid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicId_0:81"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopic(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 74
                },
                "end": {
                  "line": 0,
                  "character": 80
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:74"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of managed topic.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopic(string,string,integer)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopic(string,string,integer)",
      "nodeType": "method",
      "name": "getManagedTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopic",
        "textToLower": "getmanagedtopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopic_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 7,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopic getManagedTopic(String communityId, String managedTopicId, Integer depth)",
      "overrideSignature": "public static override ConnectApi.ManagedTopic getManagedTopic(String communityId, String managedTopicId, Integer depth)",
      "simplifiedSignature": "getManagedTopic(String,String,Integer)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopic.datatype.ConnectApi.ManagedTopic",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopic",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopic",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopic"
      },
      "description": "Get a managed topic, including its parent and children managed topics, in a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopic(string,string,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:61"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 61
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:61"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopic(string,string,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 54
                },
                "end": {
                  "line": 0,
                  "character": 60
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:54"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopicid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopic(string,string,integer).varParam.managedtopicid",
          "nodeType": "variable",
          "name": "managedTopicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicId",
            "textToLower": "managedtopicid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicId_0:81"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicId",
            "textToLower": "managedtopicid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicId_0:81"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopic(string,string,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopic.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 74
                },
                "end": {
                  "line": 0,
                  "character": 80
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:74"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "depth": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopic(string,string,integer).varParam.depth",
          "nodeType": "variable",
          "name": "depth",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 110
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:105"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 110
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:105"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopic(string,string,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopic.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 97
                },
                "end": {
                  "line": 0,
                  "character": 104
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:97"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopic",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. ID of managed topic. Specify an integer 1–8. If you specify 1, the children property of the ConnectApi.ManagedTopic output class is null. If you specify 2, the children property of the ConnectApi.ManagedTopic output class contains the direct children managed topics, if any, of the managed topic. If you specify 3–8, you get the direct children managed topics and their children managed topics if there are any. If depth isn’t specified, it defaults to 1.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopics(string)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopics(string)",
      "nodeType": "method",
      "name": "getManagedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopics",
        "textToLower": "getmanagedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopics_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 8,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopicCollection getManagedTopics(String communityId)",
      "overrideSignature": "public static override ConnectApi.ManagedTopicCollection getManagedTopics(String communityId)",
      "simplifiedSignature": "getManagedTopics(String)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopicCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopics",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopicCollection"
      },
      "description": "Get the featured and navigational managed topics for the community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 71
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:65"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopics(string,connectapi.managedtopictype)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype)",
      "nodeType": "method",
      "name": "getManagedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopics",
        "textToLower": "getmanagedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopics_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 9,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType)",
      "overrideSignature": "public static override ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType)",
      "simplifiedSignature": "getManagedTopics(String,ConnectApi.ManagedTopicType)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopicCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopics",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopicCollection"
      },
      "description": "Get managed topics of the specified type for a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 71
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:65"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 85
                },
                "end": {
                  "line": 0,
                  "character": 95
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:85"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "description": "Use either the ID for a community, internal, or null. Type of managed topic.  Content—Topics that are associated with native content.   Featured—Topics that are featured, for example, on the community home page, but don’t provide overall navigation.   Navigational—Topics that display in a navigational menu in the community.   A topic can be associated with all three managed topic types, so a topic can be a Featured, Navigational, and Content topic. If you specify Content, up to 50 topics are returned. If you want more than 50 Content topics, use getManagedTopics(communityId, managedTopicType, pageParam, pageSize).",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopics(string,connectapi.managedtopictype,integer)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer)",
      "nodeType": "method",
      "name": "getManagedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopics",
        "textToLower": "getmanagedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopics_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 10,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, Integer depth)",
      "overrideSignature": "public static override ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, Integer depth)",
      "simplifiedSignature": "getManagedTopics(String,ConnectApi.ManagedTopicType,Integer)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopicCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopics",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopicCollection"
      },
      "description": "Get managed topics of the specified type, including their parent and children managed topics, in a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 71
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:65"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 85
                },
                "end": {
                  "line": 0,
                  "character": 95
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:85"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "scope": null
        },
        "depth": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer).varParam.depth",
          "nodeType": "variable",
          "name": "depth",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 139
              },
              "end": {
                "line": 0,
                "character": 144
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:139"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 139
              },
              "end": {
                "line": 0,
                "character": 144
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:139"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 138
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:131"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. Type of managed topic.  Content—Topics that are associated with native content.   Featured—Topics that are featured, for example, on the community home page, but don’t provide overall navigation.   Navigational—Topics that display in a navigational menu in the community.   A topic can be associated with all three managed topic types, so a topic can be a Featured, Navigational, and Content topic.  Specify an integer 1–8. If you specify 1, the children property of the ConnectApi.ManagedTopic output class is null. If you specify 2, the children property of the ConnectApi.ManagedTopic output class contains the direct children managed topics, if any, of the managed topic. If you specify 3–8, you get the direct children managed topics and their children managed topics if there are any. If depth isn’t specified, it defaults to 1.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopics(string,connectapi.managedtopictype,string,integer)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer)",
      "nodeType": "method",
      "name": "getManagedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopics",
        "textToLower": "getmanagedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopics_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 11,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, String recordId, Integer depth)",
      "overrideSignature": "public static override ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, String recordId, Integer depth)",
      "simplifiedSignature": "getManagedTopics(String,ConnectApi.ManagedTopicType,String,Integer)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopicCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopics",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopicCollection"
      },
      "description": "Get managed topics of the specified type, including their parent and children managed topics, that are associated with a given topic in a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 71
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:65"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 85
                },
                "end": {
                  "line": 0,
                  "character": 95
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:85"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "scope": null
        },
        "recordid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer).varParam.recordid",
          "nodeType": "variable",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 138
              },
              "end": {
                "line": 0,
                "character": 146
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:138"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 138
              },
              "end": {
                "line": 0,
                "character": 146
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:138"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 137
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:131"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "depth": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer).varParam.depth",
          "nodeType": "variable",
          "name": "depth",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 161
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:156"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 161
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:156"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,string,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 148
                },
                "end": {
                  "line": 0,
                  "character": 155
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:148"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. Type of managed topic.  Content—Topics that are associated with native content.   Featured—Topics that are featured, for example, on the community home page, but don’t provide overall navigation.   Navigational—Topics that display in a navigational menu in the community.   A topic can be associated with all three managed topic types, so a topic can be a Featured, Navigational, and Content topic.  ID of the topic associated with the managed topics. Specify an integer 1–8. If you specify 1, the children property of the ConnectApi.ManagedTopic output class is null. If you specify 2, the children property of the ConnectApi.ManagedTopic output class contains the direct children managed topics, if any, of the managed topic. If you specify 3–8, you get the direct children managed topics and their children managed topics if there are any. If depth isn’t specified, it defaults to 1.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer)",
      "nodeType": "method",
      "name": "getManagedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopics",
        "textToLower": "getmanagedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopics_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 12,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, List<String> recordIds, Integer depth)",
      "overrideSignature": "public static override ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, List<String> recordIds, Integer depth)",
      "simplifiedSignature": "getManagedTopics(String,ConnectApi.ManagedTopicType,List<String>,Integer)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopicCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopics",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopicCollection"
      },
      "description": "Get managed topics of the specified type, including their parent and children managed topics, that are associated with topics in a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 71
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:65"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 85
                },
                "end": {
                  "line": 0,
                  "character": 95
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:85"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "scope": null
        },
        "recordids": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer).varParam.recordids",
          "nodeType": "variable",
          "name": "recordIds",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordIds",
            "textToLower": "recordids",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 144
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordIds_0:144"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordIds",
            "textToLower": "recordids",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 144
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordIds_0:144"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.List<String>",
            "nodeType": "datatype",
            "name": "List<String>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 135
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:131"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.List<String>.value.String",
              "nodeType": "datatype",
              "name": "String",
              "startToken": {
                "type": "datatype.primitive",
                "text": "String",
                "textToLower": "string",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 136
                  },
                  "end": {
                    "line": 0,
                    "character": 142
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_String_0:136"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "String"
            }
          },
          "scope": null
        },
        "depth": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer).varParam.depth",
          "nodeType": "variable",
          "name": "depth",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 163
              },
              "end": {
                "line": 0,
                "character": 168
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:163"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "depth",
            "textToLower": "depth",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 163
              },
              "end": {
                "line": 0,
                "character": 168
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_depth_0:163"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,list<string>,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 155
                },
                "end": {
                  "line": 0,
                  "character": 162
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:155"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. Type of managed topic.  Content—Topics that are associated with native content.   Featured—Topics that are featured, for example, on the community home page, but don’t provide overall navigation.   Navigational—Topics that display in a navigational menu in the community.   A topic can be associated with all three managed topic types, so a topic can be a Featured, Navigational, and Content topic.  A list of up to 100 topic IDs associated with the managed topics.If you list more than 10 topic IDs, you can’t specify 2–8 for depth.  Specify an integer 1–8. If you specify 1, the children property of the ConnectApi.ManagedTopic output class is null. If you specify 2, the children property of the ConnectApi.ManagedTopic output class contains the direct children managed topics, if any, of the managed topic. If you specify 3–8, you get the direct children managed topics and their children managed topics if there are any. If depth isn’t specified, it defaults to 1.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getmanagedtopics(string,connectapi.managedtopictype,integer,integer)": {
      "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer)",
      "nodeType": "method",
      "name": "getManagedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getManagedTopics",
        "textToLower": "getmanagedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getManagedTopics_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 13,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, Integer pageParam, Integer pageSize)",
      "overrideSignature": "public static override ConnectApi.ManagedTopicCollection getManagedTopics(String communityId, ConnectApi.ManagedTopicType managedTopicType, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getManagedTopics(String,ConnectApi.ManagedTopicType,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopicCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.getmanagedtopics",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopicCollection"
      },
      "description": "Get a page of managed topics.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:72"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 71
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:65"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopictype": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer).varParam.managedtopictype",
          "nodeType": "variable",
          "name": "managedTopicType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicType",
            "textToLower": "managedtopictype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicType_0:113"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.ConnectApi.ManagedTopicType",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 85
                },
                "end": {
                  "line": 0,
                  "character": 95
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:85"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicType"
          },
          "scope": null
        },
        "pageparam": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer).varParam.pageparam",
          "nodeType": "variable",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 139
              },
              "end": {
                "line": 0,
                "character": 148
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageParam_0:139"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 139
              },
              "end": {
                "line": 0,
                "character": 148
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageParam_0:139"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 138
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:131"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "pagesize": {
          "id": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer).varParam.pagesize",
          "nodeType": "variable",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 158
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageSize_0:158"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 158
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageSize_0:158"
          },
          "parentId": "ConnectApi.managedtopics.method.getmanagedtopics(string,connectapi.managedtopictype,integer,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.managedtopics.getmanagedtopics.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 150
                },
                "end": {
                  "line": 0,
                  "character": 157
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:150"
            },
            "parentId": "ConnectApi.managedtopics.getmanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. Type of managed topic.  Content—Topics that are associated with native content.   Featured—Topics that are featured, for example, on the community home page, but don’t provide overall navigation.   Navigational—Topics that display in a navigational menu in the community.   A topic can be associated with all three managed topic types, so a topic can be a Featured, Navigational, and Content topic.  Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of items per page. Valid values are from 1 through 100. If you pass in null, the default size is 50.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "reordermanagedtopics(string,connectapi.managedtopicpositioncollectioninput)": {
      "id": "ConnectApi.managedtopics.method.reordermanagedtopics(string,connectapi.managedtopicpositioncollectioninput)",
      "nodeType": "method",
      "name": "reorderManagedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "reorderManagedTopics",
        "textToLower": "reordermanagedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_reorderManagedTopics_-1:0"
      },
      "parentId": "ConnectApi.managedtopics",
      "order": 14,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ManagedTopicCollection reorderManagedTopics(String communityId, ConnectApi.ManagedTopicPositionCollectionInput managedTopicPositionCollection)",
      "overrideSignature": "public static override ConnectApi.ManagedTopicCollection reorderManagedTopics(String communityId, ConnectApi.ManagedTopicPositionCollectionInput managedTopicPositionCollection)",
      "simplifiedSignature": "reorderManagedTopics(String,ConnectApi.ManagedTopicPositionCollectionInput)",
      "datatype": {
        "id": "ConnectApi.managedtopics.reordermanagedtopics.datatype.ConnectApi.ManagedTopicCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.ManagedTopicCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.managedtopics.reordermanagedtopics",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ManagedTopicCollection"
      },
      "description": "Reorder the relative positions of managed topics in a community.",
      "parentName": "ManagedTopics",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.managedtopics.method.reordermanagedtopics(string,connectapi.managedtopicpositioncollectioninput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 76
              },
              "end": {
                "line": 0,
                "character": 87
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:76"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 76
              },
              "end": {
                "line": 0,
                "character": 87
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:76"
          },
          "parentId": "ConnectApi.managedtopics.method.reordermanagedtopics(string,connectapi.managedtopicpositioncollectioninput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.managedtopics.reordermanagedtopics.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 69
                },
                "end": {
                  "line": 0,
                  "character": 75
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:69"
            },
            "parentId": "ConnectApi.managedtopics.reordermanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "managedtopicpositioncollection": {
          "id": "ConnectApi.managedtopics.method.reordermanagedtopics(string,connectapi.managedtopicpositioncollectioninput).varParam.managedtopicpositioncollection",
          "nodeType": "variable",
          "name": "managedTopicPositionCollection",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicPositionCollection",
            "textToLower": "managedtopicpositioncollection",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 136
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicPositionCollection_0:136"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "managedTopicPositionCollection",
            "textToLower": "managedtopicpositioncollection",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 136
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_managedTopicPositionCollection_0:136"
          },
          "parentId": "ConnectApi.managedtopics.method.reordermanagedtopics(string,connectapi.managedtopicpositioncollectioninput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.managedtopics.reordermanagedtopics.datatype.ConnectApi.ManagedTopicPositionCollectionInput",
            "nodeType": "datatype",
            "name": "ConnectApi.ManagedTopicPositionCollectionInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 89
                },
                "end": {
                  "line": 0,
                  "character": 99
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:89"
            },
            "parentId": "ConnectApi.managedtopics.reordermanagedtopics",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ManagedTopicPositionCollectionInput"
          },
          "description": "Use either the ID for a community, internal, or null. A collection of relative positions of managed topics. This collection can include only Featured and Navigational topics and doesn’t have to include all managed topics.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 14,
  "queries": []
}