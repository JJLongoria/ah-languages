{
  "id": "ConnectApi.recommendations",
  "nodeType": "class",
  "name": "Recommendations",
  "namespace": "ConnectApi",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Recommendations",
    "textToLower": "recommendations",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Recommendations_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Get and reject Chatter, custom, and static recommendations. Create, get, update, and delete custom recommendation audiences, custom recommendation definitions, and scheduled custom recommendations.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ConnectAPI_Recommendations_static_methods.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "createrecommendationaudience(string,connectapi.recommendationaudienceinput)": {
      "id": "ConnectApi.recommendations.method.createrecommendationaudience(string,connectapi.recommendationaudienceinput)",
      "nodeType": "method",
      "name": "createRecommendationAudience",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createRecommendationAudience",
        "textToLower": "createrecommendationaudience",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createRecommendationAudience_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationAudience createRecommendationAudience(String communityId, ConnectApi.RecommendationAudienceInput recommendationAudience)",
      "overrideSignature": "public static override ConnectApi.RecommendationAudience createRecommendationAudience(String communityId, ConnectApi.RecommendationAudienceInput recommendationAudience)",
      "simplifiedSignature": "createRecommendationAudience(String,ConnectApi.RecommendationAudienceInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.createrecommendationaudience.datatype.ConnectApi.RecommendationAudience",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationAudience",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.createrecommendationaudience",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationAudience"
      },
      "description": "Create an audience for a custom recommendation.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.createrecommendationaudience(string,connectapi.recommendationaudienceinput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:84"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:84"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationaudience(string,connectapi.recommendationaudienceinput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 77
                },
                "end": {
                  "line": 0,
                  "character": 83
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:77"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationaudience": {
          "id": "ConnectApi.recommendations.method.createrecommendationaudience(string,connectapi.recommendationaudienceinput).varParam.recommendationaudience",
          "nodeType": "variable",
          "name": "recommendationAudience",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudience",
            "textToLower": "recommendationaudience",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 136
              },
              "end": {
                "line": 0,
                "character": 158
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudience_0:136"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudience",
            "textToLower": "recommendationaudience",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 136
              },
              "end": {
                "line": 0,
                "character": 158
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudience_0:136"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationaudience(string,connectapi.recommendationaudienceinput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationaudience.datatype.ConnectApi.RecommendationAudienceInput",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationAudienceInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 97
                },
                "end": {
                  "line": 0,
                  "character": 107
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:97"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationAudienceInput"
          },
          "description": "Use either the ID for a community, internal, or null. A ConnectApi.RecommendationAudienceInput object.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createrecommendationaudience(string,string)": {
      "id": "ConnectApi.recommendations.method.createrecommendationaudience(string,string)",
      "nodeType": "method",
      "name": "createRecommendationAudience",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createRecommendationAudience",
        "textToLower": "createrecommendationaudience",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createRecommendationAudience_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationAudience createRecommendationAudience(String communityId, String name)",
      "overrideSignature": "public static override ConnectApi.RecommendationAudience createRecommendationAudience(String communityId, String name)",
      "simplifiedSignature": "createRecommendationAudience(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.createrecommendationaudience.datatype.ConnectApi.RecommendationAudience",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationAudience",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.createrecommendationaudience",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationAudience"
      },
      "description": "Create an audience for a custom recommendation.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.createrecommendationaudience(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:84"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:84"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationaudience(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 77
                },
                "end": {
                  "line": 0,
                  "character": 83
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:77"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "name": {
          "id": "ConnectApi.recommendations.method.createrecommendationaudience(string,string).varParam.name",
          "nodeType": "variable",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 108
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:104"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 108
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:104"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationaudience(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 97
                },
                "end": {
                  "line": 0,
                  "character": 103
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:97"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. Name of the audience.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createrecommendationdefinition(string,connectapi.recommendationdefinitioninput)": {
      "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,connectapi.recommendationdefinitioninput)",
      "nodeType": "method",
      "name": "createRecommendationDefinition",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createRecommendationDefinition",
        "textToLower": "createrecommendationdefinition",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createRecommendationDefinition_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationDefinition createRecommendationDefinition(String communityId, ConnectApi.RecommendationDefinitionInput recommendationDefinition)",
      "overrideSignature": "public static override ConnectApi.RecommendationDefinition createRecommendationDefinition(String communityId, ConnectApi.RecommendationDefinitionInput recommendationDefinition)",
      "simplifiedSignature": "createRecommendationDefinition(String,ConnectApi.RecommendationDefinitionInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.ConnectApi.RecommendationDefinition",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationDefinition",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationDefinition"
      },
      "description": "Create a custom recommendation definition.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,connectapi.recommendationdefinitioninput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,connectapi.recommendationdefinitioninput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinition": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,connectapi.recommendationdefinitioninput).varParam.recommendationdefinition",
          "nodeType": "variable",
          "name": "recommendationDefinition",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinition",
            "textToLower": "recommendationdefinition",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 142
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinition_0:142"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinition",
            "textToLower": "recommendationdefinition",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 142
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinition_0:142"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,connectapi.recommendationdefinitioninput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.ConnectApi.RecommendationDefinitionInput",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationDefinitionInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 111
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:101"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationDefinitionInput"
          },
          "description": "Use either the ID for a community, internal, or null. A ConnectApi.RecommendationDefinitionInput object.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createrecommendationdefinition(string,string,string,string,string,string)": {
      "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string)",
      "nodeType": "method",
      "name": "createRecommendationDefinition",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createRecommendationDefinition",
        "textToLower": "createrecommendationdefinition",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createRecommendationDefinition_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationDefinition createRecommendationDefinition(String communityId, String name, String title, String actionUrl, String actionUrlName, String explanation)",
      "overrideSignature": "public static override ConnectApi.RecommendationDefinition createRecommendationDefinition(String communityId, String name, String title, String actionUrl, String actionUrlName, String explanation)",
      "simplifiedSignature": "createRecommendationDefinition(String,String,String,String,String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.ConnectApi.RecommendationDefinition",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationDefinition",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationDefinition"
      },
      "description": "Create a custom recommendation definition with the specified parameters.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "name": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string).varParam.name",
          "nodeType": "variable",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 112
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:108"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 112
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:108"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 107
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:101"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "title": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string).varParam.title",
          "nodeType": "variable",
          "name": "title",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "title",
            "textToLower": "title",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 121
              },
              "end": {
                "line": 0,
                "character": 126
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_title_0:121"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "title",
            "textToLower": "title",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 121
              },
              "end": {
                "line": 0,
                "character": 126
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_title_0:121"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 114
                },
                "end": {
                  "line": 0,
                  "character": 120
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:114"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "actionurl": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string).varParam.actionurl",
          "nodeType": "variable",
          "name": "actionUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrl",
            "textToLower": "actionurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 135
              },
              "end": {
                "line": 0,
                "character": 144
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrl_0:135"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrl",
            "textToLower": "actionurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 135
              },
              "end": {
                "line": 0,
                "character": 144
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrl_0:135"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 128
                },
                "end": {
                  "line": 0,
                  "character": 134
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:128"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "actionurlname": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string).varParam.actionurlname",
          "nodeType": "variable",
          "name": "actionUrlName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrlName",
            "textToLower": "actionurlname",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 153
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrlName_0:153"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrlName",
            "textToLower": "actionurlname",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 153
              },
              "end": {
                "line": 0,
                "character": 166
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrlName_0:153"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 146
                },
                "end": {
                  "line": 0,
                  "character": 152
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:146"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "explanation": {
          "id": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string).varParam.explanation",
          "nodeType": "variable",
          "name": "explanation",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "explanation",
            "textToLower": "explanation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 175
              },
              "end": {
                "line": 0,
                "character": 186
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_explanation_0:175"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "explanation",
            "textToLower": "explanation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 175
              },
              "end": {
                "line": 0,
                "character": 186
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_explanation_0:175"
          },
          "parentId": "ConnectApi.recommendations.method.createrecommendationdefinition(string,string,string,string,string,string)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.createrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 168
                },
                "end": {
                  "line": 0,
                  "character": 174
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:168"
            },
            "parentId": "ConnectApi.recommendations.createrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. Name of the custom recommendation definition. The name is displayed in Setup. Title of the custom recommendation definition. URL for acting on the custom recommendation, for example, the URL to join a group. Text label for the action URL in the user interface, for example, “Launch.” Explanation, or body, of the custom recommendation.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createscheduledrecommendation(string,connectapi.scheduledrecommendationinput)": {
      "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,connectapi.scheduledrecommendationinput)",
      "nodeType": "method",
      "name": "createScheduledRecommendation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createScheduledRecommendation",
        "textToLower": "createscheduledrecommendation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createScheduledRecommendation_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendation createScheduledRecommendation(String communityId, ConnectApi.ScheduledRecommendationInput scheduledRecommendation)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendation createScheduledRecommendation(String communityId, ConnectApi.ScheduledRecommendationInput scheduledRecommendation)",
      "simplifiedSignature": "createScheduledRecommendation(String,ConnectApi.ScheduledRecommendationInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.ConnectApi.ScheduledRecommendation",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendation",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendation"
      },
      "description": "Create a scheduled custom recommendation.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,connectapi.scheduledrecommendationinput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,connectapi.scheduledrecommendationinput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "scheduledrecommendation": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,connectapi.scheduledrecommendationinput).varParam.scheduledrecommendation",
          "nodeType": "variable",
          "name": "scheduledRecommendation",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendation",
            "textToLower": "scheduledrecommendation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 139
              },
              "end": {
                "line": 0,
                "character": 162
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendation_0:139"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendation",
            "textToLower": "scheduledrecommendation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 139
              },
              "end": {
                "line": 0,
                "character": 162
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendation_0:139"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,connectapi.scheduledrecommendationinput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.ConnectApi.ScheduledRecommendationInput",
            "nodeType": "datatype",
            "name": "ConnectApi.ScheduledRecommendationInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 109
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:99"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ScheduledRecommendationInput"
          },
          "description": "Use either the ID for a community, internal, or null. A ConnectApi.ScheduledRecommendationInput object.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createscheduledrecommendation(string,string,integer,boolean,string)": {
      "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string)",
      "nodeType": "method",
      "name": "createScheduledRecommendation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createScheduledRecommendation",
        "textToLower": "createscheduledrecommendation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createScheduledRecommendation_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendation createScheduledRecommendation(String communityId, String recommendationDefinitionId, Integer rank, Boolean enabled, String recommendationAudienceId)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendation createScheduledRecommendation(String communityId, String recommendationDefinitionId, Integer rank, Boolean enabled, String recommendationAudienceId)",
      "simplifiedSignature": "createScheduledRecommendation(String,String,Integer,Boolean,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.ConnectApi.ScheduledRecommendation",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendation",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendation"
      },
      "description": "Create a scheduled custom recommendation with the specified parameters.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 132
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:106"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 132
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:106"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 105
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:99"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "rank": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string).varParam.rank",
          "nodeType": "variable",
          "name": "rank",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rank",
            "textToLower": "rank",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 142
              },
              "end": {
                "line": 0,
                "character": 146
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_rank_0:142"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "rank",
            "textToLower": "rank",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 142
              },
              "end": {
                "line": 0,
                "character": 146
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_rank_0:142"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 134
                },
                "end": {
                  "line": 0,
                  "character": 141
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:134"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "enabled": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string).varParam.enabled",
          "nodeType": "variable",
          "name": "enabled",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "enabled",
            "textToLower": "enabled",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_enabled_0:156"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "enabled",
            "textToLower": "enabled",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_enabled_0:156"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 148
                },
                "end": {
                  "line": 0,
                  "character": 155
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:148"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 172
              },
              "end": {
                "line": 0,
                "character": 196
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:172"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 172
              },
              "end": {
                "line": 0,
                "character": 196
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:172"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 165
                },
                "end": {
                  "line": 0,
                  "character": 171
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:165"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition. Relative rank of the scheduled custom recommendation indicated by ascending whole numbers starting with 1.Setting the rank is comparable to an insertion into an ordered list. The scheduled custom recommendation is inserted into the position specified by the rank. The rank of all the scheduled custom recommendations after it is pushed down. See Ranking scheduled custom recommendations example. If the specified rank is larger than the size of the list, the scheduled custom recommendation is put at the end of the list. The rank of the scheduled custom recommendation is the size of the list, instead of the one specified. If a rank is not specified, the scheduled custom recommendation is put at the end of the list.  Indicates whether scheduling is enabled. If true, the custom recommendation is enabled and appears in communities. If false, custom recommendations in feeds in Salesforce mobile web aren’t removed, but no new custom recommendations appear. In Customer Service and Partner Central communities, disabled custom recommendations no longer appear. ID of the custom recommendation definition that this scheduled recommendation schedules.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)": {
      "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)",
      "nodeType": "method",
      "name": "createScheduledRecommendation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createScheduledRecommendation",
        "textToLower": "createscheduledrecommendation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createScheduledRecommendation_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 7,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendation createScheduledRecommendation(String communityId, String recommendationDefinitionId, Integer rank, Boolean enabled, String recommendationAudienceId, ConnectApi.RecommendationChannel channel)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendation createScheduledRecommendation(String communityId, String recommendationDefinitionId, Integer rank, Boolean enabled, String recommendationAudienceId, ConnectApi.RecommendationChannel channel)",
      "simplifiedSignature": "createScheduledRecommendation(String,String,Integer,Boolean,String,ConnectApi.RecommendationChannel)",
      "datatype": {
        "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.ConnectApi.ScheduledRecommendation",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendation",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendation"
      },
      "description": "Create a scheduled custom recommendation with the specified parameters.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 132
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:106"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 132
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:106"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 105
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:99"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "rank": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel).varParam.rank",
          "nodeType": "variable",
          "name": "rank",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rank",
            "textToLower": "rank",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 142
              },
              "end": {
                "line": 0,
                "character": 146
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_rank_0:142"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "rank",
            "textToLower": "rank",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 142
              },
              "end": {
                "line": 0,
                "character": 146
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_rank_0:142"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 134
                },
                "end": {
                  "line": 0,
                  "character": 141
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:134"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "enabled": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel).varParam.enabled",
          "nodeType": "variable",
          "name": "enabled",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "enabled",
            "textToLower": "enabled",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_enabled_0:156"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "enabled",
            "textToLower": "enabled",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_enabled_0:156"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 148
                },
                "end": {
                  "line": 0,
                  "character": 155
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:148"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 172
              },
              "end": {
                "line": 0,
                "character": 196
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:172"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 172
              },
              "end": {
                "line": 0,
                "character": 196
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:172"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 165
                },
                "end": {
                  "line": 0,
                  "character": 171
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:165"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 231
              },
              "end": {
                "line": 0,
                "character": 238
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:231"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 231
              },
              "end": {
                "line": 0,
                "character": 238
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:231"
          },
          "parentId": "ConnectApi.recommendations.method.createscheduledrecommendation(string,string,integer,boolean,string,connectapi.recommendationchannel)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.createscheduledrecommendation.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 198
                },
                "end": {
                  "line": 0,
                  "character": 208
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:198"
            },
            "parentId": "ConnectApi.recommendations.createscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition. Relative rank of the scheduled custom recommendation indicated by ascending whole numbers starting with 1.Setting the rank is comparable to an insertion into an ordered list. The scheduled custom recommendation is inserted into the position specified by the rank. The rank of all the scheduled custom recommendations after it is pushed down. See Ranking scheduled custom recommendations example. If the specified rank is larger than the size of the list, the scheduled custom recommendation is put at the end of the list. The rank of the scheduled custom recommendation is the size of the list, instead of the one specified. If a rank is not specified, the scheduled custom recommendation is put at the end of the list.  Indicates whether scheduling is enabled. If true, the custom recommendation is enabled and appears in communities. If false, custom recommendations in feeds in Salesforce mobile web aren’t removed, but no new custom recommendations appear. In Customer Service and Partner Central communities, disabled custom recommendations no longer appear. ID of the custom recommendation definition that this scheduled recommendation schedules. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.   Use these channel values; you can’t rename or create other channels.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleterecommendationaudience(string,string)": {
      "id": "ConnectApi.recommendations.method.deleterecommendationaudience(string,string)",
      "nodeType": "method",
      "name": "deleteRecommendationAudience",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteRecommendationAudience",
        "textToLower": "deleterecommendationaudience",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteRecommendationAudience_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 8,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void deleteRecommendationAudience(String communityId, String recommendationAudienceId)",
      "overrideSignature": "public static override Void deleteRecommendationAudience(String communityId, String recommendationAudienceId)",
      "simplifiedSignature": "deleteRecommendationAudience(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.deleterecommendationaudience.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.deleterecommendationaudience",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Delete a custom recommendation audience.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.deleterecommendationaudience(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 55
              },
              "end": {
                "line": 0,
                "character": 66
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:55"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 55
              },
              "end": {
                "line": 0,
                "character": 66
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:55"
          },
          "parentId": "ConnectApi.recommendations.method.deleterecommendationaudience(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.deleterecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 48
                },
                "end": {
                  "line": 0,
                  "character": 54
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:48"
            },
            "parentId": "ConnectApi.recommendations.deleterecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.deleterecommendationaudience(string,string).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 75
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:75"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 75
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:75"
          },
          "parentId": "ConnectApi.recommendations.method.deleterecommendationaudience(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.deleterecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 68
                },
                "end": {
                  "line": 0,
                  "character": 74
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:68"
            },
            "parentId": "ConnectApi.recommendations.deleterecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation audience.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleterecommendationdefinition(string,string)": {
      "id": "ConnectApi.recommendations.method.deleterecommendationdefinition(string,string)",
      "nodeType": "method",
      "name": "deleteRecommendationDefinition",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteRecommendationDefinition",
        "textToLower": "deleterecommendationdefinition",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteRecommendationDefinition_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 9,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void deleteRecommendationDefinition(String communityId, String recommendationDefinitionId)",
      "overrideSignature": "public static override Void deleteRecommendationDefinition(String communityId, String recommendationDefinitionId)",
      "simplifiedSignature": "deleteRecommendationDefinition(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.deleterecommendationdefinition.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.deleterecommendationdefinition",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Delete a custom recommendation definition.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.deleterecommendationdefinition(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 57
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:57"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 57
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:57"
          },
          "parentId": "ConnectApi.recommendations.method.deleterecommendationdefinition(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.deleterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 50
                },
                "end": {
                  "line": 0,
                  "character": 56
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:50"
            },
            "parentId": "ConnectApi.recommendations.deleterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.deleterecommendationdefinition(string,string).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 103
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:77"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 103
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:77"
          },
          "parentId": "ConnectApi.recommendations.method.deleterecommendationdefinition(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.deleterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 70
                },
                "end": {
                  "line": 0,
                  "character": 76
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:70"
            },
            "parentId": "ConnectApi.recommendations.deleterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleterecommendationdefinitionphoto(string,string)": {
      "id": "ConnectApi.recommendations.method.deleterecommendationdefinitionphoto(string,string)",
      "nodeType": "method",
      "name": "deleteRecommendationDefinitionPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteRecommendationDefinitionPhoto",
        "textToLower": "deleterecommendationdefinitionphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteRecommendationDefinitionPhoto_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 10,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void deleteRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId)",
      "overrideSignature": "public static override Void deleteRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId)",
      "simplifiedSignature": "deleteRecommendationDefinitionPhoto(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.deleterecommendationdefinitionphoto.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.deleterecommendationdefinitionphoto",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Delete a custom recommendation definition photo.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.deleterecommendationdefinitionphoto(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 62
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:62"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 62
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:62"
          },
          "parentId": "ConnectApi.recommendations.method.deleterecommendationdefinitionphoto(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.deleterecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 55
                },
                "end": {
                  "line": 0,
                  "character": 61
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:55"
            },
            "parentId": "ConnectApi.recommendations.deleterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.deleterecommendationdefinitionphoto(string,string).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 82
              },
              "end": {
                "line": 0,
                "character": 108
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:82"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 82
              },
              "end": {
                "line": 0,
                "character": 108
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:82"
          },
          "parentId": "ConnectApi.recommendations.method.deleterecommendationdefinitionphoto(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.deleterecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 75
                },
                "end": {
                  "line": 0,
                  "character": 81
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:75"
            },
            "parentId": "ConnectApi.recommendations.deleterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deletescheduledrecommendation(string,string,boolean)": {
      "id": "ConnectApi.recommendations.method.deletescheduledrecommendation(string,string,boolean)",
      "nodeType": "method",
      "name": "deleteScheduledRecommendation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteScheduledRecommendation",
        "textToLower": "deletescheduledrecommendation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteScheduledRecommendation_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 11,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void deleteScheduledRecommendation(String communityId, String scheduledRecommendationId, Boolean deleteDefinitionIfLast)",
      "overrideSignature": "public static override Void deleteScheduledRecommendation(String communityId, String scheduledRecommendationId, Boolean deleteDefinitionIfLast)",
      "simplifiedSignature": "deleteScheduledRecommendation(String,String,Boolean)",
      "datatype": {
        "id": "ConnectApi.recommendations.deletescheduledrecommendation.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.deletescheduledrecommendation",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Delete a scheduled custom recommendation.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.deletescheduledrecommendation(string,string,boolean).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 67
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:56"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 67
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:56"
          },
          "parentId": "ConnectApi.recommendations.method.deletescheduledrecommendation(string,string,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.deletescheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 49
                },
                "end": {
                  "line": 0,
                  "character": 55
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:49"
            },
            "parentId": "ConnectApi.recommendations.deletescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "scheduledrecommendationid": {
          "id": "ConnectApi.recommendations.method.deletescheduledrecommendation(string,string,boolean).varParam.scheduledrecommendationid",
          "nodeType": "variable",
          "name": "scheduledRecommendationId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 76
              },
              "end": {
                "line": 0,
                "character": 101
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:76"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 76
              },
              "end": {
                "line": 0,
                "character": 101
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:76"
          },
          "parentId": "ConnectApi.recommendations.method.deletescheduledrecommendation(string,string,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.deletescheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 69
                },
                "end": {
                  "line": 0,
                  "character": 75
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:69"
            },
            "parentId": "ConnectApi.recommendations.deletescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "deletedefinitioniflast": {
          "id": "ConnectApi.recommendations.method.deletescheduledrecommendation(string,string,boolean).varParam.deletedefinitioniflast",
          "nodeType": "variable",
          "name": "deleteDefinitionIfLast",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "deleteDefinitionIfLast",
            "textToLower": "deletedefinitioniflast",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 111
              },
              "end": {
                "line": 0,
                "character": 133
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_deleteDefinitionIfLast_0:111"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "deleteDefinitionIfLast",
            "textToLower": "deletedefinitioniflast",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 111
              },
              "end": {
                "line": 0,
                "character": 133
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_deleteDefinitionIfLast_0:111"
          },
          "parentId": "ConnectApi.recommendations.method.deletescheduledrecommendation(string,string,boolean)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.deletescheduledrecommendation.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 103
                },
                "end": {
                  "line": 0,
                  "character": 110
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:103"
            },
            "parentId": "ConnectApi.recommendations.deletescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the scheduled custom recommendation. If true and if this is the last scheduled custom recommendation of a custom recommendation definition, deletes the custom recommendation definition. Default is false.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationaudience(string,string)": {
      "id": "ConnectApi.recommendations.method.getrecommendationaudience(string,string)",
      "nodeType": "method",
      "name": "getRecommendationAudience",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationAudience",
        "textToLower": "getrecommendationaudience",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationAudience_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 12,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationAudience getRecommendationAudience(String communityId, String recommendationAudienceId)",
      "overrideSignature": "public static override ConnectApi.RecommendationAudience getRecommendationAudience(String communityId, String recommendationAudienceId)",
      "simplifiedSignature": "getRecommendationAudience(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationaudience.datatype.ConnectApi.RecommendationAudience",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationAudience",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationaudience",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationAudience"
      },
      "description": "Get information about a custom recommendation audience.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudience(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:81"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:81"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudience(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 74
                },
                "end": {
                  "line": 0,
                  "character": 80
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:74"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudience(string,string).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 101
              },
              "end": {
                "line": 0,
                "character": 125
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:101"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 101
              },
              "end": {
                "line": 0,
                "character": 125
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:101"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudience(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 94
                },
                "end": {
                  "line": 0,
                  "character": 100
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:94"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation audience.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationaudiencemembership(string,string)": {
      "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string)",
      "nodeType": "method",
      "name": "getRecommendationAudienceMembership",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationAudienceMembership",
        "textToLower": "getrecommendationaudiencemembership",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationAudienceMembership_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 13,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.UserReferencePage getRecommendationAudienceMembership(String communityId, String recommendationAudienceId)",
      "overrideSignature": "public static override ConnectApi.UserReferencePage getRecommendationAudienceMembership(String communityId, String recommendationAudienceId)",
      "simplifiedSignature": "getRecommendationAudienceMembership(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.ConnectApi.UserReferencePage",
        "nodeType": "datatype",
        "name": "ConnectApi.UserReferencePage",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.UserReferencePage"
      },
      "description": "Get the members of a custom recommendation audience.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 130
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:106"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 130
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:106"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 105
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:99"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation audience.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationaudiencemembership(string,string,integer,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer)",
      "nodeType": "method",
      "name": "getRecommendationAudienceMembership",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationAudienceMembership",
        "textToLower": "getrecommendationaudiencemembership",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationAudienceMembership_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 14,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.UserReferencePage getRecommendationAudienceMembership(String communityId, String recommendationAudienceId, Integer pageParam, Integer pageSize)",
      "overrideSignature": "public static override ConnectApi.UserReferencePage getRecommendationAudienceMembership(String communityId, String recommendationAudienceId, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getRecommendationAudienceMembership(String,String,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.ConnectApi.UserReferencePage",
        "nodeType": "datatype",
        "name": "ConnectApi.UserReferencePage",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.UserReferencePage"
      },
      "description": "Get a page of custom recommendation audience members.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 130
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:106"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 130
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:106"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 105
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:99"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "pageparam": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer).varParam.pageparam",
          "nodeType": "variable",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 140
              },
              "end": {
                "line": 0,
                "character": 149
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageParam_0:140"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 140
              },
              "end": {
                "line": 0,
                "character": 149
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageParam_0:140"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 132
                },
                "end": {
                  "line": 0,
                  "character": 139
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:132"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "pagesize": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer).varParam.pagesize",
          "nodeType": "variable",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 159
              },
              "end": {
                "line": 0,
                "character": 167
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageSize_0:159"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 159
              },
              "end": {
                "line": 0,
                "character": 167
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageSize_0:159"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiencemembership(string,string,integer,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiencemembership.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 151
                },
                "end": {
                  "line": 0,
                  "character": 158
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:151"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiencemembership",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation audience. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of members per page.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationaudiences(string)": {
      "id": "ConnectApi.recommendations.method.getrecommendationaudiences(string)",
      "nodeType": "method",
      "name": "getRecommendationAudiences",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationAudiences",
        "textToLower": "getrecommendationaudiences",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationAudiences_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 15,
      "memberOrder": 15,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationAudiencePage getRecommendationAudiences(String communityId)",
      "overrideSignature": "public static override ConnectApi.RecommendationAudiencePage getRecommendationAudiences(String communityId)",
      "simplifiedSignature": "getRecommendationAudiences(String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationaudiences.datatype.ConnectApi.RecommendationAudiencePage",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationAudiencePage",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationaudiences",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationAudiencePage"
      },
      "description": "Get custom recommendation audiences.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiences(string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiences(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiences.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiences",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationaudiences(string,integer,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationaudiences(string,integer,integer)",
      "nodeType": "method",
      "name": "getRecommendationAudiences",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationAudiences",
        "textToLower": "getrecommendationaudiences",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationAudiences_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 16,
      "memberOrder": 16,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationAudiencePage getRecommendationAudiences(String communityId, Integer pageParam, Integer pageSize)",
      "overrideSignature": "public static override ConnectApi.RecommendationAudiencePage getRecommendationAudiences(String communityId, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getRecommendationAudiences(String,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationaudiences.datatype.ConnectApi.RecommendationAudiencePage",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationAudiencePage",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationaudiences",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationAudiencePage"
      },
      "description": "Get a page of custom recommendation audiences.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiences(string,integer,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiences(string,integer,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiences.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiences",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "pageparam": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiences(string,integer,integer).varParam.pageparam",
          "nodeType": "variable",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 107
              },
              "end": {
                "line": 0,
                "character": 116
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageParam_0:107"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 107
              },
              "end": {
                "line": 0,
                "character": 116
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageParam_0:107"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiences(string,integer,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiences.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 106
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:99"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiences",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "pagesize": {
          "id": "ConnectApi.recommendations.method.getrecommendationaudiences(string,integer,integer).varParam.pagesize",
          "nodeType": "variable",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 126
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageSize_0:126"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 126
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_pageSize_0:126"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationaudiences(string,integer,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationaudiences.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 118
                },
                "end": {
                  "line": 0,
                  "character": 125
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:118"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationaudiences",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. Specifies the number of the page you want returned. Starts at 0. If you pass in null or 0, the first page is returned. Specifies the number of audiences per page.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationdefinition(string,string)": {
      "id": "ConnectApi.recommendations.method.getrecommendationdefinition(string,string)",
      "nodeType": "method",
      "name": "getRecommendationDefinition",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationDefinition",
        "textToLower": "getrecommendationdefinition",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationDefinition_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 17,
      "memberOrder": 17,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationDefinition getRecommendationDefinition(String communityId, String recommendationDefinitionId)",
      "overrideSignature": "public static override ConnectApi.RecommendationDefinition getRecommendationDefinition(String communityId, String recommendationDefinitionId)",
      "simplifiedSignature": "getRecommendationDefinition(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationdefinition.datatype.ConnectApi.RecommendationDefinition",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationDefinition",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationdefinition",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationDefinition"
      },
      "description": "Get a custom recommendation definition.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationdefinition(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 85
              },
              "end": {
                "line": 0,
                "character": 96
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:85"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 85
              },
              "end": {
                "line": 0,
                "character": 96
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:85"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationdefinition(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 78
                },
                "end": {
                  "line": 0,
                  "character": 84
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:78"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.getrecommendationdefinition(string,string).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 131
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:105"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 131
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:105"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationdefinition(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 98
                },
                "end": {
                  "line": 0,
                  "character": 104
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:98"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationdefinitionphoto(string,string)": {
      "id": "ConnectApi.recommendations.method.getrecommendationdefinitionphoto(string,string)",
      "nodeType": "method",
      "name": "getRecommendationDefinitionPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationDefinitionPhoto",
        "textToLower": "getrecommendationdefinitionphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationDefinitionPhoto_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 18,
      "memberOrder": 18,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.Photo getRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId)",
      "overrideSignature": "public static override ConnectApi.Photo getRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId)",
      "simplifiedSignature": "getRecommendationDefinitionPhoto(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationdefinitionphoto.datatype.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationdefinitionphoto",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.Photo"
      },
      "description": "Get a custom recommendation definition photo.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationdefinitionphoto(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:71"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:71"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationdefinitionphoto(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 64
                },
                "end": {
                  "line": 0,
                  "character": 70
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:64"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.getrecommendationdefinitionphoto(string,string).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 91
              },
              "end": {
                "line": 0,
                "character": 117
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:91"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 91
              },
              "end": {
                "line": 0,
                "character": 117
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:91"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationdefinitionphoto(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 84
                },
                "end": {
                  "line": 0,
                  "character": 90
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:84"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationdefinitions(string)": {
      "id": "ConnectApi.recommendations.method.getrecommendationdefinitions(string)",
      "nodeType": "method",
      "name": "getRecommendationDefinitions",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationDefinitions",
        "textToLower": "getrecommendationdefinitions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationDefinitions_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 19,
      "memberOrder": 19,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationDefinitionPage getRecommendationDefinitions(String communityId)",
      "overrideSignature": "public static override ConnectApi.RecommendationDefinitionPage getRecommendationDefinitions(String communityId)",
      "simplifiedSignature": "getRecommendationDefinitions(String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationdefinitions.datatype.ConnectApi.RecommendationDefinitionPage",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationDefinitionPage",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationdefinitions",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationDefinitionPage"
      },
      "description": "Get custom recommendation definitions.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationdefinitions(string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 101
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:90"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 101
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:90"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationdefinitions(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationdefinitions.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 83
                },
                "end": {
                  "line": 0,
                  "character": 89
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:83"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationdefinitions",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationforuser(string,string,connectapi.recommendationactiontype,string)": {
      "id": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
      "nodeType": "method",
      "name": "getRecommendationForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationForUser",
        "textToLower": "getrecommendationforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 20,
      "memberOrder": 20,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationCollection getRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectId)",
      "overrideSignature": "public static override ConnectApi.RecommendationCollection getRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectId)",
      "simplifiedSignature": "getRecommendationForUser(String,String,ConnectApi.RecommendationActionType,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationforuser.datatype.ConnectApi.RecommendationCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationCollection"
      },
      "description": "Get the Chatter, custom, or static recommendation for the context user for the specified action and object ID.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 82
              },
              "end": {
                "line": 0,
                "character": 93
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:82"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 82
              },
              "end": {
                "line": 0,
                "character": 93
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:82"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 75
                },
                "end": {
                  "line": 0,
                  "character": 81
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:75"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 102
              },
              "end": {
                "line": 0,
                "character": 108
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:102"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 102
              },
              "end": {
                "line": 0,
                "character": 108
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:102"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 95
                },
                "end": {
                  "line": 0,
                  "character": 101
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:95"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 146
              },
              "end": {
                "line": 0,
                "character": 152
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:146"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 146
              },
              "end": {
                "line": 0,
                "character": 152
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:146"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 110
                },
                "end": {
                  "line": 0,
                  "character": 120
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:110"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectid": {
          "id": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.objectid",
          "nodeType": "variable",
          "name": "objectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectId",
            "textToLower": "objectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 161
              },
              "end": {
                "line": 0,
                "character": 169
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectId_0:161"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectId",
            "textToLower": "objectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 161
              },
              "end": {
                "line": 0,
                "character": 169
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectId_0:161"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 154
                },
                "end": {
                  "line": 0,
                  "character": 160
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:154"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.    Specifies the object to act on. If action is follow, objectId is a user ID, file ID, record ID, or topic ID (version 36.0 and later).  If action is join, objectId is a group ID.  If action is view, objectId is a user ID, file ID, group ID, record ID, custom recommendation ID (version 34.0 and later), the enum Today for static recommendations (version 35.0 and later), or an article ID (version 37.0 and later).",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer)",
      "nodeType": "method",
      "name": "getRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationsForUser",
        "textToLower": "getrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 21,
      "memberOrder": 21,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults)",
      "overrideSignature": "public static override ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults)",
      "simplifiedSignature": "getRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationCollection"
      },
      "description": "Get the Chatter recommendations, such as user, group, file, and record recommendations for the context user. Get the custom and static recommendations for the context user.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 102
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:96"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:147"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:147"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 111
                },
                "end": {
                  "line": 0,
                  "character": 121
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:111"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 169
              },
              "end": {
                "line": 0,
                "character": 184
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:169"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 169
              },
              "end": {
                "line": 0,
                "character": 184
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:169"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 162
                },
                "end": {
                  "line": 0,
                  "character": 168
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:162"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 194
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:194"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 194
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:194"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 186
                },
                "end": {
                  "line": 0,
                  "character": 193
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:186"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, or record ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, or record ID.   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. Maximum number of recommendation results; default is 10. Values must be from 1 to 99.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
      "nodeType": "method",
      "name": "getRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationsForUser",
        "textToLower": "getrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 22,
      "memberOrder": 22,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults)",
      "overrideSignature": "public static override ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults)",
      "simplifiedSignature": "getRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationChannel,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationCollection"
      },
      "description": "Get the Chatter recommendations, such as user, group, file, article, record, and topic recommendations for the context user. Get the custom and static recommendations for the context user.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 102
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:96"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:147"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:147"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 111
                },
                "end": {
                  "line": 0,
                  "character": 121
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:111"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 169
              },
              "end": {
                "line": 0,
                "character": 184
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:169"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 169
              },
              "end": {
                "line": 0,
                "character": 184
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:169"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 162
                },
                "end": {
                  "line": 0,
                  "character": 168
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:162"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 219
              },
              "end": {
                "line": 0,
                "character": 226
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:219"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 219
              },
              "end": {
                "line": 0,
                "character": 226
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:219"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 186
                },
                "end": {
                  "line": 0,
                  "character": 196
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:186"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 236
              },
              "end": {
                "line": 0,
                "character": 246
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:236"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 236
              },
              "end": {
                "line": 0,
                "character": 246
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:236"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 228
                },
                "end": {
                  "line": 0,
                  "character": 235
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:228"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, record ID, or topic ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, record ID, or article ID (version 37.0 and later).   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.    Maximum number of recommendation results; default is 10. Values must be from 1 to 99.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)",
      "nodeType": "method",
      "name": "getRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationsForUser",
        "textToLower": "getrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 23,
      "memberOrder": 23,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults)",
      "overrideSignature": "public static override ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults)",
      "simplifiedSignature": "getRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,ConnectApi.RecommendationActionType,String,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationCollection"
      },
      "description": "Get the Chatter, custom, and static recommendations for the context user for the specified action.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 102
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:96"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 111
                },
                "end": {
                  "line": 0,
                  "character": 121
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:111"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 191
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:191"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 191
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:191"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 155
                },
                "end": {
                  "line": 0,
                  "character": 165
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:155"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 213
              },
              "end": {
                "line": 0,
                "character": 228
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:213"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 213
              },
              "end": {
                "line": 0,
                "character": 228
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:213"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 206
                },
                "end": {
                  "line": 0,
                  "character": 212
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:206"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 238
              },
              "end": {
                "line": 0,
                "character": 248
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:238"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 238
              },
              "end": {
                "line": 0,
                "character": 248
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:238"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 230
                },
                "end": {
                  "line": 0,
                  "character": 237
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:230"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, or record ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, or record ID.   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. Maximum number of recommendation results; default is 10. Values must be from 1 to 99.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
      "nodeType": "method",
      "name": "getRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationsForUser",
        "textToLower": "getrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 24,
      "memberOrder": 24,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults)",
      "overrideSignature": "public static override ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults)",
      "simplifiedSignature": "getRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationChannel,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationCollection"
      },
      "description": "Get the Chatter, custom, and static recommendations for the context user for the specified action.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 102
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:96"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 111
                },
                "end": {
                  "line": 0,
                  "character": 121
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:111"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 191
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:191"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 191
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:191"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 155
                },
                "end": {
                  "line": 0,
                  "character": 165
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:155"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 213
              },
              "end": {
                "line": 0,
                "character": 228
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:213"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 213
              },
              "end": {
                "line": 0,
                "character": 228
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:213"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 206
                },
                "end": {
                  "line": 0,
                  "character": 212
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:206"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 263
              },
              "end": {
                "line": 0,
                "character": 270
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:263"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 263
              },
              "end": {
                "line": 0,
                "character": 270
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:263"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 230
                },
                "end": {
                  "line": 0,
                  "character": 240
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:230"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 280
              },
              "end": {
                "line": 0,
                "character": 290
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:280"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 280
              },
              "end": {
                "line": 0,
                "character": 290
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:280"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 272
                },
                "end": {
                  "line": 0,
                  "character": 279
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:272"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, record ID, or topic ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, record ID, or article ID (version 37.0 and later).   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.    Maximum number of recommendation results; default is 10. Values must be from 1 to 99.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
      "nodeType": "method",
      "name": "getRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationsForUser",
        "textToLower": "getrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 25,
      "memberOrder": 25,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults)",
      "overrideSignature": "public static override ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults)",
      "simplifiedSignature": "getRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationActionType,String,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationCollection"
      },
      "description": "Get the Chatter, custom, and static recommendations for the context user for the specified action and object category.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 102
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:96"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 111
                },
                "end": {
                  "line": 0,
                  "character": 121
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:111"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectcategory": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer).varParam.objectcategory",
          "nodeType": "variable",
          "name": "objectCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 162
              },
              "end": {
                "line": 0,
                "character": 176
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:162"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 162
              },
              "end": {
                "line": 0,
                "character": 176
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:162"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 155
                },
                "end": {
                  "line": 0,
                  "character": 161
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:155"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 214
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:214"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 214
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:214"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 178
                },
                "end": {
                  "line": 0,
                  "character": 188
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:178"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 236
              },
              "end": {
                "line": 0,
                "character": 251
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:236"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 236
              },
              "end": {
                "line": 0,
                "character": 251
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:236"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 229
                },
                "end": {
                  "line": 0,
                  "character": 235
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:229"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 261
              },
              "end": {
                "line": 0,
                "character": 271
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:261"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 261
              },
              "end": {
                "line": 0,
                "character": 271
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:261"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 253
                },
                "end": {
                  "line": 0,
                  "character": 260
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:253"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.      If action is follow, objectCategory is users, files, or records.  If action is join, objectCategory is groups.  If action is view, objectCategory is users, files, groups, records, custom, or apps.   You can also specify a key prefix, the first three characters of the object ID, as the objectCategory. Valid values are: If action is follow, objectCategory is 005 (users), 069 (files), or 001 (accounts), for example.  If action is join, objectCategory is 0F9 (groups).  If action is view, objectCategory is 005 (users), 069 (files), 0F9 (groups), 0RD (custom recommendations), T (static recommendations), or 001 (accounts), for example.    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null.  ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, or record ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, or record ID.   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. Maximum number of recommendation results; default is 10. Values must be from 1 to 99.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)": {
      "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
      "nodeType": "method",
      "name": "getRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecommendationsForUser",
        "textToLower": "getrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 26,
      "memberOrder": 26,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults)",
      "overrideSignature": "public static override ConnectApi.RecommendationCollection getRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults)",
      "simplifiedSignature": "getRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationChannel,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationCollection",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationCollection"
      },
      "description": "Get the Chatter, custom, and static recommendations for the context user for the specified action and object category.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 109
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:103"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 102
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:96"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 147
              },
              "end": {
                "line": 0,
                "character": 153
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:147"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 111
                },
                "end": {
                  "line": 0,
                  "character": 121
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:111"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectcategory": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.objectcategory",
          "nodeType": "variable",
          "name": "objectCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 162
              },
              "end": {
                "line": 0,
                "character": 176
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:162"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 162
              },
              "end": {
                "line": 0,
                "character": 176
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:162"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 155
                },
                "end": {
                  "line": 0,
                  "character": 161
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:155"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 214
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:214"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 214
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:214"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 178
                },
                "end": {
                  "line": 0,
                  "character": 188
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:178"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 236
              },
              "end": {
                "line": 0,
                "character": 251
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:236"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 236
              },
              "end": {
                "line": 0,
                "character": 251
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:236"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 229
                },
                "end": {
                  "line": 0,
                  "character": 235
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:229"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 286
              },
              "end": {
                "line": 0,
                "character": 293
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:286"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 286
              },
              "end": {
                "line": 0,
                "character": 293
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:286"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 253
                },
                "end": {
                  "line": 0,
                  "character": 263
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:253"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 303
              },
              "end": {
                "line": 0,
                "character": 313
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:303"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 303
              },
              "end": {
                "line": 0,
                "character": 313
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:303"
          },
          "parentId": "ConnectApi.recommendations.method.getrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer)",
          "order": 8,
          "memberOrder": 8,
          "datatype": {
            "id": "ConnectApi.recommendations.getrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 295
                },
                "end": {
                  "line": 0,
                  "character": 302
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:295"
            },
            "parentId": "ConnectApi.recommendations.getrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.      If action is follow, objectCategory is users, files, topics, or records.  If action is join, objectCategory is groups.  If action is view, objectCategory is users, files, groups, records, custom, apps, or articles (version 37.0 and later).   You can also specify a key prefix, the first three characters of the object ID, as the objectCategory. Valid values are: If action is follow, objectCategory is 005 (users), 069 (files), 0TO (topics), or 001 (accounts), for example.  If action is join, objectCategory is 0F9 (groups).  If action is view, objectCategory is 005 (users), 069 (files), 0F9 (groups), 0RD (custom recommendations), T (static recommendations), 001 (accounts), or kA0 (articles), for example, (version 370 and later).    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null.  ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, record ID, or topic ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, record ID, or article ID (version 37.0 and later).   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.    Maximum number of recommendation results; default is 10. Values must be from 1 to 99.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getscheduledrecommendation(string,string)": {
      "id": "ConnectApi.recommendations.method.getscheduledrecommendation(string,string)",
      "nodeType": "method",
      "name": "getScheduledRecommendation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getScheduledRecommendation",
        "textToLower": "getscheduledrecommendation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getScheduledRecommendation_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 27,
      "memberOrder": 27,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendation getScheduledRecommendation(String communityId, String scheduledRecommendationId)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendation getScheduledRecommendation(String communityId, String scheduledRecommendationId)",
      "simplifiedSignature": "getScheduledRecommendation(String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getscheduledrecommendation.datatype.ConnectApi.ScheduledRecommendation",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendation",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getscheduledrecommendation",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendation"
      },
      "description": "Get a scheduled custom recommendation.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getscheduledrecommendation(string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 83
              },
              "end": {
                "line": 0,
                "character": 94
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:83"
          },
          "parentId": "ConnectApi.recommendations.method.getscheduledrecommendation(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 82
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:76"
            },
            "parentId": "ConnectApi.recommendations.getscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "scheduledrecommendationid": {
          "id": "ConnectApi.recommendations.method.getscheduledrecommendation(string,string).varParam.scheduledrecommendationid",
          "nodeType": "variable",
          "name": "scheduledRecommendationId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 128
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:103"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 103
              },
              "end": {
                "line": 0,
                "character": 128
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:103"
          },
          "parentId": "ConnectApi.recommendations.method.getscheduledrecommendation(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getscheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 96
                },
                "end": {
                  "line": 0,
                  "character": 102
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:96"
            },
            "parentId": "ConnectApi.recommendations.getscheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the scheduled custom recommendation.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getscheduledrecommendations(string)": {
      "id": "ConnectApi.recommendations.method.getscheduledrecommendations(string)",
      "nodeType": "method",
      "name": "getScheduledRecommendations",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getScheduledRecommendations",
        "textToLower": "getscheduledrecommendations",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getScheduledRecommendations_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 28,
      "memberOrder": 28,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendationPage getScheduledRecommendations(String communityId)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendationPage getScheduledRecommendations(String communityId)",
      "simplifiedSignature": "getScheduledRecommendations(String)",
      "datatype": {
        "id": "ConnectApi.recommendations.getscheduledrecommendations.datatype.ConnectApi.ScheduledRecommendationPage",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendationPage",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getscheduledrecommendations",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendationPage"
      },
      "description": "Get scheduled custom recommendations.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getscheduledrecommendations(string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.getscheduledrecommendations(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getscheduledrecommendations.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.getscheduledrecommendations",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getscheduledrecommendations(string,connectapi.recommendationchannel)": {
      "id": "ConnectApi.recommendations.method.getscheduledrecommendations(string,connectapi.recommendationchannel)",
      "nodeType": "method",
      "name": "getScheduledRecommendations",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getScheduledRecommendations",
        "textToLower": "getscheduledrecommendations",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getScheduledRecommendations_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 29,
      "memberOrder": 29,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendationPage getScheduledRecommendations(String communityId, ConnectApi.RecommendationChannel channel)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendationPage getScheduledRecommendations(String communityId, ConnectApi.RecommendationChannel channel)",
      "simplifiedSignature": "getScheduledRecommendations(String,ConnectApi.RecommendationChannel)",
      "datatype": {
        "id": "ConnectApi.recommendations.getscheduledrecommendations.datatype.ConnectApi.ScheduledRecommendationPage",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendationPage",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.getscheduledrecommendations",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendationPage"
      },
      "description": "Get scheduled custom recommendations.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.getscheduledrecommendations(string,connectapi.recommendationchannel).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.getscheduledrecommendations(string,connectapi.recommendationchannel)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.getscheduledrecommendations.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.getscheduledrecommendations",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.getscheduledrecommendations(string,connectapi.recommendationchannel).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 134
              },
              "end": {
                "line": 0,
                "character": 141
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:134"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 134
              },
              "end": {
                "line": 0,
                "character": 141
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:134"
          },
          "parentId": "ConnectApi.recommendations.method.getscheduledrecommendations(string,connectapi.recommendationchannel)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.getscheduledrecommendations.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 111
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:101"
            },
            "parentId": "ConnectApi.recommendations.getscheduledrecommendations",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "description": "Use either the ID for a community, internal, or null. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string)": {
      "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
      "nodeType": "method",
      "name": "rejectRecommendationForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rejectRecommendationForUser",
        "textToLower": "rejectrecommendationforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rejectRecommendationForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 30,
      "memberOrder": 30,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static rejectRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectId)",
      "overrideSignature": "public static override rejectRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectId)",
      "simplifiedSignature": "rejectRecommendationForUser(String,String,ConnectApi.RecommendationActionType,String)",
      "description": "Reject a Chatter, custom, or static recommendation for the context user for the specified action and object ID.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:49"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 42
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:42"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:69"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:69"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 62
                },
                "end": {
                  "line": 0,
                  "character": 68
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:62"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 119
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:113"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 119
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:113"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 77
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:77"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectid": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string).varParam.objectid",
          "nodeType": "variable",
          "name": "objectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectId",
            "textToLower": "objectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 128
              },
              "end": {
                "line": 0,
                "character": 136
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectId_0:128"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectId",
            "textToLower": "objectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 128
              },
              "end": {
                "line": 0,
                "character": 136
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectId_0:128"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 121
                },
                "end": {
                  "line": 0,
                  "character": 127
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:121"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation. Supported values are:  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.    Specifies the object to take action on. If action is follow, objectId is a user ID, file ID, record ID, or topic ID (version 36.0 and later).  If action is join, objectId is a group ID.  If action is view, objectId is a custom recommendation ID, the enum Today for static recommendations, or an article ID (version 37.0 and later).",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype)": {
      "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype)",
      "nodeType": "method",
      "name": "rejectRecommendationForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rejectRecommendationForUser",
        "textToLower": "rejectrecommendationforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rejectRecommendationForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 31,
      "memberOrder": 31,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static rejectRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendedObjectType objectEnum)",
      "overrideSignature": "public static override rejectRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendedObjectType objectEnum)",
      "simplifiedSignature": "rejectRecommendationForUser(String,String,ConnectApi.RecommendationActionType,ConnectApi.RecommendedObjectType)",
      "description": "Reject a static recommendation for the context user.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:49"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 42
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:42"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:69"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 75
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:69"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 62
                },
                "end": {
                  "line": 0,
                  "character": 68
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:62"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 119
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:113"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 113
              },
              "end": {
                "line": 0,
                "character": 119
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:113"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 77
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:77"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectenum": {
          "id": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype).varParam.objectenum",
          "nodeType": "variable",
          "name": "objectEnum",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectEnum",
            "textToLower": "objectenum",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 154
              },
              "end": {
                "line": 0,
                "character": 164
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectEnum_0:154"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectEnum",
            "textToLower": "objectenum",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 154
              },
              "end": {
                "line": 0,
                "character": 164
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectEnum_0:154"
          },
          "parentId": "ConnectApi.recommendations.method.rejectrecommendationforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendedobjecttype)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.rejectrecommendationforuser.datatype.ConnectApi.RecommendedObjectType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendedObjectType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 121
                },
                "end": {
                  "line": 0,
                  "character": 131
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:121"
            },
            "parentId": "ConnectApi.recommendations.rejectrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendedObjectType"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation. Supported values are:  view—View a static recommendation.    Specifies the object type to take action on.  Today—Static recommendations that don’t have an ID, for example, the Today app recommendation.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput)": {
      "id": "ConnectApi.recommendations.method.updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput)",
      "nodeType": "method",
      "name": "updateRecommendationAudience",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRecommendationAudience",
        "textToLower": "updaterecommendationaudience",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRecommendationAudience_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 32,
      "memberOrder": 32,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationAudience updateRecommendationAudience(String communityId, String recommendationAudienceId, ConnectApi.RecommendationAudienceInput recommendationAudience)",
      "overrideSignature": "public static override ConnectApi.RecommendationAudience updateRecommendationAudience(String communityId, String recommendationAudienceId, ConnectApi.RecommendationAudienceInput recommendationAudience)",
      "simplifiedSignature": "updateRecommendationAudience(String,String,ConnectApi.RecommendationAudienceInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.updaterecommendationaudience.datatype.ConnectApi.RecommendationAudience",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationAudience",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updaterecommendationaudience",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationAudience"
      },
      "description": "Update a custom recommendation audience.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:84"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:84"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 77
                },
                "end": {
                  "line": 0,
                  "character": 83
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:77"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 128
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:104"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 128
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:104"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationaudience.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 97
                },
                "end": {
                  "line": 0,
                  "character": 103
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:97"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationaudience": {
          "id": "ConnectApi.recommendations.method.updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput).varParam.recommendationaudience",
          "nodeType": "variable",
          "name": "recommendationAudience",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudience",
            "textToLower": "recommendationaudience",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 169
              },
              "end": {
                "line": 0,
                "character": 191
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudience_0:169"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudience",
            "textToLower": "recommendationaudience",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 169
              },
              "end": {
                "line": 0,
                "character": 191
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudience_0:169"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationaudience(string,string,connectapi.recommendationaudienceinput)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationaudience.datatype.ConnectApi.RecommendationAudienceInput",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationAudienceInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 130
                },
                "end": {
                  "line": 0,
                  "character": 140
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:130"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationaudience",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationAudienceInput"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation audience. A ConnectApi.RecommendationAudienceInput object.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updaterecommendationdefinition(string,string,string,string,string,string,string)": {
      "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
      "nodeType": "method",
      "name": "updateRecommendationDefinition",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRecommendationDefinition",
        "textToLower": "updaterecommendationdefinition",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRecommendationDefinition_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 33,
      "memberOrder": 33,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationDefinition updateRecommendationDefinition(String communityId, String recommendationDefinitionId, String name, String title, String actionUrl, String actionUrlName, String recommendationDefinition)",
      "overrideSignature": "public static override ConnectApi.RecommendationDefinition updateRecommendationDefinition(String communityId, String recommendationDefinitionId, String name, String title, String actionUrl, String actionUrlName, String recommendationDefinition)",
      "simplifiedSignature": "updateRecommendationDefinition(String,String,String,String,String,String,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.ConnectApi.RecommendationDefinition",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationDefinition",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationDefinition"
      },
      "description": "Update a custom recommendation definition with the specified parameters.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 107
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:101"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "name": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string).varParam.name",
          "nodeType": "variable",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 143
              },
              "end": {
                "line": 0,
                "character": 147
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:143"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 143
              },
              "end": {
                "line": 0,
                "character": 147
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_name_0:143"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 136
                },
                "end": {
                  "line": 0,
                  "character": 142
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:136"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "title": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string).varParam.title",
          "nodeType": "variable",
          "name": "title",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "title",
            "textToLower": "title",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 161
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_title_0:156"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "title",
            "textToLower": "title",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 156
              },
              "end": {
                "line": 0,
                "character": 161
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_title_0:156"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 149
                },
                "end": {
                  "line": 0,
                  "character": 155
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:149"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "actionurl": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string).varParam.actionurl",
          "nodeType": "variable",
          "name": "actionUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrl",
            "textToLower": "actionurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 170
              },
              "end": {
                "line": 0,
                "character": 179
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrl_0:170"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrl",
            "textToLower": "actionurl",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 170
              },
              "end": {
                "line": 0,
                "character": 179
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrl_0:170"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 163
                },
                "end": {
                  "line": 0,
                  "character": 169
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:163"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "actionurlname": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string).varParam.actionurlname",
          "nodeType": "variable",
          "name": "actionUrlName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrlName",
            "textToLower": "actionurlname",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 188
              },
              "end": {
                "line": 0,
                "character": 201
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrlName_0:188"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "actionUrlName",
            "textToLower": "actionurlname",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 188
              },
              "end": {
                "line": 0,
                "character": 201
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_actionUrlName_0:188"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 181
                },
                "end": {
                  "line": 0,
                  "character": 187
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:181"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinition": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string).varParam.recommendationdefinition",
          "nodeType": "variable",
          "name": "recommendationDefinition",
          "startToken": {
            "type": "entity.name.variable",
            "text": "recommendationDefinition",
            "textToLower": "recommendationdefinition",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 222
              },
              "end": {
                "line": 0,
                "character": 246
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinition_0:222"
          },
          "endToken": {
            "type": "entity.name.variable",
            "text": "recommendationDefinition",
            "textToLower": "recommendationdefinition",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 222
              },
              "end": {
                "line": 0,
                "character": 246
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinition_0:222"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,string,string,string,string,string)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 203
                },
                "end": {
                  "line": 0,
                  "character": 209
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:203"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput)": {
      "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput)",
      "nodeType": "method",
      "name": "updateRecommendationDefinition",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRecommendationDefinition",
        "textToLower": "updaterecommendationdefinition",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRecommendationDefinition_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 34,
      "memberOrder": 34,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.RecommendationDefinition updateRecommendationDefinition(String communityId, String recommendationDefinitionId, ConnectApi.RecommendationDefinitionInput recommendationDefinition)",
      "overrideSignature": "public static override ConnectApi.RecommendationDefinition updateRecommendationDefinition(String communityId, String recommendationDefinitionId, ConnectApi.RecommendationDefinitionInput recommendationDefinition)",
      "simplifiedSignature": "updateRecommendationDefinition(String,String,ConnectApi.RecommendationDefinitionInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.ConnectApi.RecommendationDefinition",
        "nodeType": "datatype",
        "name": "ConnectApi.RecommendationDefinition",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.RecommendationDefinition"
      },
      "description": "Update a custom recommendation definition.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 107
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:101"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinition": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput).varParam.recommendationdefinition",
          "nodeType": "variable",
          "name": "recommendationDefinition",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinition",
            "textToLower": "recommendationdefinition",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 177
              },
              "end": {
                "line": 0,
                "character": 201
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinition_0:177"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinition",
            "textToLower": "recommendationdefinition",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 177
              },
              "end": {
                "line": 0,
                "character": 201
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinition_0:177"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinition(string,string,connectapi.recommendationdefinitioninput)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinition.datatype.ConnectApi.RecommendationDefinitionInput",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationDefinitionInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 136
                },
                "end": {
                  "line": 0,
                  "character": 146
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:136"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinition",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationDefinitionInput"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition. A ConnectApi.RecommendationDefinitionInput object containing the properties to update.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput)": {
      "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput)",
      "nodeType": "method",
      "name": "updateRecommendationDefinitionPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRecommendationDefinitionPhoto",
        "textToLower": "updaterecommendationdefinitionphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRecommendationDefinitionPhoto_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 35,
      "memberOrder": 35,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.Photo updateRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId, ConnectApi.BinaryInput fileUpload)",
      "overrideSignature": "public static override ConnectApi.Photo updateRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId, ConnectApi.BinaryInput fileUpload)",
      "simplifiedSignature": "updateRecommendationDefinitionPhoto(String,String,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.Photo"
      },
      "description": "Update a custom recommendation definition photo with a file that hasn’t been uploaded.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:74"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:74"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 67
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:67"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 94
              },
              "end": {
                "line": 0,
                "character": 120
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:94"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 94
              },
              "end": {
                "line": 0,
                "character": 120
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:94"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 93
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:87"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "fileupload": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput).varParam.fileupload",
          "nodeType": "variable",
          "name": "fileUpload",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 155
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fileUpload_0:145"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 155
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fileUpload_0:145"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,connectapi.binaryinput)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.ConnectApi.BinaryInput",
            "nodeType": "datatype",
            "name": "ConnectApi.BinaryInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 122
                },
                "end": {
                  "line": 0,
                  "character": 132
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:122"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.BinaryInput"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition. A file to use as the photo. The content type must be usable as an image.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updaterecommendationdefinitionphoto(string,string,string,integer)": {
      "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer)",
      "nodeType": "method",
      "name": "updateRecommendationDefinitionPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRecommendationDefinitionPhoto",
        "textToLower": "updaterecommendationdefinitionphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRecommendationDefinitionPhoto_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 36,
      "memberOrder": 36,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.Photo updateRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId, String fileId, Integer versionNumber)",
      "overrideSignature": "public static override ConnectApi.Photo updateRecommendationDefinitionPhoto(String communityId, String recommendationDefinitionId, String fileId, Integer versionNumber)",
      "simplifiedSignature": "updateRecommendationDefinitionPhoto(String,String,String,Integer)",
      "datatype": {
        "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.Photo"
      },
      "description": "Update a custom recommendation definition photo with an uploaded file.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:74"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:74"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 67
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:67"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 94
              },
              "end": {
                "line": 0,
                "character": 120
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:94"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 94
              },
              "end": {
                "line": 0,
                "character": 120
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:94"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 93
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:87"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "fileid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer).varParam.fileid",
          "nodeType": "variable",
          "name": "fileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileId",
            "textToLower": "fileid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 129
              },
              "end": {
                "line": 0,
                "character": 135
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fileId_0:129"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileId",
            "textToLower": "fileid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 129
              },
              "end": {
                "line": 0,
                "character": 135
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fileId_0:129"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 122
                },
                "end": {
                  "line": 0,
                  "character": 128
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:122"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "versionnumber": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer).varParam.versionnumber",
          "nodeType": "variable",
          "name": "versionNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "versionNumber",
            "textToLower": "versionnumber",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 158
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_versionNumber_0:145"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "versionNumber",
            "textToLower": "versionnumber",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 158
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_versionNumber_0:145"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphoto(string,string,string,integer)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphoto.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 137
                },
                "end": {
                  "line": 0,
                  "character": 144
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:137"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphoto",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition. ID of a file already uploaded. The file must be an image, and be smaller than 2 GB. Version number of the existing file. Specify either an existing version number, or null to get the latest version.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput)": {
      "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput)",
      "nodeType": "method",
      "name": "updateRecommendationDefinitionPhotoWithAttributes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRecommendationDefinitionPhotoWithAttributes",
        "textToLower": "updaterecommendationdefinitionphotowithattributes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRecommendationDefinitionPhotoWithAttributes_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 37,
      "memberOrder": 37,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.Photo updateRecommendationDefinitionPhotoWithAttributes(String communityId, String recommendationDefinitionId, ConnectApi.PhotoInput photo)",
      "overrideSignature": "public static override ConnectApi.Photo updateRecommendationDefinitionPhotoWithAttributes(String communityId, String recommendationDefinitionId, ConnectApi.PhotoInput photo)",
      "simplifiedSignature": "updateRecommendationDefinitionPhotoWithAttributes(String,String,ConnectApi.PhotoInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.Photo"
      },
      "description": "Update a custom recommendation definition photo with an uploaded file that requires cropping.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 107
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:101"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "photo": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput).varParam.photo",
          "nodeType": "variable",
          "name": "photo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "photo",
            "textToLower": "photo",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 158
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_photo_0:158"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "photo",
            "textToLower": "photo",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 158
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_photo_0:158"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.ConnectApi.PhotoInput",
            "nodeType": "datatype",
            "name": "ConnectApi.PhotoInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 136
                },
                "end": {
                  "line": 0,
                  "character": 146
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:136"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.PhotoInput"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition. A ConnectApi.PhotoInput object specifying the file ID, version number, and cropping parameters.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput)": {
      "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput)",
      "nodeType": "method",
      "name": "updateRecommendationDefinitionPhotoWithAttributes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateRecommendationDefinitionPhotoWithAttributes",
        "textToLower": "updaterecommendationdefinitionphotowithattributes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateRecommendationDefinitionPhotoWithAttributes_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 38,
      "memberOrder": 38,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.Photo updateRecommendationDefinitionPhotoWithAttributes(String communityId, String recommendationDefinitionId, ConnectApi.PhotoInput photo, ConnectApi.BinaryInput fileUpload)",
      "overrideSignature": "public static override ConnectApi.Photo updateRecommendationDefinitionPhotoWithAttributes(String communityId, String recommendationDefinitionId, ConnectApi.PhotoInput photo, ConnectApi.BinaryInput fileUpload)",
      "simplifiedSignature": "updateRecommendationDefinitionPhotoWithAttributes(String,String,ConnectApi.PhotoInput,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.Photo"
      },
      "description": "Update a custom recommendation definition photo with a file that hasn’t been uploaded and requires cropping.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:88"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 81
                },
                "end": {
                  "line": 0,
                  "character": 87
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:81"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "recommendationdefinitionid": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput).varParam.recommendationdefinitionid",
          "nodeType": "variable",
          "name": "recommendationDefinitionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationDefinitionId",
            "textToLower": "recommendationdefinitionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 108
              },
              "end": {
                "line": 0,
                "character": 134
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationDefinitionId_0:108"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 107
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:101"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "photo": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput).varParam.photo",
          "nodeType": "variable",
          "name": "photo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "photo",
            "textToLower": "photo",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 158
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_photo_0:158"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "photo",
            "textToLower": "photo",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 158
              },
              "end": {
                "line": 0,
                "character": 163
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_photo_0:158"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.ConnectApi.PhotoInput",
            "nodeType": "datatype",
            "name": "ConnectApi.PhotoInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 136
                },
                "end": {
                  "line": 0,
                  "character": 146
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:136"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.PhotoInput"
          },
          "scope": null
        },
        "fileupload": {
          "id": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput).varParam.fileupload",
          "nodeType": "variable",
          "name": "fileUpload",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 188
              },
              "end": {
                "line": 0,
                "character": 198
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fileUpload_0:188"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 188
              },
              "end": {
                "line": 0,
                "character": 198
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fileUpload_0:188"
          },
          "parentId": "ConnectApi.recommendations.method.updaterecommendationdefinitionphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes.datatype.ConnectApi.BinaryInput",
            "nodeType": "datatype",
            "name": "ConnectApi.BinaryInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 165
                },
                "end": {
                  "line": 0,
                  "character": 175
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:165"
            },
            "parentId": "ConnectApi.recommendations.updaterecommendationdefinitionphotowithattributes",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.BinaryInput"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the custom recommendation definition. A ConnectApi.PhotoInput object specifying the cropping parameters. A file to use as the photo. The content type must be usable as an image.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput)": {
      "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput)",
      "nodeType": "method",
      "name": "updateScheduledRecommendation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateScheduledRecommendation",
        "textToLower": "updatescheduledrecommendation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateScheduledRecommendation_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 39,
      "memberOrder": 39,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendation updateScheduledRecommendation(String communityId, String scheduledRecommendationId, ConnectApi.ScheduledRecommendationInput scheduledRecommendation)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendation updateScheduledRecommendation(String communityId, String scheduledRecommendationId, ConnectApi.ScheduledRecommendationInput scheduledRecommendation)",
      "simplifiedSignature": "updateScheduledRecommendation(String,String,ConnectApi.ScheduledRecommendationInput)",
      "datatype": {
        "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.ConnectApi.ScheduledRecommendation",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendation",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendation"
      },
      "description": "Update a scheduled custom recommendation.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "scheduledrecommendationid": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput).varParam.scheduledrecommendationid",
          "nodeType": "variable",
          "name": "scheduledRecommendationId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 131
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:106"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 131
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:106"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 105
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:99"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "scheduledrecommendation": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput).varParam.scheduledrecommendation",
          "nodeType": "variable",
          "name": "scheduledRecommendation",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendation",
            "textToLower": "scheduledrecommendation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 173
              },
              "end": {
                "line": 0,
                "character": 196
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendation_0:173"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendation",
            "textToLower": "scheduledrecommendation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 173
              },
              "end": {
                "line": 0,
                "character": 196
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendation_0:173"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,connectapi.scheduledrecommendationinput)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.ConnectApi.ScheduledRecommendationInput",
            "nodeType": "datatype",
            "name": "ConnectApi.ScheduledRecommendationInput",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 133
                },
                "end": {
                  "line": 0,
                  "character": 143
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:133"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.ScheduledRecommendationInput"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the scheduled custom recommendation. A ConnectApi.ScheduledRecommendationInput object containing the properties to update.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updatescheduledrecommendation(string,string,integer,boolean,string)": {
      "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string)",
      "nodeType": "method",
      "name": "updateScheduledRecommendation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateScheduledRecommendation",
        "textToLower": "updatescheduledrecommendation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateScheduledRecommendation_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 40,
      "memberOrder": 40,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ConnectApi.ScheduledRecommendation updateScheduledRecommendation(String communityId, String scheduledRecommendationId, Integer rank, Boolean enabled, String recommendationAudienceId)",
      "overrideSignature": "public static override ConnectApi.ScheduledRecommendation updateScheduledRecommendation(String communityId, String scheduledRecommendationId, Integer rank, Boolean enabled, String recommendationAudienceId)",
      "simplifiedSignature": "updateScheduledRecommendation(String,String,Integer,Boolean,String)",
      "datatype": {
        "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.ConnectApi.ScheduledRecommendation",
        "nodeType": "datatype",
        "name": "ConnectApi.ScheduledRecommendation",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "ConnectApi",
          "textToLower": "connectapi",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 24
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ConnectApi_0:14"
        },
        "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
        "order": 0,
        "memberOrder": 0,
        "type": "ConnectApi.ScheduledRecommendation"
      },
      "description": "Update a scheduled custom recommendation with the specified parameters.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 86
              },
              "end": {
                "line": 0,
                "character": 97
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:86"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 85
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:79"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "scheduledrecommendationid": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string).varParam.scheduledrecommendationid",
          "nodeType": "variable",
          "name": "scheduledRecommendationId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 131
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:106"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "scheduledRecommendationId",
            "textToLower": "scheduledrecommendationid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 106
              },
              "end": {
                "line": 0,
                "character": 131
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scheduledRecommendationId_0:106"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 99
                },
                "end": {
                  "line": 0,
                  "character": 105
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:99"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "rank": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string).varParam.rank",
          "nodeType": "variable",
          "name": "rank",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rank",
            "textToLower": "rank",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 141
              },
              "end": {
                "line": 0,
                "character": 145
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_rank_0:141"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "rank",
            "textToLower": "rank",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 141
              },
              "end": {
                "line": 0,
                "character": 145
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_rank_0:141"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 133
                },
                "end": {
                  "line": 0,
                  "character": 140
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:133"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "enabled": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string).varParam.enabled",
          "nodeType": "variable",
          "name": "enabled",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "enabled",
            "textToLower": "enabled",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 155
              },
              "end": {
                "line": 0,
                "character": 162
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_enabled_0:155"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "enabled",
            "textToLower": "enabled",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 155
              },
              "end": {
                "line": 0,
                "character": 162
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_enabled_0:155"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 147
                },
                "end": {
                  "line": 0,
                  "character": 154
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:147"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "scope": null
        },
        "recommendationaudienceid": {
          "id": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string).varParam.recommendationaudienceid",
          "nodeType": "variable",
          "name": "recommendationAudienceId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 171
              },
              "end": {
                "line": 0,
                "character": 195
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:171"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recommendationAudienceId",
            "textToLower": "recommendationaudienceid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 171
              },
              "end": {
                "line": 0,
                "character": 195
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recommendationAudienceId_0:171"
          },
          "parentId": "ConnectApi.recommendations.method.updatescheduledrecommendation(string,string,integer,boolean,string)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.updatescheduledrecommendation.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 164
                },
                "end": {
                  "line": 0,
                  "character": 170
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:164"
            },
            "parentId": "ConnectApi.recommendations.updatescheduledrecommendation",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "Use either the ID for a community, internal, or null. ID of the scheduled custom recommendation. Relative rank of the scheduled custom recommendation indicated by ascending whole numbers starting with 1.Setting the rank is comparable to an insertion into an ordered list. The scheduled custom recommendation is inserted into the position specified by the rank. The rank of all the scheduled custom recommendations after it is pushed down. See Ranking scheduled custom recommendations example. If the specified rank is larger than the size of the list, the scheduled custom recommendation is put at the end of the list. The rank of the scheduled custom recommendation is the size of the list, instead of the one specified. If a rank is not specified, the scheduled custom recommendation is put at the end of the list.  Indicates whether scheduling is enabled. If true, the custom recommendation is enabled and appears in communities. If false, custom recommendations in feeds in Salesforce mobile web aren’t removed, but no new custom recommendations appear. In Customer Service and Partner Central communities, disabled custom recommendations no longer appear. ID of the custom recommendation definition that this scheduled recommendation schedules.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection)": {
      "id": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection)",
      "nodeType": "method",
      "name": "setTestGetRecommendationForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecommendationForUser",
        "textToLower": "settestgetrecommendationforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecommendationForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 41,
      "memberOrder": 41,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setTestGetRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectId, ConnectApi.RecommendationCollection result)",
      "overrideSignature": "public static override Void setTestGetRecommendationForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectId, ConnectApi.RecommendationCollection result)",
      "simplifiedSignature": "setTestGetRecommendationForUser(String,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationCollection)",
      "datatype": {
        "id": "ConnectApi.recommendations.settestgetrecommendationforuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.settestgetrecommendationforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Register a ConnectApi.RecommendationCollection object to be returned when getRecommendationForUser is called with matching parameters in a test context. Use the method with the same parameters or the code throws an exception.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:58"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:58"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 51
                },
                "end": {
                  "line": 0,
                  "character": 57
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:51"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 78
              },
              "end": {
                "line": 0,
                "character": 84
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:78"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 78
              },
              "end": {
                "line": 0,
                "character": 84
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:78"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 71
                },
                "end": {
                  "line": 0,
                  "character": 77
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:71"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 122
              },
              "end": {
                "line": 0,
                "character": 128
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:122"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 122
              },
              "end": {
                "line": 0,
                "character": 128
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:122"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 86
                },
                "end": {
                  "line": 0,
                  "character": 96
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:86"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection).varParam.objectid",
          "nodeType": "variable",
          "name": "objectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectId",
            "textToLower": "objectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 137
              },
              "end": {
                "line": 0,
                "character": 145
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectId_0:137"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectId",
            "textToLower": "objectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 137
              },
              "end": {
                "line": 0,
                "character": 145
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectId_0:137"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 130
                },
                "end": {
                  "line": 0,
                  "character": 136
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:130"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "result": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 183
              },
              "end": {
                "line": 0,
                "character": 189
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:183"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 183
              },
              "end": {
                "line": 0,
                "character": 189
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:183"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationcollection)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationforuser.datatype.ConnectApi.RecommendationCollection",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationCollection",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 147
                },
                "end": {
                  "line": 0,
                  "character": 157
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:147"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationCollection"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.    Specifies the object to take action on. If action is follow, objectId is a user ID, file ID, record ID, or topic ID (version 36.0 and later).  If action is join, objectId is a group ID.  If action is view, objectId is a user ID, file ID, group ID, record ID, custom recommendation ID, the enum Today for static recommendations, or an article ID (version 37.0 and later).    The object containing test data.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)": {
      "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
      "nodeType": "method",
      "name": "setTestGetRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecommendationsForUser",
        "textToLower": "settestgetrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 42,
      "memberOrder": 42,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "overrideSignature": "public static override Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "simplifiedSignature": "setTestGetRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,Integer,ConnectApi.RecommendationCollection)",
      "datatype": {
        "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Register a ConnectApi.RecommendationCollection object to be returned when getRecommendationsForUser is called with matching parameters in a test context. Use the method with the same parameters or the code throws an exception.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 72
                },
                "end": {
                  "line": 0,
                  "character": 78
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:72"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 136
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:123"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 136
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:123"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 97
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:87"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:145"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:145"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 138
                },
                "end": {
                  "line": 0,
                  "character": 144
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:138"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 170
              },
              "end": {
                "line": 0,
                "character": 180
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:170"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 170
              },
              "end": {
                "line": 0,
                "character": 180
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:170"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 162
                },
                "end": {
                  "line": 0,
                  "character": 169
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:162"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "result": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 218
              },
              "end": {
                "line": 0,
                "character": 224
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:218"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 218
              },
              "end": {
                "line": 0,
                "character": 224
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:218"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationCollection",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 182
                },
                "end": {
                  "line": 0,
                  "character": 192
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:182"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationCollection"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, or record ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, or record ID.   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. Maximum number of recommendation results; default is 10. Values must be from 1 to 99. The object containing test data.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)": {
      "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
      "nodeType": "method",
      "name": "setTestGetRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecommendationsForUser",
        "textToLower": "settestgetrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 43,
      "memberOrder": 43,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "overrideSignature": "public static override Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "simplifiedSignature": "setTestGetRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationChannel,Integer,ConnectApi.RecommendationCollection)",
      "datatype": {
        "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Register a ConnectApi.RecommendationCollection object to be returned when getRecommendationsForUser is called with matching parameters in a test context. Use the method with the same parameters or the code throws an exception.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 72
                },
                "end": {
                  "line": 0,
                  "character": 78
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:72"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 136
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:123"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 136
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:123"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 97
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:87"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:145"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 145
              },
              "end": {
                "line": 0,
                "character": 160
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:145"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 138
                },
                "end": {
                  "line": 0,
                  "character": 144
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:138"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 195
              },
              "end": {
                "line": 0,
                "character": 202
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:195"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 195
              },
              "end": {
                "line": 0,
                "character": 202
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:195"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 162
                },
                "end": {
                  "line": 0,
                  "character": 172
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:162"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 212
              },
              "end": {
                "line": 0,
                "character": 222
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:212"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 212
              },
              "end": {
                "line": 0,
                "character": 222
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:212"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 204
                },
                "end": {
                  "line": 0,
                  "character": 211
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:204"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "result": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 260
              },
              "end": {
                "line": 0,
                "character": 266
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:260"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 260
              },
              "end": {
                "line": 0,
                "character": 266
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:260"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationCollection",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 224
                },
                "end": {
                  "line": 0,
                  "character": 234
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:224"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationCollection"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, record ID, or topic ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, record ID, or article ID (version 37.0 and later).   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.    Maximum number of recommendation results; default is 10. Values must be from 1 to 99. The object containing test data.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)": {
      "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
      "nodeType": "method",
      "name": "setTestGetRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecommendationsForUser",
        "textToLower": "settestgetrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 44,
      "memberOrder": 44,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "overrideSignature": "public static override Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "simplifiedSignature": "setTestGetRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,ConnectApi.RecommendationActionType,String,Integer,ConnectApi.RecommendationCollection)",
      "datatype": {
        "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Register a ConnectApi.RecommendationCollection object to be returned when getRecommendationsForUser is called with matching parameters in a test context. Use the method with the same parameters or the code throws an exception.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 72
                },
                "end": {
                  "line": 0,
                  "character": 78
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:72"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 97
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:87"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 167
              },
              "end": {
                "line": 0,
                "character": 180
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:167"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 167
              },
              "end": {
                "line": 0,
                "character": 180
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:167"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 141
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:131"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 189
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:189"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 189
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:189"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 182
                },
                "end": {
                  "line": 0,
                  "character": 188
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:182"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 214
              },
              "end": {
                "line": 0,
                "character": 224
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:214"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 214
              },
              "end": {
                "line": 0,
                "character": 224
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:214"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 206
                },
                "end": {
                  "line": 0,
                  "character": 213
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:206"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "result": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 262
              },
              "end": {
                "line": 0,
                "character": 268
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:262"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 262
              },
              "end": {
                "line": 0,
                "character": 268
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:262"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationCollection",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 226
                },
                "end": {
                  "line": 0,
                  "character": 236
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:226"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationCollection"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, or record ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, or record ID.   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. Maximum number of recommendation results; default is 10. Values must be from 1 to 99. The object containing test data.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)": {
      "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
      "nodeType": "method",
      "name": "setTestGetRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecommendationsForUser",
        "textToLower": "settestgetrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 45,
      "memberOrder": 45,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "overrideSignature": "public static override Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "simplifiedSignature": "setTestGetRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationChannel,Integer,ConnectApi.RecommendationCollection)",
      "datatype": {
        "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Register a ConnectApi.RecommendationCollection object to be returned when getRecommendationsForUser is called with matching parameters in a test context. Use the method with the same parameters or the code throws an exception.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 72
                },
                "end": {
                  "line": 0,
                  "character": 78
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:72"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 97
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:87"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 167
              },
              "end": {
                "line": 0,
                "character": 180
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:167"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 167
              },
              "end": {
                "line": 0,
                "character": 180
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:167"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 141
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:131"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 189
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:189"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 189
              },
              "end": {
                "line": 0,
                "character": 204
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:189"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 182
                },
                "end": {
                  "line": 0,
                  "character": 188
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:182"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 239
              },
              "end": {
                "line": 0,
                "character": 246
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:239"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 239
              },
              "end": {
                "line": 0,
                "character": 246
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:239"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 206
                },
                "end": {
                  "line": 0,
                  "character": 216
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:206"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 256
              },
              "end": {
                "line": 0,
                "character": 266
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:256"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 256
              },
              "end": {
                "line": 0,
                "character": 266
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:256"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 248
                },
                "end": {
                  "line": 0,
                  "character": 255
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:248"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "result": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 304
              },
              "end": {
                "line": 0,
                "character": 310
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:304"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 304
              },
              "end": {
                "line": 0,
                "character": 310
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:304"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 8,
          "memberOrder": 8,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationCollection",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 268
                },
                "end": {
                  "line": 0,
                  "character": 278
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:268"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationCollection"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, record ID, or topic ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, record ID, or article ID (version 37.0 and later).   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.    Maximum number of recommendation results; default is 10. Values must be from 1 to 99. The object containing test data.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)": {
      "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
      "nodeType": "method",
      "name": "setTestGetRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecommendationsForUser",
        "textToLower": "settestgetrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 46,
      "memberOrder": 46,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "overrideSignature": "public static override Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "simplifiedSignature": "setTestGetRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationActionType,String,Integer,ConnectApi.RecommendationCollection)",
      "datatype": {
        "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Register a ConnectApi.RecommendationCollection object to be returned when getRecommendationsForUser is called with matching parameters in a test context. Use the method with the same parameters or the code throws an exception.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 72
                },
                "end": {
                  "line": 0,
                  "character": 78
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:72"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 97
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:87"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectcategory": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.objectcategory",
          "nodeType": "variable",
          "name": "objectCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 138
              },
              "end": {
                "line": 0,
                "character": 152
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:138"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 138
              },
              "end": {
                "line": 0,
                "character": 152
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:138"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 137
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:131"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 190
              },
              "end": {
                "line": 0,
                "character": 203
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:190"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 190
              },
              "end": {
                "line": 0,
                "character": 203
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:190"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 154
                },
                "end": {
                  "line": 0,
                  "character": 164
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:154"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 212
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:212"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 212
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:212"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 205
                },
                "end": {
                  "line": 0,
                  "character": 211
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:205"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 237
              },
              "end": {
                "line": 0,
                "character": 247
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:237"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 237
              },
              "end": {
                "line": 0,
                "character": 247
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:237"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 229
                },
                "end": {
                  "line": 0,
                  "character": 236
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:229"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "result": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 285
              },
              "end": {
                "line": 0,
                "character": 291
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:285"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 285
              },
              "end": {
                "line": 0,
                "character": 291
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:285"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,integer,connectapi.recommendationcollection)",
          "order": 8,
          "memberOrder": 8,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationCollection",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 249
                },
                "end": {
                  "line": 0,
                  "character": 259
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:249"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationCollection"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.      If action is follow, objectCategory is users, files, or records.  If action is join, objectCategory is groups.  If action is view, objectCategory is users, files, groups, records,custom, or apps.   You can also specify a key prefix, the first three characters of the object ID, as the objectCategory. Valid values are: If action is follow, objectCategory is 005 (users), 069 (files), or 001 (accounts), for example.  If action is join, objectCategory is 0F9 (groups).  If action is view, objectCategory is 005 (users), 069 (files), 0F9 (groups), 0RD (custom recommendations), T (static recommendations), or 001 (accounts), for example.    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, or record ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, or record ID.   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. Maximum number of recommendation results; default is 10. Values must be from 1 to 99. The object containing test data.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)": {
      "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
      "nodeType": "method",
      "name": "setTestGetRecommendationsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecommendationsForUser",
        "textToLower": "settestgetrecommendationsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecommendationsForUser_-1:0"
      },
      "parentId": "ConnectApi.recommendations",
      "order": 47,
      "memberOrder": 47,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "overrideSignature": "public static override Void setTestGetRecommendationsForUser(String communityId, String userId, ConnectApi.RecommendationActionType action, String objectCategory, ConnectApi.RecommendationActionType contextAction, String contextObjectId, ConnectApi.RecommendationChannel channel, Integer maxResults, ConnectApi.RecommendationCollection result)",
      "simplifiedSignature": "setTestGetRecommendationsForUser(String,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationActionType,String,ConnectApi.RecommendationChannel,Integer,ConnectApi.RecommendationCollection)",
      "datatype": {
        "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Register a ConnectApi.RecommendationCollection object to be returned when getRecommendationsForUser is called with matching parameters in a test context. Use the method with the same parameters or the code throws an exception.",
      "parentName": "Recommendations",
      "variables": {},
      "params": {
        "communityid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.communityid",
          "nodeType": "variable",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 70
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_communityId_0:59"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "userid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.userid",
          "nodeType": "variable",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_userId_0:79"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 72
                },
                "end": {
                  "line": 0,
                  "character": 78
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:72"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "action": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.action",
          "nodeType": "variable",
          "name": "action",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "action",
            "textToLower": "action",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 123
              },
              "end": {
                "line": 0,
                "character": 129
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_action_0:123"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 97
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:87"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "objectcategory": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.objectcategory",
          "nodeType": "variable",
          "name": "objectCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 138
              },
              "end": {
                "line": 0,
                "character": 152
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:138"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "objectCategory",
            "textToLower": "objectcategory",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 138
              },
              "end": {
                "line": 0,
                "character": 152
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_objectCategory_0:138"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 4,
          "memberOrder": 4,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 131
                },
                "end": {
                  "line": 0,
                  "character": 137
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:131"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "contextaction": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.contextaction",
          "nodeType": "variable",
          "name": "contextAction",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 190
              },
              "end": {
                "line": 0,
                "character": 203
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:190"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextAction",
            "textToLower": "contextaction",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 190
              },
              "end": {
                "line": 0,
                "character": 203
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextAction_0:190"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 5,
          "memberOrder": 5,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationActionType",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationActionType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 154
                },
                "end": {
                  "line": 0,
                  "character": 164
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:154"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationActionType"
          },
          "scope": null
        },
        "contextobjectid": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.contextobjectid",
          "nodeType": "variable",
          "name": "contextObjectId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 212
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:212"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextObjectId",
            "textToLower": "contextobjectid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 212
              },
              "end": {
                "line": 0,
                "character": 227
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextObjectId_0:212"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 6,
          "memberOrder": 6,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 205
                },
                "end": {
                  "line": 0,
                  "character": 211
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:205"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "channel": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.channel",
          "nodeType": "variable",
          "name": "channel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 262
              },
              "end": {
                "line": 0,
                "character": 269
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:262"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "channel",
            "textToLower": "channel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 262
              },
              "end": {
                "line": 0,
                "character": 269
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_channel_0:262"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 7,
          "memberOrder": 7,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationChannel",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationChannel",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 229
                },
                "end": {
                  "line": 0,
                  "character": 239
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:229"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationChannel"
          },
          "scope": null
        },
        "maxresults": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.maxresults",
          "nodeType": "variable",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 279
              },
              "end": {
                "line": 0,
                "character": 289
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:279"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 279
              },
              "end": {
                "line": 0,
                "character": 289
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_maxResults_0:279"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 8,
          "memberOrder": 8,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 271
                },
                "end": {
                  "line": 0,
                  "character": 278
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:271"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "scope": null
        },
        "result": {
          "id": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 327
              },
              "end": {
                "line": 0,
                "character": 333
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:327"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 327
              },
              "end": {
                "line": 0,
                "character": 333
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:327"
          },
          "parentId": "ConnectApi.recommendations.method.settestgetrecommendationsforuser(string,string,connectapi.recommendationactiontype,string,connectapi.recommendationactiontype,string,connectapi.recommendationchannel,integer,connectapi.recommendationcollection)",
          "order": 9,
          "memberOrder": 9,
          "datatype": {
            "id": "ConnectApi.recommendations.settestgetrecommendationsforuser.datatype.ConnectApi.RecommendationCollection",
            "nodeType": "datatype",
            "name": "ConnectApi.RecommendationCollection",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "ConnectApi",
              "textToLower": "connectapi",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 291
                },
                "end": {
                  "line": 0,
                  "character": 301
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ConnectApi_0:291"
            },
            "parentId": "ConnectApi.recommendations.settestgetrecommendationsforuser",
            "order": 0,
            "memberOrder": 0,
            "type": "ConnectApi.RecommendationCollection"
          },
          "description": "Use either the ID for a community, internal, or null. The ID for the context user or the keyword me. Specifies the action to take on a recommendation.  follow—Follow a file, record, topic, or user.   join—Join a group.   view—View a file, group, article, record, user, custom, or static recommendation.      If action is follow, objectCategory is users, files, records, or topics.  If action is join, objectCategory is groups.  If action is view, objectCategory is users, files, groups, records,custom, apps, or articles (version 37.0 and later).   You can also specify a key prefix, the first three characters of the object ID, as the objectCategory. Valid values are: If action is follow, objectCategory is 005 (users), 069 (files), 0TO (topics), or 001 (accounts), for example.  If action is join, objectCategory is 0F9 (groups).  If action is view, objectCategory is 005 (users), 069 (files), 0F9 (groups), 0RD (custom recommendations), T (static recommendations), 001 (accounts), or kA0 (articles), for example, (version 370 and later).    Action that the context user just performed. Supported values are: follow  view   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. ID of the object that the context user just performed an action on. If contextAction is follow, contextObjectId is a user ID, file ID, record ID, or topic ID.  If contextAction is view, contextObjectId is a user ID, file ID, group ID, record ID, or article ID (version 37.0 and later).   Use contextAction and contextObjectId together to get new recommendations based on the action just performed. If you don’t want recommendations based on a recent action, specify null. A way to tie custom recommendations together, for example, to display recommendations in specific places in the UI or to show recommendations based on time of day or geographic locations. Values are:  CustomChannel1—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels. For example, community managers can use Community Builder to determine where recommendations appear.   CustomChannel2—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel3—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel4—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   CustomChannel5—Custom recommendation channel. Not used by default. Work with your community manager to define custom channels.   DefaultChannel—Default recommendation channel. Recommendations appear by default on the Home and Question Detail pages of Customer Service and Partner Central communities. They also appear in the feed in communities in the Salesforce mobile web and anywhere community managers add recommendations using Community Builder.    Maximum number of recommendation results; default is 10. Values must be from 1 to 99. The object containing test data.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 47,
  "queries": []
}