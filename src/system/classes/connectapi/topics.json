{
  "id": "ConnectApi.topics",
  "type": "class",
  "name": "Topics",
  "namespace": "ConnectApi",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Topics",
    "textToLower": "topics",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Topics_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Access information about topics, such as their descriptions, the number of people talking about them, related topics, and information about groups contributing to the topic. Update a topic’s name or description, merge topics, and add and remove topics from records and feed items.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ConnectAPI_Topics_static_methods.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "assigntopic(string,string,string)": {
      "id": "ConnectApi.topics.assigntopic",
      "type": "method",
      "name": "assignTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "assignTopic",
        "textToLower": "assigntopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_assignTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​Topic assignTopic(String communityId, String recordId, String topicId)",
      "simplifiedSignature": "assignTopic(String,String,String)",
      "datatype": {
        "id": "ConnectApi.topics.assigntopic.ConnectApi.​Topic",
        "type": "datatype",
        "name": "ConnectApi.​Topic"
      },
      "description": "Assign a topic to a record or feed item.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.assigntopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.assigntopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.assigntopic.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.assigntopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.assigntopic.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.assigntopic.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "assigntopicbyname(string,string,string)": {
      "id": "ConnectApi.topics.assigntopicbyname",
      "type": "method",
      "name": "assignTopicByName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "assignTopicByName",
        "textToLower": "assigntopicbyname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_assignTopicByName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​Topic assignTopicByName(String communityId, String recordId, String topicName)",
      "simplifiedSignature": "assignTopicByName(String,String,String)",
      "datatype": {
        "id": "ConnectApi.topics.assigntopicbyname.ConnectApi.​Topic",
        "type": "datatype",
        "name": "ConnectApi.​Topic"
      },
      "description": "Assign a topic to a record or feed item.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.assigntopicbyname.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.assigntopicbyname.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.assigntopicbyname.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.assigntopicbyname.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicName": {
          "id": "ConnectApi.topics.assigntopicbyname.topicname",
          "type": "var",
          "name": "topicName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicName",
            "textToLower": "topicname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicName_-1:0"
          },
          "signature": "String topicName",
          "datatype": {
            "id": "ConnectApi.topics.assigntopicbyname.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "createtopic(string,string,string)": {
      "id": "ConnectApi.topics.createtopic",
      "type": "method",
      "name": "createTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createTopic",
        "textToLower": "createtopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​Topic createTopic(String communityId, String name, String description)",
      "simplifiedSignature": "createTopic(String,String,String)",
      "datatype": {
        "id": "ConnectApi.topics.createtopic.ConnectApi.​Topic",
        "type": "datatype",
        "name": "ConnectApi.​Topic"
      },
      "description": "Create a topic.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.createtopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.createtopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "name": {
          "id": "ConnectApi.topics.createtopic.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "ConnectApi.topics.createtopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "description": {
          "id": "ConnectApi.topics.createtopic.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "ConnectApi.topics.createtopic.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "createtopicdatacategoryrules(string,string,string,connectapi.topicnamesinput)": {
      "id": "ConnectApi.topics.createtopicdatacategoryrules",
      "type": "method",
      "name": "createTopicDataCategoryRules",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createTopicDataCategoryRules",
        "textToLower": "createtopicdatacategoryrules",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createTopicDataCategoryRules_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.TopicPage createTopicDataCategoryRules(String communityId, String dataCategoryGroup, String dataCategory, ConnectApi.TopicNamesInput topicNames)",
      "simplifiedSignature": "createTopicDataCategoryRules(String,String,String,ConnectApi.TopicNamesInput)",
      "datatype": {
        "id": "ConnectApi.topics.createtopicdatacategoryrules.ConnectApi.TopicPage",
        "type": "datatype",
        "name": "ConnectApi.TopicPage"
      },
      "description": "Create topic and article assignment rules by data category.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.createtopicdatacategoryrules.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.createtopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategoryGroup": {
          "id": "ConnectApi.topics.createtopicdatacategoryrules.datacategorygroup",
          "type": "var",
          "name": "dataCategoryGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategoryGroup",
            "textToLower": "datacategorygroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategoryGroup_-1:0"
          },
          "signature": "String dataCategoryGroup",
          "datatype": {
            "id": "ConnectApi.topics.createtopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategory": {
          "id": "ConnectApi.topics.createtopicdatacategoryrules.datacategory",
          "type": "var",
          "name": "dataCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategory",
            "textToLower": "datacategory",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategory_-1:0"
          },
          "signature": "String dataCategory",
          "datatype": {
            "id": "ConnectApi.topics.createtopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicNames": {
          "id": "ConnectApi.topics.createtopicdatacategoryrules.topicnames",
          "type": "var",
          "name": "topicNames",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicNames",
            "textToLower": "topicnames",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicNames_-1:0"
          },
          "signature": "ConnectApi.TopicNamesInput topicNames",
          "datatype": {
            "id": "ConnectApi.topics.createtopicdatacategoryrules.connectapi.topicnamesinput",
            "type": "datatype",
            "name": "ConnectApi.TopicNamesInput"
          }
        }
      }
    },
    "deletetopic(string,string)": {
      "id": "ConnectApi.topics.deletetopic",
      "type": "method",
      "name": "deleteTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteTopic",
        "textToLower": "deletetopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void deleteTopic(String communityId, String topicId)",
      "simplifiedSignature": "deleteTopic(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.deletetopic.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Delete a topic.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.deletetopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.deletetopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.deletetopic.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.deletetopic.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getgroupsrecentlytalkingabouttopic(string,string)": {
      "id": "ConnectApi.topics.getgroupsrecentlytalkingabouttopic",
      "type": "method",
      "name": "getGroupsRecentlyTalkingAboutTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getGroupsRecentlyTalkingAboutTopic",
        "textToLower": "getgroupsrecentlytalkingabouttopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getGroupsRecentlyTalkingAboutTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​Chatter​Group​SummaryPage getGroupsRecentlyTalkingAboutTopic(String communityId, String topicId)",
      "simplifiedSignature": "getGroupsRecentlyTalkingAboutTopic(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.getgroupsrecentlytalkingabouttopic.ConnectApi.​Chatter​Group​SummaryPage",
        "type": "datatype",
        "name": "ConnectApi.​Chatter​Group​SummaryPage"
      },
      "description": "Get information about the five groups that most recently contributed to a topic.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.getgroupsrecentlytalkingabouttopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.getgroupsrecentlytalkingabouttopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.getgroupsrecentlytalkingabouttopic.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.getgroupsrecentlytalkingabouttopic.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrecentlytalkingabouttopicsforgroup(string,string)": {
      "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforgroup",
      "type": "method",
      "name": "getRecentlyTalkingAboutTopicsForGroup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecentlyTalkingAboutTopicsForGroup",
        "textToLower": "getrecentlytalkingabouttopicsforgroup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecentlyTalkingAboutTopicsForGroup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getRecentlyTalkingAboutTopicsForGroup(String communityId, String groupId)",
      "simplifiedSignature": "getRecentlyTalkingAboutTopicsForGroup(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforgroup.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get up to five topics most recently used in a group.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforgroup.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforgroup.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "groupId": {
          "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforgroup.groupid",
          "type": "var",
          "name": "groupId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "groupId",
            "textToLower": "groupid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_groupId_-1:0"
          },
          "signature": "String groupId",
          "datatype": {
            "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforgroup.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrecentlytalkingabouttopicsforuser(string,string)": {
      "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforuser",
      "type": "method",
      "name": "getRecentlyTalkingAboutTopicsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecentlyTalkingAboutTopicsForUser",
        "textToLower": "getrecentlytalkingabouttopicsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecentlyTalkingAboutTopicsForUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getRecentlyTalkingAboutTopicsForUser(String communityId, String userId)",
      "simplifiedSignature": "getRecentlyTalkingAboutTopicsForUser(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforuser.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get up to five topics most recently used by a user.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforuser.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforuser.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforuser.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.topics.getrecentlytalkingabouttopicsforuser.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrelatedtopics(string,string)": {
      "id": "ConnectApi.topics.getrelatedtopics",
      "type": "method",
      "name": "getRelatedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRelatedTopics",
        "textToLower": "getrelatedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRelatedTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getRelatedTopics(String communityId, String topicId)",
      "simplifiedSignature": "getRelatedTopics(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.getrelatedtopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get up to five topics most closely related to a topic.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.getrelatedtopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.getrelatedtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.getrelatedtopics.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.getrelatedtopics.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettopic(string,string)": {
      "id": "ConnectApi.topics.gettopic",
      "type": "method",
      "name": "getTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopic",
        "textToLower": "gettopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​Topic getTopic(String communityId, String topicId)",
      "simplifiedSignature": "getTopic(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.gettopic.ConnectApi.​Topic",
        "type": "datatype",
        "name": "ConnectApi.​Topic"
      },
      "description": "Get a topic.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.gettopic.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.gettopic.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettopicdatacategoryrules(string,string,string)": {
      "id": "ConnectApi.topics.gettopicdatacategoryrules",
      "type": "method",
      "name": "getTopicDataCategoryRules",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopicDataCategoryRules",
        "textToLower": "gettopicdatacategoryrules",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopicDataCategoryRules_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.TopicPage getTopicDataCategoryRules(String communityId, String dataCategoryGroup, String dataCategory)",
      "simplifiedSignature": "getTopicDataCategoryRules(String,String,String)",
      "datatype": {
        "id": "ConnectApi.topics.gettopicdatacategoryrules.ConnectApi.TopicPage",
        "type": "datatype",
        "name": "ConnectApi.TopicPage"
      },
      "description": "Get topic and article assignment rules by data category.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopicdatacategoryrules.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategoryGroup": {
          "id": "ConnectApi.topics.gettopicdatacategoryrules.datacategorygroup",
          "type": "var",
          "name": "dataCategoryGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategoryGroup",
            "textToLower": "datacategorygroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategoryGroup_-1:0"
          },
          "signature": "String dataCategoryGroup",
          "datatype": {
            "id": "ConnectApi.topics.gettopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategory": {
          "id": "ConnectApi.topics.gettopicdatacategoryrules.datacategory",
          "type": "var",
          "name": "dataCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategory",
            "textToLower": "datacategory",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategory_-1:0"
          },
          "signature": "String dataCategory",
          "datatype": {
            "id": "ConnectApi.topics.gettopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettopics(string,string)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, String recordId)",
      "simplifiedSignature": "getTopics(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get the first page of topics assigned to a record or feed item.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.gettopics.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettopics(string)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId)",
      "simplifiedSignature": "getTopics(String)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get the first page of topics for the org or community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettopics(string,connectapi.topicsort)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, ConnectApi.TopicSort sortParam)",
      "simplifiedSignature": "getTopics(String,ConnectApi.TopicSort)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get the first page of sorted topics for the org or community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "sortParam": {
          "id": "ConnectApi.topics.gettopics.sortparam",
          "type": "var",
          "name": "sortParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sortParam",
            "textToLower": "sortparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sortParam_-1:0"
          },
          "signature": "ConnectApi.TopicSort sortParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.connectapi.topicsort",
            "type": "datatype",
            "name": "ConnectApi.TopicSort"
          }
        }
      }
    },
    "gettopics(string,integer,integer)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getTopics(String,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get a page of topics.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.topics.gettopics.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.topics.gettopics.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "gettopics(string,integer,integer,connectapi.topicsort)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, Integer pageParam, Integer pageSize, ConnectApi.TopicSort sortParam)",
      "simplifiedSignature": "getTopics(String,Integer,Integer,ConnectApi.TopicSort)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get a page of sorted topics.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.topics.gettopics.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.topics.gettopics.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "sortParam": {
          "id": "ConnectApi.topics.gettopics.sortparam",
          "type": "var",
          "name": "sortParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sortParam",
            "textToLower": "sortparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sortParam_-1:0"
          },
          "signature": "ConnectApi.TopicSort sortParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.connectapi.topicsort",
            "type": "datatype",
            "name": "ConnectApi.TopicSort"
          }
        }
      }
    },
    "gettopics(string,string,connectapi.topicsort)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, String q, ConnectApi.TopicSort sortParam)",
      "simplifiedSignature": "getTopics(String,String,ConnectApi.TopicSort)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get the sorted topics that match the search criteria.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "q": {
          "id": "ConnectApi.topics.gettopics.q",
          "type": "var",
          "name": "q",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "q",
            "textToLower": "q",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_q_-1:0"
          },
          "signature": "String q",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "sortParam": {
          "id": "ConnectApi.topics.gettopics.sortparam",
          "type": "var",
          "name": "sortParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sortParam",
            "textToLower": "sortparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sortParam_-1:0"
          },
          "signature": "ConnectApi.TopicSort sortParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.connectapi.topicsort",
            "type": "datatype",
            "name": "ConnectApi.TopicSort"
          }
        }
      }
    },
    "gettopics(string,string,integer,integer)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, String q, Integer pageParam, Integer pageSize)",
      "simplifiedSignature": "getTopics(String,String,Integer,Integer)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get a page of topics that match the search criteria.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "q": {
          "id": "ConnectApi.topics.gettopics.q",
          "type": "var",
          "name": "q",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "q",
            "textToLower": "q",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_q_-1:0"
          },
          "signature": "String q",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.topics.gettopics.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.topics.gettopics.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "gettopics(string,string,integer,integer,connectapi.topicsort)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, String q, Integer pageParam, Integer pageSize, ConnectApi.TopicSort sortParam)",
      "simplifiedSignature": "getTopics(String,String,Integer,Integer,ConnectApi.TopicSort)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get a page of sorted topics that match the search criteria.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "q": {
          "id": "ConnectApi.topics.gettopics.q",
          "type": "var",
          "name": "q",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "q",
            "textToLower": "q",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_q_-1:0"
          },
          "signature": "String q",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "pageParam": {
          "id": "ConnectApi.topics.gettopics.pageparam",
          "type": "var",
          "name": "pageParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageParam",
            "textToLower": "pageparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageParam_-1:0"
          },
          "signature": "Integer pageParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "pageSize": {
          "id": "ConnectApi.topics.gettopics.pagesize",
          "type": "var",
          "name": "pageSize",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pageSize",
            "textToLower": "pagesize",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pageSize_-1:0"
          },
          "signature": "Integer pageSize",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "sortParam": {
          "id": "ConnectApi.topics.gettopics.sortparam",
          "type": "var",
          "name": "sortParam",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sortParam",
            "textToLower": "sortparam",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sortParam_-1:0"
          },
          "signature": "ConnectApi.TopicSort sortParam",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.connectapi.topicsort",
            "type": "datatype",
            "name": "ConnectApi.TopicSort"
          }
        }
      }
    },
    "gettopics(string,string,boolean)": {
      "id": "ConnectApi.topics.gettopics",
      "type": "method",
      "name": "getTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopics",
        "textToLower": "gettopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopics(String communityId, String q, Boolean exactMatch)",
      "simplifiedSignature": "getTopics(String,String,Boolean)",
      "datatype": {
        "id": "ConnectApi.topics.gettopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get the topic that matches the exact, case-insensitive name.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "q": {
          "id": "ConnectApi.topics.gettopics.q",
          "type": "var",
          "name": "q",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "q",
            "textToLower": "q",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_q_-1:0"
          },
          "signature": "String q",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "exactMatch": {
          "id": "ConnectApi.topics.gettopics.exactmatch",
          "type": "var",
          "name": "exactMatch",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exactMatch",
            "textToLower": "exactmatch",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exactMatch_-1:0"
          },
          "signature": "Boolean exactMatch",
          "datatype": {
            "id": "ConnectApi.topics.gettopics.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "gettopicsorfallbacktorenamedtopics(string,string,boolean,boolean)": {
      "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics",
      "type": "method",
      "name": "getTopicsOrFallBackToRenamedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopicsOrFallBackToRenamedTopics",
        "textToLower": "gettopicsorfallbacktorenamedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopicsOrFallBackToRenamedTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTopicsOrFallBackToRenamedTopics(String communityId, String q, Boolean exactMatch, Boolean fallBackToRenamedTopics)",
      "simplifiedSignature": "getTopicsOrFallBackToRenamedTopics(String,String,Boolean,Boolean)",
      "datatype": {
        "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get the most recent renamed topic match, if there isn’t an exact match.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "q": {
          "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.q",
          "type": "var",
          "name": "q",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "q",
            "textToLower": "q",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_q_-1:0"
          },
          "signature": "String q",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "exactMatch": {
          "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.exactmatch",
          "type": "var",
          "name": "exactMatch",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exactMatch",
            "textToLower": "exactmatch",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exactMatch_-1:0"
          },
          "signature": "Boolean exactMatch",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "fallBackToRenamedTopics": {
          "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.fallbacktorenamedtopics",
          "type": "var",
          "name": "fallBackToRenamedTopics",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fallBackToRenamedTopics",
            "textToLower": "fallbacktorenamedtopics",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fallBackToRenamedTopics_-1:0"
          },
          "signature": "Boolean fallBackToRenamedTopics",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsorfallbacktorenamedtopics.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "gettopicsuggestions(string,string,integer)": {
      "id": "ConnectApi.topics.gettopicsuggestions",
      "type": "method",
      "name": "getTopicSuggestions",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopicSuggestions",
        "textToLower": "gettopicsuggestions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopicSuggestions_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicSuggestionPage getTopicSuggestions(String communityId, String recordId, Integer maxResults)",
      "simplifiedSignature": "getTopicSuggestions(String,String,Integer)",
      "datatype": {
        "id": "ConnectApi.topics.gettopicsuggestions.ConnectApi.​TopicSuggestionPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicSuggestionPage"
      },
      "description": "Get up to a specified number of suggested topics for a record or feed item.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopicsuggestions.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.gettopicsuggestions.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "maxResults": {
          "id": "ConnectApi.topics.gettopicsuggestions.maxresults",
          "type": "var",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxResults_-1:0"
          },
          "signature": "Integer maxResults",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestions.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "gettopicsuggestions(string,string)": {
      "id": "ConnectApi.topics.gettopicsuggestions",
      "type": "method",
      "name": "getTopicSuggestions",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopicSuggestions",
        "textToLower": "gettopicsuggestions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopicSuggestions_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicSuggestionPage getTopicSuggestions(String communityId, String recordId)",
      "simplifiedSignature": "getTopicSuggestions(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.gettopicsuggestions.ConnectApi.​TopicSuggestionPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicSuggestionPage"
      },
      "description": "Get suggested topics for a record or feed item.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopicsuggestions.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.gettopicsuggestions.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettopicsuggestionsfortext(string,string,integer)": {
      "id": "ConnectApi.topics.gettopicsuggestionsfortext",
      "type": "method",
      "name": "getTopicSuggestionsForText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopicSuggestionsForText",
        "textToLower": "gettopicsuggestionsfortext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopicSuggestionsForText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicSuggestionPage getTopicSuggestionsForText(String communityId, String text, Integer maxResults)",
      "simplifiedSignature": "getTopicSuggestionsForText(String,String,Integer)",
      "datatype": {
        "id": "ConnectApi.topics.gettopicsuggestionsfortext.ConnectApi.​TopicSuggestionPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicSuggestionPage"
      },
      "description": "Get up to a specified number of suggested topics for a string of text.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopicsuggestionsfortext.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "text": {
          "id": "ConnectApi.topics.gettopicsuggestionsfortext.text",
          "type": "var",
          "name": "text",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "text",
            "textToLower": "text",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_text_-1:0"
          },
          "signature": "String text",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "maxResults": {
          "id": "ConnectApi.topics.gettopicsuggestionsfortext.maxresults",
          "type": "var",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxResults_-1:0"
          },
          "signature": "Integer maxResults",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestionsfortext.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "gettopicsuggestionsfortext(string,string)": {
      "id": "ConnectApi.topics.gettopicsuggestionsfortext",
      "type": "method",
      "name": "getTopicSuggestionsForText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopicSuggestionsForText",
        "textToLower": "gettopicsuggestionsfortext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopicSuggestionsForText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicSuggestionPage getTopicSuggestionsForText(String communityId, String text)",
      "simplifiedSignature": "getTopicSuggestionsForText(String,String)",
      "datatype": {
        "id": "ConnectApi.topics.gettopicsuggestionsfortext.ConnectApi.​TopicSuggestionPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicSuggestionPage"
      },
      "description": "Get suggested topics for a string of text.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettopicsuggestionsfortext.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "text": {
          "id": "ConnectApi.topics.gettopicsuggestionsfortext.text",
          "type": "var",
          "name": "text",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "text",
            "textToLower": "text",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_text_-1:0"
          },
          "signature": "String text",
          "datatype": {
            "id": "ConnectApi.topics.gettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettrendingtopics(string)": {
      "id": "ConnectApi.topics.gettrendingtopics",
      "type": "method",
      "name": "getTrendingTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTrendingTopics",
        "textToLower": "gettrendingtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTrendingTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTrendingTopics(String communityId)",
      "simplifiedSignature": "getTrendingTopics(String)",
      "datatype": {
        "id": "ConnectApi.topics.gettrendingtopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get trending topics for the org or community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettrendingtopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettrendingtopics.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettrendingtopics(string,integer)": {
      "id": "ConnectApi.topics.gettrendingtopics",
      "type": "method",
      "name": "getTrendingTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTrendingTopics",
        "textToLower": "gettrendingtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTrendingTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage getTrendingTopics(String communityId, Integer maxResults)",
      "simplifiedSignature": "getTrendingTopics(String,Integer)",
      "datatype": {
        "id": "ConnectApi.topics.gettrendingtopics.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Get up to a specified number of trending topics for the org or community.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.gettrendingtopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.gettrendingtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "maxResults": {
          "id": "ConnectApi.topics.gettrendingtopics.maxresults",
          "type": "var",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxResults_-1:0"
          },
          "signature": "Integer maxResults",
          "datatype": {
            "id": "ConnectApi.topics.gettrendingtopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "mergetopics(string,string,list)": {
      "id": "ConnectApi.topics.mergetopics",
      "type": "method",
      "name": "mergeTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "mergeTopics",
        "textToLower": "mergetopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_mergeTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​Topic mergeTopics(String communityId, String topicId, List <String>)",
      "simplifiedSignature": "mergeTopics(String,String,List)",
      "datatype": {
        "id": "ConnectApi.topics.mergetopics.ConnectApi.​Topic",
        "type": "datatype",
        "name": "ConnectApi.​Topic"
      },
      "description": "Merge up to five secondary topics with a primary topic.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.mergetopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.mergetopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.mergetopics.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.mergetopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "<String>": {
          "id": "ConnectApi.topics.mergetopics.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "ConnectApi.topics.mergetopics.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "reassigntopicdatacategoryrules(string,string,string,connectapi.topicnamesinput)": {
      "id": "ConnectApi.topics.reassigntopicdatacategoryrules",
      "type": "method",
      "name": "reassignTopicDataCategoryRules",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "reassignTopicDataCategoryRules",
        "textToLower": "reassigntopicdatacategoryrules",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_reassignTopicDataCategoryRules_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.TopicPage reassignTopicDataCategoryRules(String communityId, String dataCategoryGroup, String dataCategory, ConnectApi.TopicNamesInput topicNames)",
      "simplifiedSignature": "reassignTopicDataCategoryRules(String,String,String,ConnectApi.TopicNamesInput)",
      "datatype": {
        "id": "ConnectApi.topics.reassigntopicdatacategoryrules.ConnectApi.TopicPage",
        "type": "datatype",
        "name": "ConnectApi.TopicPage"
      },
      "description": "Reassign topic and article assignment rules by data category by deleting the existing rules and creating new rules.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.reassigntopicdatacategoryrules.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.reassigntopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategoryGroup": {
          "id": "ConnectApi.topics.reassigntopicdatacategoryrules.datacategorygroup",
          "type": "var",
          "name": "dataCategoryGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategoryGroup",
            "textToLower": "datacategorygroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategoryGroup_-1:0"
          },
          "signature": "String dataCategoryGroup",
          "datatype": {
            "id": "ConnectApi.topics.reassigntopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategory": {
          "id": "ConnectApi.topics.reassigntopicdatacategoryrules.datacategory",
          "type": "var",
          "name": "dataCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategory",
            "textToLower": "datacategory",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategory_-1:0"
          },
          "signature": "String dataCategory",
          "datatype": {
            "id": "ConnectApi.topics.reassigntopicdatacategoryrules.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicNames": {
          "id": "ConnectApi.topics.reassigntopicdatacategoryrules.topicnames",
          "type": "var",
          "name": "topicNames",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicNames",
            "textToLower": "topicnames",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicNames_-1:0"
          },
          "signature": "ConnectApi.TopicNamesInput topicNames",
          "datatype": {
            "id": "ConnectApi.topics.reassigntopicdatacategoryrules.connectapi.topicnamesinput",
            "type": "datatype",
            "name": "ConnectApi.TopicNamesInput"
          }
        }
      }
    },
    "reassigntopicsbyname(string,string,connectapi.topicnamesinput)": {
      "id": "ConnectApi.topics.reassigntopicsbyname",
      "type": "method",
      "name": "reassignTopicsByName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "reassignTopicsByName",
        "textToLower": "reassigntopicsbyname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_reassignTopicsByName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​TopicPage reassignTopicsByName(String communityId, String recordId, ConnectApi.TopicNamesInput topicNames)",
      "simplifiedSignature": "reassignTopicsByName(String,String,ConnectApi.TopicNamesInput)",
      "datatype": {
        "id": "ConnectApi.topics.reassigntopicsbyname.ConnectApi.​TopicPage",
        "type": "datatype",
        "name": "ConnectApi.​TopicPage"
      },
      "description": "Reassign all the topics on a record or feed item, that is, remove all the assigned topics on a record or feed item and add topics. Optionally, provide a list of suggested topics to assign to a record or feed item to improve future topic suggestions.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.reassigntopicsbyname.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.reassigntopicsbyname.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.reassigntopicsbyname.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.reassigntopicsbyname.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicNames": {
          "id": "ConnectApi.topics.reassigntopicsbyname.topicnames",
          "type": "var",
          "name": "topicNames",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicNames",
            "textToLower": "topicnames",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicNames_-1:0"
          },
          "signature": "ConnectApi.TopicNamesInput topicNames",
          "datatype": {
            "id": "ConnectApi.topics.reassigntopicsbyname.connectapi.topicnamesinput",
            "type": "datatype",
            "name": "ConnectApi.TopicNamesInput"
          }
        }
      }
    },
    "unassigntopic(string,string,string)": {
      "id": "ConnectApi.topics.unassigntopic",
      "type": "method",
      "name": "unassignTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unassignTopic",
        "textToLower": "unassigntopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unassignTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void unassignTopic(String communityId, String recordId, String topicId)",
      "simplifiedSignature": "unassignTopic(String,String,String)",
      "datatype": {
        "id": "ConnectApi.topics.unassigntopic.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Remove a topic from a record or feed item.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.unassigntopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.unassigntopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.unassigntopic.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.unassigntopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.unassigntopic.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.unassigntopic.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "updatetopic(string,string,connectapi.topicinput)": {
      "id": "ConnectApi.topics.updatetopic",
      "type": "method",
      "name": "updateTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateTopic",
        "textToLower": "updatetopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.​Topic updateTopic(String communityId, String topicId, ConnectApi.TopicInput topic)",
      "simplifiedSignature": "updateTopic(String,String,ConnectApi.TopicInput)",
      "datatype": {
        "id": "ConnectApi.topics.updatetopic.ConnectApi.​Topic",
        "type": "datatype",
        "name": "ConnectApi.​Topic"
      },
      "description": "Update the description or name of a topic or merge up to five secondary topics with a primary topic.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.updatetopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.updatetopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.updatetopic.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.updatetopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topic": {
          "id": "ConnectApi.topics.updatetopic.topic",
          "type": "var",
          "name": "topic",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topic",
            "textToLower": "topic",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topic_-1:0"
          },
          "signature": "ConnectApi.TopicInput topic",
          "datatype": {
            "id": "ConnectApi.topics.updatetopic.connectapi.topicinput",
            "type": "datatype",
            "name": "ConnectApi.TopicInput"
          }
        }
      }
    },
    "updatetopicsforarticlesindatacategory(string,string,string,connectapi.articletopicassignmentjobinput)": {
      "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory",
      "type": "method",
      "name": "updateTopicsForArticlesInDataCategory",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateTopicsForArticlesInDataCategory",
        "textToLower": "updatetopicsforarticlesindatacategory",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateTopicsForArticlesInDataCategory_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.TopicPage updateTopicsForArticlesInDataCategory(String communityId, String dataCategoryGroup, String dataCategory, ConnectApi.ArticleTopicAssignmentJobInput articleTopicAssignmentJob)",
      "simplifiedSignature": "updateTopicsForArticlesInDataCategory(String,String,String,ConnectApi.ArticleTopicAssignmentJobInput)",
      "datatype": {
        "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.ConnectApi.TopicPage",
        "type": "datatype",
        "name": "ConnectApi.TopicPage"
      },
      "description": "Assign topics to articles and unassign topics from articles in a data category.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategoryGroup": {
          "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.datacategorygroup",
          "type": "var",
          "name": "dataCategoryGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategoryGroup",
            "textToLower": "datacategorygroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategoryGroup_-1:0"
          },
          "signature": "String dataCategoryGroup",
          "datatype": {
            "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "dataCategory": {
          "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.datacategory",
          "type": "var",
          "name": "dataCategory",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dataCategory",
            "textToLower": "datacategory",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dataCategory_-1:0"
          },
          "signature": "String dataCategory",
          "datatype": {
            "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "articleTopicAssignmentJob": {
          "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.articletopicassignmentjob",
          "type": "var",
          "name": "articleTopicAssignmentJob",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "articleTopicAssignmentJob",
            "textToLower": "articletopicassignmentjob",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_articleTopicAssignmentJob_-1:0"
          },
          "signature": "ConnectApi.ArticleTopicAssignmentJobInput articleTopicAssignmentJob",
          "datatype": {
            "id": "ConnectApi.topics.updatetopicsforarticlesindatacategory.connectapi.articletopicassignmentjobinput",
            "type": "datatype",
            "name": "ConnectApi.ArticleTopicAssignmentJobInput"
          }
        }
      }
    },
    "settestgetgroupsrecentlytalkingabouttopic(string,string,connectapi.chattergroupsummarypage)": {
      "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic",
      "type": "method",
      "name": "setTestGetGroupsRecentlyTalkingAboutTopic",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetGroupsRecentlyTalkingAboutTopic",
        "textToLower": "settestgetgroupsrecentlytalkingabouttopic",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetGroupsRecentlyTalkingAboutTopic_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetGroupsRecentlyTalkingAboutTopic(String communityId, String topicId, ConnectApi.ChatterGroupSummaryPage result)",
      "simplifiedSignature": "setTestGetGroupsRecentlyTalkingAboutTopic(String,String,ConnectApi.ChatterGroupSummaryPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.ChatterGroupSummaryPage object to be returned when the matching ConnectApi.getGroupsRecentlyTalkingAboutTopic method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.ChatterGroupSummaryPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgetgroupsrecentlytalkingabouttopic.connectapi.chattergroupsummarypage",
            "type": "datatype",
            "name": "ConnectApi.ChatterGroupSummaryPage"
          }
        }
      }
    },
    "settestgetrecentlytalkingabouttopicsforgroup(string,string,connectapi.​topicpage)": {
      "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup",
      "type": "method",
      "name": "setTestGetRecentlyTalkingAboutTopicsForGroup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecentlyTalkingAboutTopicsForGroup",
        "textToLower": "settestgetrecentlytalkingabouttopicsforgroup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecentlyTalkingAboutTopicsForGroup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRecentlyTalkingAboutTopicsForGroup(String communityId, String groupId, ConnectApi.​TopicPage result)",
      "simplifiedSignature": "setTestGetRecentlyTalkingAboutTopicsForGroup(String,String,ConnectApi.​TopicPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.​TopicPage object to be returned when the matching ConnectApi.getRecentlyTalkingAboutTopicsForGroup method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "groupId": {
          "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup.groupid",
          "type": "var",
          "name": "groupId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "groupId",
            "textToLower": "groupid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_groupId_-1:0"
          },
          "signature": "String groupId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.​TopicPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforgroup.connectapi.​topicpage",
            "type": "datatype",
            "name": "ConnectApi.​TopicPage"
          }
        }
      }
    },
    "settestgetrecentlytalkingabouttopicsforuser(string,string,connectapi.topicpage)": {
      "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser",
      "type": "method",
      "name": "setTestGetRecentlyTalkingAboutTopicsForUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRecentlyTalkingAboutTopicsForUser",
        "textToLower": "settestgetrecentlytalkingabouttopicsforuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRecentlyTalkingAboutTopicsForUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRecentlyTalkingAboutTopicsForUser(String communityId, String userId, ConnectApi.TopicPage result)",
      "simplifiedSignature": "setTestGetRecentlyTalkingAboutTopicsForUser(String,String,ConnectApi.TopicPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.​TopicPage object to be returned when the matching ConnectApi.getRecentlyTalkingAboutTopicsForUser method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.TopicPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrecentlytalkingabouttopicsforuser.connectapi.topicpage",
            "type": "datatype",
            "name": "ConnectApi.TopicPage"
          }
        }
      }
    },
    "settestgetrelatedtopics(string,string,connectapi.topicpage)": {
      "id": "ConnectApi.topics.settestgetrelatedtopics",
      "type": "method",
      "name": "setTestGetRelatedTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetRelatedTopics",
        "textToLower": "settestgetrelatedtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetRelatedTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetRelatedTopics(String communityId, String topicId, ConnectApi.TopicPage result)",
      "simplifiedSignature": "setTestGetRelatedTopics(String,String,ConnectApi.TopicPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgetrelatedtopics.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.TopicPage object to be returned when the matching ConnectApi.getRelatedTopics method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgetrelatedtopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrelatedtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "topicId": {
          "id": "ConnectApi.topics.settestgetrelatedtopics.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrelatedtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgetrelatedtopics.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.TopicPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgetrelatedtopics.connectapi.topicpage",
            "type": "datatype",
            "name": "ConnectApi.TopicPage"
          }
        }
      }
    },
    "settestgettopicsuggestions(string,string,integer,connectapi.topicsuggestionpage)": {
      "id": "ConnectApi.topics.settestgettopicsuggestions",
      "type": "method",
      "name": "setTestGetTopicSuggestions",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetTopicSuggestions",
        "textToLower": "settestgettopicsuggestions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetTopicSuggestions_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetTopicSuggestions(String communityId, String recordId, Integer maxResults, ConnectApi.TopicSuggestionPage result)",
      "simplifiedSignature": "setTestGetTopicSuggestions(String,String,Integer,ConnectApi.TopicSuggestionPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgettopicsuggestions.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.TopicSuggestionPage object to be returned when the matching ConnectApi.getTopicSuggestions method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgettopicsuggestions.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.settestgettopicsuggestions.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "maxResults": {
          "id": "ConnectApi.topics.settestgettopicsuggestions.maxresults",
          "type": "var",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxResults_-1:0"
          },
          "signature": "Integer maxResults",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestions.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgettopicsuggestions.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.TopicSuggestionPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestions.connectapi.topicsuggestionpage",
            "type": "datatype",
            "name": "ConnectApi.TopicSuggestionPage"
          }
        }
      }
    },
    "settestgettopicsuggestions(string,string,connectapi.​topicsuggestionpage)": {
      "id": "ConnectApi.topics.settestgettopicsuggestions",
      "type": "method",
      "name": "setTestGetTopicSuggestions",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetTopicSuggestions",
        "textToLower": "settestgettopicsuggestions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetTopicSuggestions_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetTopicSuggestions(String communityId, String recordId, ConnectApi.​TopicSuggestionPage result)",
      "simplifiedSignature": "setTestGetTopicSuggestions(String,String,ConnectApi.​TopicSuggestionPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgettopicsuggestions.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.TopicSuggestionPage object to be returned when the matching ConnectApi.getTopicSuggestions method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgettopicsuggestions.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "recordId": {
          "id": "ConnectApi.topics.settestgettopicsuggestions.recordid",
          "type": "var",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordId_-1:0"
          },
          "signature": "String recordId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestions.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgettopicsuggestions.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.​TopicSuggestionPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestions.connectapi.​topicsuggestionpage",
            "type": "datatype",
            "name": "ConnectApi.​TopicSuggestionPage"
          }
        }
      }
    },
    "settestgettopicsuggestionsfortext(string,string,integer,connectapi.topicsuggestionpage)": {
      "id": "ConnectApi.topics.settestgettopicsuggestionsfortext",
      "type": "method",
      "name": "setTestGetTopicSuggestionsForText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetTopicSuggestionsForText",
        "textToLower": "settestgettopicsuggestionsfortext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetTopicSuggestionsForText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetTopicSuggestionsForText(String communityId, String text, Integer maxResults, ConnectApi.TopicSuggestionPage result)",
      "simplifiedSignature": "setTestGetTopicSuggestionsForText(String,String,Integer,ConnectApi.TopicSuggestionPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.TopicSuggestionPage object to be returned when the matching ConnectApi.getTopicSuggestionsForText method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "text": {
          "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.text",
          "type": "var",
          "name": "text",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "text",
            "textToLower": "text",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_text_-1:0"
          },
          "signature": "String text",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "maxResults": {
          "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.maxresults",
          "type": "var",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxResults_-1:0"
          },
          "signature": "Integer maxResults",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.TopicSuggestionPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.connectapi.topicsuggestionpage",
            "type": "datatype",
            "name": "ConnectApi.TopicSuggestionPage"
          }
        }
      }
    },
    "settestgettopicsuggestionsfortext(string,string,connectapi.topicsuggestionpage)": {
      "id": "ConnectApi.topics.settestgettopicsuggestionsfortext",
      "type": "method",
      "name": "setTestGetTopicSuggestionsForText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetTopicSuggestionsForText",
        "textToLower": "settestgettopicsuggestionsfortext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetTopicSuggestionsForText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetTopicSuggestionsForText(String communityId, String text, ConnectApi.TopicSuggestionPage result)",
      "simplifiedSignature": "setTestGetTopicSuggestionsForText(String,String,ConnectApi.TopicSuggestionPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.TopicSuggestionPage object to be returned when the matching ConnectApi.getTopicSuggestionsForText method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "text": {
          "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.text",
          "type": "var",
          "name": "text",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "text",
            "textToLower": "text",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_text_-1:0"
          },
          "signature": "String text",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.TopicSuggestionPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgettopicsuggestionsfortext.connectapi.topicsuggestionpage",
            "type": "datatype",
            "name": "ConnectApi.TopicSuggestionPage"
          }
        }
      }
    },
    "settestgettrendingtopics(string,connectapi.topicpage)": {
      "id": "ConnectApi.topics.settestgettrendingtopics",
      "type": "method",
      "name": "setTestGetTrendingTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetTrendingTopics",
        "textToLower": "settestgettrendingtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetTrendingTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetTrendingTopics(String communityId, ConnectApi.TopicPage result)",
      "simplifiedSignature": "setTestGetTrendingTopics(String,ConnectApi.TopicPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgettrendingtopics.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.TopicPage object to be returned when the matching ConnectApi.getTrendingTopics method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgettrendingtopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettrendingtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgettrendingtopics.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.TopicPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgettrendingtopics.connectapi.topicpage",
            "type": "datatype",
            "name": "ConnectApi.TopicPage"
          }
        }
      }
    },
    "settestgettrendingtopics(string,integer,connectapi.topicpage)": {
      "id": "ConnectApi.topics.settestgettrendingtopics",
      "type": "method",
      "name": "setTestGetTrendingTopics",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTestGetTrendingTopics",
        "textToLower": "settestgettrendingtopics",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTestGetTrendingTopics_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setTestGetTrendingTopics(String communityId, Integer maxResults, ConnectApi.TopicPage result)",
      "simplifiedSignature": "setTestGetTrendingTopics(String,Integer,ConnectApi.TopicPage)",
      "datatype": {
        "id": "ConnectApi.topics.settestgettrendingtopics.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Register a ConnectApi.TopicPage object to be returned when the matching ConnectApi.getTrendingTopics method is called in a test context. Use the method with the same parameters or you receive an exception.",
      "variables": {
        "communityId": {
          "id": "ConnectApi.topics.settestgettrendingtopics.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.topics.settestgettrendingtopics.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "maxResults": {
          "id": "ConnectApi.topics.settestgettrendingtopics.maxresults",
          "type": "var",
          "name": "maxResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxResults",
            "textToLower": "maxresults",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxResults_-1:0"
          },
          "signature": "Integer maxResults",
          "datatype": {
            "id": "ConnectApi.topics.settestgettrendingtopics.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "result": {
          "id": "ConnectApi.topics.settestgettrendingtopics.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "ConnectApi.TopicPage result",
          "datatype": {
            "id": "ConnectApi.topics.settestgettrendingtopics.connectapi.topicpage",
            "type": "datatype",
            "name": "ConnectApi.TopicPage"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}