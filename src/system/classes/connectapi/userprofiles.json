{
  "id": "ConnectApi.userprofiles",
  "nodeType": "class",
  "name": "UserProfiles",
  "namespace": "ConnectApi",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "UserProfiles",
    "textToLower": "userprofiles",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_UserProfiles_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Access user profile data. The user profile data populates the profile page (also called the Chatter profile page). This data includes user information (such as address, manager, and phone number), some user capabilities (permissions), and a set of subtab apps, which are custom tabs on the profile page.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_ConnectAPI_UserProfiles_static_methods.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "deletebannerphoto(string,string)": {
      "id": "ConnectApi.userprofiles.deletebannerphoto",
      "nodeType": "method",
      "name": "deleteBannerPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteBannerPhoto",
        "textToLower": "deletebannerphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteBannerPhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void deleteBannerPhoto(String communityId, String userId)",
      "simplifiedSignature": "deleteBannerPhoto(String,String)",
      "datatype": {
        "id": "ConnectApi.userprofiles.deletebannerphoto.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Delete a user’s banner photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.deletebannerphoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.deletebannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.deletebannerphoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.deletebannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "deletephoto(string,string)": {
      "id": "ConnectApi.userprofiles.deletephoto",
      "nodeType": "method",
      "name": "deletePhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deletePhoto",
        "textToLower": "deletephoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deletePhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void deletePhoto(String communityId, String userId)",
      "simplifiedSignature": "deletePhoto(String,String)",
      "datatype": {
        "id": "ConnectApi.userprofiles.deletephoto.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Delete a user’s photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.deletephoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.deletephoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.deletephoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.deletephoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getbannerphoto(string,string)": {
      "id": "ConnectApi.userprofiles.getbannerphoto",
      "nodeType": "method",
      "name": "getBannerPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBannerPhoto",
        "textToLower": "getbannerphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBannerPhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.BannerPhoto getBannerPhoto(String communityId, String userId)",
      "simplifiedSignature": "getBannerPhoto(String,String)",
      "datatype": {
        "id": "ConnectApi.userprofiles.getbannerphoto.ConnectApi.BannerPhoto",
        "nodeType": "datatype",
        "name": "ConnectApi.BannerPhoto"
      },
      "description": "Get a user’s banner photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.getbannerphoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.getbannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.getbannerphoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.getbannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getphoto(string,string)": {
      "id": "ConnectApi.userprofiles.getphoto",
      "nodeType": "method",
      "name": "getPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPhoto",
        "textToLower": "getphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.Photo getPhoto(String communityId, String userId)",
      "simplifiedSignature": "getPhoto(String,String)",
      "datatype": {
        "id": "ConnectApi.userprofiles.getphoto.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo"
      },
      "description": "Get a user’s photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.getphoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.getphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.getphoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.getphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getuserprofile(string,string)": {
      "id": "ConnectApi.userprofiles.getuserprofile",
      "nodeType": "method",
      "name": "getUserProfile",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUserProfile",
        "textToLower": "getuserprofile",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUserProfile_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.UserProfile getUserProfile(String communityId, String userId)",
      "simplifiedSignature": "getUserProfile(String,String)",
      "datatype": {
        "id": "ConnectApi.userprofiles.getuserprofile.ConnectApi.UserProfile",
        "nodeType": "datatype",
        "name": "ConnectApi.UserProfile"
      },
      "description": "Get the user profile of the context user.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.getuserprofile.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.getuserprofile.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.getuserprofile.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.getuserprofile.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setbannerphoto(string,string,string,integer)": {
      "id": "ConnectApi.userprofiles.setbannerphoto",
      "nodeType": "method",
      "name": "setBannerPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setBannerPhoto",
        "textToLower": "setbannerphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setBannerPhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.BannerPhoto setBannerPhoto(String communityId, String userId, String fileId, Integer versionNumber)",
      "simplifiedSignature": "setBannerPhoto(String,String,String,Integer)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setbannerphoto.ConnectApi.BannerPhoto",
        "nodeType": "datatype",
        "name": "ConnectApi.BannerPhoto"
      },
      "description": "Set an uploaded file as a user’s banner photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setbannerphoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setbannerphoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "fileId": {
          "id": "ConnectApi.userprofiles.setbannerphoto.fileid",
          "type": "var",
          "name": "fileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileId",
            "textToLower": "fileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileId_-1:0"
          },
          "signature": "String fileId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "versionNumber": {
          "id": "ConnectApi.userprofiles.setbannerphoto.versionnumber",
          "type": "var",
          "name": "versionNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "versionNumber",
            "textToLower": "versionnumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_versionNumber_-1:0"
          },
          "signature": "Integer versionNumber",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphoto.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "setbannerphoto(string,string,connectapi.binaryinput)": {
      "id": "ConnectApi.userprofiles.setbannerphoto",
      "nodeType": "method",
      "name": "setBannerPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setBannerPhoto",
        "textToLower": "setbannerphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setBannerPhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.BannerPhoto setBannerPhoto(String communityId, String userId, ConnectApi.BinaryInput fileUpload)",
      "simplifiedSignature": "setBannerPhoto(String,String,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setbannerphoto.ConnectApi.BannerPhoto",
        "nodeType": "datatype",
        "name": "ConnectApi.BannerPhoto"
      },
      "description": "Set a file that hasn’t been uploaded as a user’s banner photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setbannerphoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setbannerphoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "fileUpload": {
          "id": "ConnectApi.userprofiles.setbannerphoto.fileupload",
          "type": "var",
          "name": "fileUpload",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileUpload_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileUpload",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphoto.connectapi.binaryinput",
            "nodeType": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    },
    "setbannerphotowithattributes(string,string,connectapi.bannerphotoinput)": {
      "id": "ConnectApi.userprofiles.setbannerphotowithattributes",
      "nodeType": "method",
      "name": "setBannerPhotoWithAttributes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setBannerPhotoWithAttributes",
        "textToLower": "setbannerphotowithattributes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setBannerPhotoWithAttributes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.BannerPhoto setBannerPhotoWithAttributes(String communityId, String userId, ConnectApi.BannerPhotoInput bannerPhoto)",
      "simplifiedSignature": "setBannerPhotoWithAttributes(String,String,ConnectApi.BannerPhotoInput)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setbannerphotowithattributes.ConnectApi.BannerPhoto",
        "nodeType": "datatype",
        "name": "ConnectApi.BannerPhoto"
      },
      "description": "Set and crop an uploaded file as a user’s banner photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setbannerphotowithattributes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setbannerphotowithattributes.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "bannerPhoto": {
          "id": "ConnectApi.userprofiles.setbannerphotowithattributes.bannerphoto",
          "type": "var",
          "name": "bannerPhoto",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "bannerPhoto",
            "textToLower": "bannerphoto",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_bannerPhoto_-1:0"
          },
          "signature": "ConnectApi.BannerPhotoInput bannerPhoto",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphotowithattributes.connectapi.bannerphotoinput",
            "nodeType": "datatype",
            "name": "ConnectApi.BannerPhotoInput"
          }
        }
      }
    },
    "setbannerphotowithattributes(string,string,connectapi.bannerphotoinput,connectapi.binaryinput)": {
      "id": "ConnectApi.userprofiles.setbannerphotowithattributes",
      "nodeType": "method",
      "name": "setBannerPhotoWithAttributes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setBannerPhotoWithAttributes",
        "textToLower": "setbannerphotowithattributes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setBannerPhotoWithAttributes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.BannerPhoto setBannerPhotoWithAttributes(String communityId, String userId, ConnectApi.BannerPhotoInput bannerPhoto, ConnectApi.BinaryInput fileUpload)",
      "simplifiedSignature": "setBannerPhotoWithAttributes(String,String,ConnectApi.BannerPhotoInput,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setbannerphotowithattributes.ConnectApi.BannerPhoto",
        "nodeType": "datatype",
        "name": "ConnectApi.BannerPhoto"
      },
      "description": "Set and crop a file that hasn’t been uploaded as a user’s banner photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setbannerphotowithattributes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setbannerphotowithattributes.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "bannerPhoto": {
          "id": "ConnectApi.userprofiles.setbannerphotowithattributes.bannerphoto",
          "type": "var",
          "name": "bannerPhoto",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "bannerPhoto",
            "textToLower": "bannerphoto",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_bannerPhoto_-1:0"
          },
          "signature": "ConnectApi.BannerPhotoInput bannerPhoto",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphotowithattributes.connectapi.bannerphotoinput",
            "nodeType": "datatype",
            "name": "ConnectApi.BannerPhotoInput"
          }
        },
        "fileUpload": {
          "id": "ConnectApi.userprofiles.setbannerphotowithattributes.fileupload",
          "type": "var",
          "name": "fileUpload",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileUpload_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileUpload",
          "datatype": {
            "id": "ConnectApi.userprofiles.setbannerphotowithattributes.connectapi.binaryinput",
            "nodeType": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    },
    "setphoto(string,string,string,integer)": {
      "id": "ConnectApi.userprofiles.setphoto",
      "nodeType": "method",
      "name": "setPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setPhoto",
        "textToLower": "setphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setPhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.Photo setPhoto(String communityId, String userId, String fileId, Integer versionNumber)",
      "simplifiedSignature": "setPhoto(String,String,String,Integer)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setphoto.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo"
      },
      "description": "Set an uploaded file as a user’s photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setphoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setphoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "fileId": {
          "id": "ConnectApi.userprofiles.setphoto.fileid",
          "type": "var",
          "name": "fileId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileId",
            "textToLower": "fileid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileId_-1:0"
          },
          "signature": "String fileId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "versionNumber": {
          "id": "ConnectApi.userprofiles.setphoto.versionnumber",
          "type": "var",
          "name": "versionNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "versionNumber",
            "textToLower": "versionnumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_versionNumber_-1:0"
          },
          "signature": "Integer versionNumber",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphoto.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "setphoto(string,string,connectapi.binaryinput)": {
      "id": "ConnectApi.userprofiles.setphoto",
      "nodeType": "method",
      "name": "setPhoto",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setPhoto",
        "textToLower": "setphoto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setPhoto_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.Photo setPhoto(String communityId, String userId, ConnectApi.BinaryInput fileUpload)",
      "simplifiedSignature": "setPhoto(String,String,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setphoto.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo"
      },
      "description": "Set a file that hasn’t been uploaded as a user’s photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setphoto.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setphoto.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphoto.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "fileUpload": {
          "id": "ConnectApi.userprofiles.setphoto.fileupload",
          "type": "var",
          "name": "fileUpload",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileUpload_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileUpload",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphoto.connectapi.binaryinput",
            "nodeType": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    },
    "setphotowithattributes(string,string,connectapi.photoinput)": {
      "id": "ConnectApi.userprofiles.setphotowithattributes",
      "nodeType": "method",
      "name": "setPhotoWithAttributes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setPhotoWithAttributes",
        "textToLower": "setphotowithattributes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setPhotoWithAttributes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.Photo setPhotoWithAttributes(String communityId, String userId, ConnectApi.PhotoInput photo)",
      "simplifiedSignature": "setPhotoWithAttributes(String,String,ConnectApi.PhotoInput)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setphotowithattributes.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo"
      },
      "description": "Set and crop an uploaded file as a user’s photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setphotowithattributes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setphotowithattributes.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "photo": {
          "id": "ConnectApi.userprofiles.setphotowithattributes.photo",
          "type": "var",
          "name": "photo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "photo",
            "textToLower": "photo",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_photo_-1:0"
          },
          "signature": "ConnectApi.PhotoInput photo",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphotowithattributes.connectapi.photoinput",
            "nodeType": "datatype",
            "name": "ConnectApi.PhotoInput"
          }
        }
      }
    },
    "setphotowithattributes(string,string,connectapi.photoinput,connectapi.binaryinput)": {
      "id": "ConnectApi.userprofiles.setphotowithattributes",
      "nodeType": "method",
      "name": "setPhotoWithAttributes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setPhotoWithAttributes",
        "textToLower": "setphotowithattributes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setPhotoWithAttributes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ConnectApi.Photo setPhotoWithAttributes(String communityId, String userId, ConnectApi.PhotoInput photo, ConnectApi.BinaryInput fileUpload)",
      "simplifiedSignature": "setPhotoWithAttributes(String,String,ConnectApi.PhotoInput,ConnectApi.BinaryInput)",
      "datatype": {
        "id": "ConnectApi.userprofiles.setphotowithattributes.ConnectApi.Photo",
        "nodeType": "datatype",
        "name": "ConnectApi.Photo"
      },
      "description": "Set and crop a file that hasn’t been uploaded as a user’s photo.",
      "params": {
        "communityId": {
          "id": "ConnectApi.userprofiles.setphotowithattributes.communityid",
          "type": "var",
          "name": "communityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityId",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityId_-1:0"
          },
          "signature": "String communityId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "userId": {
          "id": "ConnectApi.userprofiles.setphotowithattributes.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphotowithattributes.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "photo": {
          "id": "ConnectApi.userprofiles.setphotowithattributes.photo",
          "type": "var",
          "name": "photo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "photo",
            "textToLower": "photo",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_photo_-1:0"
          },
          "signature": "ConnectApi.PhotoInput photo",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphotowithattributes.connectapi.photoinput",
            "nodeType": "datatype",
            "name": "ConnectApi.PhotoInput"
          }
        },
        "fileUpload": {
          "id": "ConnectApi.userprofiles.setphotowithattributes.fileupload",
          "type": "var",
          "name": "fileUpload",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fileUpload",
            "textToLower": "fileupload",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fileUpload_-1:0"
          },
          "signature": "ConnectApi.BinaryInput fileUpload",
          "datatype": {
            "id": "ConnectApi.userprofiles.setphotowithattributes.connectapi.binaryinput",
            "nodeType": "datatype",
            "name": "ConnectApi.BinaryInput"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}