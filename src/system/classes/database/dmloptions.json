{
  "id": "Database.dmloptions",
  "type": "class",
  "name": "DMLOptions",
  "namespace": "Database",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "DMLOptions",
    "textToLower": "dmloptions",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_DMLOptions_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Enables you to set options related to DML operations.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_database_dmloptions.htm",
  "classes": {
    "assignmentruleheader": {
      "id": "Database.dmloptions.assignmentruleheader",
      "type": "class",
      "name": "AssignmentRuleHeader",
      "namespace": "Database",
      "startToken": {
        "type": "declaration.entity.name.class",
        "text": "AssignmentRuleHeader",
        "textToLower": "assignmentruleheader",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.class_AssignmentRuleHeader_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "sharingModifier": {
        "type": "keyword.modifier.sharing",
        "text": "without sharing",
        "textToLower": "without sharing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.sharing_without sharing_-1:0"
      },
      "description": "Enables setting assignment rule options.",
      "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Database_AssignmentRuleHeader.htm",
      "classes": {},
      "interfaces": {},
      "enums": {},
      "variables": {
        "assignmentruleid": {
          "id": "Database.dmloptions.assignmentruleheader.assignmentruleid",
          "type": "property",
          "name": "assignmentRuleID",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "assignmentRuleID",
            "textToLower": "assignmentruleid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_assignmentRuleID_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public Id assignmentRuleID {get; set;}",
          "simplifiedSignature": "Id assignmentRuleID { get; set; }",
          "datatype": {
            "id": "Database.dmloptions.assignmentruleheader.assignmentruleid.id",
            "type": "datatype",
            "name": "Id"
          },
          "description": "Specifies the ID of a specific assignment rule to run for the case or lead. The assignment rule can be active or inactive.",
          "getter": {
            "id": "Database.dmloptions.assignmentruleheader.assignmentruleid.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Database.dmloptions.assignmentruleheader.assignmentruleid.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        }
      },
      "methods": {},
      "constructors": {},
      "extendsType": "",
      "implementTypes": [],
      "implements": {}
    },
    "duplicateruleheader": {
      "id": "Database.dmloptions.duplicateruleheader",
      "type": "class",
      "name": "DuplicateRuleHeader",
      "namespace": "Database",
      "startToken": {
        "type": "declaration.entity.name.class",
        "text": "DuplicateRuleHeader",
        "textToLower": "duplicateruleheader",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.class_DuplicateRuleHeader_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "sharingModifier": {
        "type": "keyword.modifier.sharing",
        "text": "without sharing",
        "textToLower": "without sharing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.sharing_without sharing_-1:0"
      },
      "description": "Determines options for using duplicate rules to detect duplicate records. Duplicate rules are part of the Duplicate Management feature.",
      "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Database_DMLOptions_DuplicateRuleHeader.htm",
      "classes": {},
      "interfaces": {},
      "enums": {},
      "variables": {
        "allowsave": {
          "id": "Database.dmloptions.duplicateruleheader.allowsave",
          "type": "property",
          "name": "allowSave",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "allowSave",
            "textToLower": "allowsave",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_allowSave_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public Boolean allowSave {get; set;}",
          "simplifiedSignature": "Boolean allowSave { get; set; }",
          "datatype": {
            "id": "Database.dmloptions.duplicateruleheader.allowsave.boolean",
            "type": "datatype",
            "name": "Boolean"
          },
          "description": "For a duplicate rule, when the Alert option is enabled, bypass alerts and save duplicate records by setting this property to true. Prevent duplicate records from being saved by setting this property to false.",
          "getter": {
            "id": "Database.dmloptions.duplicateruleheader.allowsave.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Database.dmloptions.duplicateruleheader.allowsave.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        }
      },
      "methods": {},
      "constructors": {},
      "extendsType": "",
      "implementTypes": [],
      "implements": {}
    },
    "emailheader": {
      "id": "Database.dmloptions.emailheader",
      "type": "class",
      "name": "EmailHeader",
      "namespace": "Database",
      "startToken": {
        "type": "declaration.entity.name.class",
        "text": "EmailHeader",
        "textToLower": "emailheader",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.class_EmailHeader_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "sharingModifier": {
        "type": "keyword.modifier.sharing",
        "text": "without sharing",
        "textToLower": "without sharing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.sharing_without sharing_-1:0"
      },
      "description": "Enables setting email options.",
      "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Database_EmailHeader.htm",
      "classes": {},
      "interfaces": {},
      "enums": {},
      "variables": {
        "triggerautoresponseemail": {
          "id": "Database.dmloptions.emailheader.triggerautoresponseemail",
          "type": "property",
          "name": "triggerAutoResponseEmail",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "triggerAutoResponseEmail",
            "textToLower": "triggerautoresponseemail",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_triggerAutoResponseEmail_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public Boolean triggerAutoResponseEmail {get; set;}",
          "simplifiedSignature": "Boolean triggerAutoResponseEmail { get; set; }",
          "datatype": {
            "id": "Database.dmloptions.emailheader.triggerautoresponseemail.boolean",
            "type": "datatype",
            "name": "Boolean"
          },
          "description": "Indicates whether to trigger auto-response rules (true) or not (false), for leads and cases.",
          "getter": {
            "id": "Database.dmloptions.emailheader.triggerautoresponseemail.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Database.dmloptions.emailheader.triggerautoresponseemail.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        },
        "triggerotheremail": {
          "id": "Database.dmloptions.emailheader.triggerotheremail",
          "type": "property",
          "name": "triggerOtherEmail",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "triggerOtherEmail",
            "textToLower": "triggerotheremail",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_triggerOtherEmail_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public Boolean triggerOtherEmail {get; set;}",
          "simplifiedSignature": "Boolean triggerOtherEmail { get; set; }",
          "datatype": {
            "id": "Database.dmloptions.emailheader.triggerotheremail.boolean",
            "type": "datatype",
            "name": "Boolean"
          },
          "description": "Indicates whether to trigger email outside the organization (true) or not (false).",
          "getter": {
            "id": "Database.dmloptions.emailheader.triggerotheremail.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Database.dmloptions.emailheader.triggerotheremail.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        }
      },
      "methods": {},
      "constructors": {},
      "extendsType": "",
      "implementTypes": [],
      "implements": {}
    }
  },
  "interfaces": {},
  "enums": {},
  "variables": {
    "allowfieldtruncation": {
      "id": "Database.dmloptions.allowfieldtruncation",
      "type": "property",
      "name": "allowFieldTruncation",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "allowFieldTruncation",
        "textToLower": "allowfieldtruncation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_allowFieldTruncation_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean allowFieldTruncation {get; set;}",
      "simplifiedSignature": "Boolean allowFieldTruncation { get; set; }",
      "datatype": {
        "id": "Database.dmloptions.allowfieldtruncation.boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Specifies the truncation behavior of large strings.",
      "getter": {
        "id": "Database.dmloptions.allowfieldtruncation.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Database.dmloptions.allowfieldtruncation.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "assignmentruleheader": {
      "id": "Database.dmloptions.assignmentruleheader",
      "type": "property",
      "name": "assignmentRuleHeader",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "assignmentRuleHeader",
        "textToLower": "assignmentruleheader",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_assignmentRuleHeader_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Database.DmlOptions.Assignmentruleheader assignmentRuleHeader {get; set;}",
      "simplifiedSignature": "Database.DmlOptions.Assignmentruleheader assignmentRuleHeader { get; set; }",
      "datatype": {
        "id": "Database.dmloptions.assignmentruleheader.database.dmloptions.assignmentruleheader",
        "type": "datatype",
        "name": "Database.DmlOptions.Assignmentruleheader"
      },
      "description": "Specifies the assignment rule to be used when creating a case or lead.",
      "getter": {
        "id": "Database.dmloptions.assignmentruleheader.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Database.dmloptions.assignmentruleheader.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "emailheader": {
      "id": "Database.dmloptions.emailheader",
      "type": "property",
      "name": "emailHeader",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "emailHeader",
        "textToLower": "emailheader",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_emailHeader_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Database.DmlOptions.EmailHeader emailHeader {get; set;}",
      "simplifiedSignature": "Database.DmlOptions.EmailHeader emailHeader { get; set; }",
      "datatype": {
        "id": "Database.dmloptions.emailheader.database.dmloptions.emailheader",
        "type": "datatype",
        "name": "Database.DmlOptions.EmailHeader"
      },
      "description": "Specifies additional information regarding the automatic email that gets sent when an events occurs.",
      "getter": {
        "id": "Database.dmloptions.emailheader.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Database.dmloptions.emailheader.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "localeoptions": {
      "id": "Database.dmloptions.localeoptions",
      "type": "property",
      "name": "localeOptions",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "localeOptions",
        "textToLower": "localeoptions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_localeOptions_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Database.DmlOptions.LocaleOptions localeOptions {get; set;}",
      "simplifiedSignature": "Database.DmlOptions.LocaleOptions localeOptions { get; set; }",
      "datatype": {
        "id": "Database.dmloptions.localeoptions.database.dmloptions.localeoptions",
        "type": "datatype",
        "name": "Database.DmlOptions.LocaleOptions"
      },
      "description": "Specifies the language of any labels that are returned by Apex.",
      "getter": {
        "id": "Database.dmloptions.localeoptions.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Database.dmloptions.localeoptions.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "optallornone": {
      "id": "Database.dmloptions.optallornone",
      "type": "property",
      "name": "optAllOrNone",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "optAllOrNone",
        "textToLower": "optallornone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_optAllOrNone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean optAllOrNone {get; set;}",
      "simplifiedSignature": "Boolean optAllOrNone { get; set; }",
      "datatype": {
        "id": "Database.dmloptions.optallornone.boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Specifies whether the operation allows for partial success.",
      "getter": {
        "id": "Database.dmloptions.optallornone.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Database.dmloptions.optallornone.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {},
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}