{
  "id": "Database.leadconvert",
  "nodeType": "class",
  "name": "LeadConvert",
  "namespace": "Database",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "LeadConvert",
    "textToLower": "leadconvert",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_LeadConvert_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains information used for lead conversion.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_dml_convertLead.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getaccountid()": {
      "id": "Database.leadconvert.method.getaccountid()",
      "nodeType": "method",
      "name": "getAccountId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAccountId",
        "textToLower": "getaccountid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAccountId_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 1,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public ID getAccountId()",
      "overrideSignature": "public override ID getAccountId()",
      "simplifiedSignature": "getAccountId()",
      "datatype": {
        "id": "Database.leadconvert.getaccountid.datatype.ID",
        "nodeType": "datatype",
        "name": "ID",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 9
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:7"
        },
        "parentId": "Database.leadconvert.getaccountid",
        "order": 0,
        "memberOrder": 0,
        "type": "ID"
      },
      "description": "Gets the ID of the account into which the lead will be merged.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getcontactid()": {
      "id": "Database.leadconvert.method.getcontactid()",
      "nodeType": "method",
      "name": "getContactId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getContactId",
        "textToLower": "getcontactid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getContactId_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 2,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public ID getContactId()",
      "overrideSignature": "public override ID getContactId()",
      "simplifiedSignature": "getContactId()",
      "datatype": {
        "id": "Database.leadconvert.getcontactid.datatype.ID",
        "nodeType": "datatype",
        "name": "ID",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 9
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:7"
        },
        "parentId": "Database.leadconvert.getcontactid",
        "order": 0,
        "memberOrder": 0,
        "type": "ID"
      },
      "description": "Gets the ID of the contact into which the lead will be merged.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getconvertedstatus()": {
      "id": "Database.leadconvert.method.getconvertedstatus()",
      "nodeType": "method",
      "name": "getConvertedStatus",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getConvertedStatus",
        "textToLower": "getconvertedstatus",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getConvertedStatus_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 3,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getConvertedStatus()",
      "overrideSignature": "public override String getConvertedStatus()",
      "simplifiedSignature": "getConvertedStatus()",
      "datatype": {
        "id": "Database.leadconvert.getconvertedstatus.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Database.leadconvert.getconvertedstatus",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Gets the lead status value for a converted lead.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getleadid()": {
      "id": "Database.leadconvert.method.getleadid()",
      "nodeType": "method",
      "name": "getLeadID",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLeadID",
        "textToLower": "getleadid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLeadID_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 4,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public ID getLeadID()",
      "overrideSignature": "public override ID getLeadID()",
      "simplifiedSignature": "getLeadID()",
      "datatype": {
        "id": "Database.leadconvert.getleadid.datatype.ID",
        "nodeType": "datatype",
        "name": "ID",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 9
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:7"
        },
        "parentId": "Database.leadconvert.getleadid",
        "order": 0,
        "memberOrder": 0,
        "type": "ID"
      },
      "description": "Gets the ID of the lead to convert.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getopportunityname()": {
      "id": "Database.leadconvert.method.getopportunityname()",
      "nodeType": "method",
      "name": "getOpportunityName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getOpportunityName",
        "textToLower": "getopportunityname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getOpportunityName_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 5,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getOpportunityName()",
      "overrideSignature": "public override String getOpportunityName()",
      "simplifiedSignature": "getOpportunityName()",
      "datatype": {
        "id": "Database.leadconvert.getopportunityname.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Database.leadconvert.getopportunityname",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Gets the name of the opportunity to create.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getownerid()": {
      "id": "Database.leadconvert.method.getownerid()",
      "nodeType": "method",
      "name": "getOwnerID",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getOwnerID",
        "textToLower": "getownerid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getOwnerID_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 6,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public ID getOwnerID()",
      "overrideSignature": "public override ID getOwnerID()",
      "simplifiedSignature": "getOwnerID()",
      "datatype": {
        "id": "Database.leadconvert.getownerid.datatype.ID",
        "nodeType": "datatype",
        "name": "ID",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 9
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:7"
        },
        "parentId": "Database.leadconvert.getownerid",
        "order": 0,
        "memberOrder": 0,
        "type": "ID"
      },
      "description": "Gets the ID of the person to own any newly created account, contact, and opportunity.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isdonotcreateopportunity()": {
      "id": "Database.leadconvert.method.isdonotcreateopportunity()",
      "nodeType": "method",
      "name": "isDoNotCreateOpportunity",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDoNotCreateOpportunity",
        "textToLower": "isdonotcreateopportunity",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDoNotCreateOpportunity_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 7,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isDoNotCreateOpportunity()",
      "overrideSignature": "public override Boolean isDoNotCreateOpportunity()",
      "simplifiedSignature": "isDoNotCreateOpportunity()",
      "datatype": {
        "id": "Database.leadconvert.isdonotcreateopportunity.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Database.leadconvert.isdonotcreateopportunity",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Indicates whether an Opportunity is created during lead conversion (false, the default) or not (true).",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isoverwriteleadsource()": {
      "id": "Database.leadconvert.method.isoverwriteleadsource()",
      "nodeType": "method",
      "name": "isOverWriteLeadSource",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isOverWriteLeadSource",
        "textToLower": "isoverwriteleadsource",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isOverWriteLeadSource_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 8,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isOverWriteLeadSource()",
      "overrideSignature": "public override Boolean isOverWriteLeadSource()",
      "simplifiedSignature": "isOverWriteLeadSource()",
      "datatype": {
        "id": "Database.leadconvert.isoverwriteleadsource.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Database.leadconvert.isoverwriteleadsource",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Indicates whether the LeadSource field on the target Contact object is overwritten with the contents of the LeadSource field in the source Lead object (true), or not (false, the default).",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "issendnotificationemail()": {
      "id": "Database.leadconvert.method.issendnotificationemail()",
      "nodeType": "method",
      "name": "isSendNotificationEmail",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSendNotificationEmail",
        "textToLower": "issendnotificationemail",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSendNotificationEmail_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 9,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isSendNotificationEmail()",
      "overrideSignature": "public override Boolean isSendNotificationEmail()",
      "simplifiedSignature": "isSendNotificationEmail()",
      "datatype": {
        "id": "Database.leadconvert.issendnotificationemail.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Database.leadconvert.issendnotificationemail",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Indicates whether a notification email is sent to the owner specified by setOwnerId (true) or not (false, the default).",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "setaccountid(id)": {
      "id": "Database.leadconvert.method.setaccountid(id)",
      "nodeType": "method",
      "name": "setAccountId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAccountId",
        "textToLower": "setaccountid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAccountId_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 10,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setAccountId(ID accountId)",
      "overrideSignature": "public override Void setAccountId(ID accountId)",
      "simplifiedSignature": "setAccountId(ID)",
      "datatype": {
        "id": "Database.leadconvert.setaccountid.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setaccountid",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the ID of the account into which the lead is merged. This value is required only when updating an existing account, including person accounts.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "accountid": {
          "id": "Database.leadconvert.method.setaccountid(id).varParam.accountid",
          "nodeType": "variable",
          "name": "accountId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accountId",
            "textToLower": "accountid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 37
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_accountId_0:28"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "accountId",
            "textToLower": "accountid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 37
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_accountId_0:28"
          },
          "parentId": "Database.leadconvert.method.setaccountid(id)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setaccountid.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 25
                },
                "end": {
                  "line": 0,
                  "character": 27
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:25"
            },
            "parentId": "Database.leadconvert.setaccountid",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setcontactid(id)": {
      "id": "Database.leadconvert.method.setcontactid(id)",
      "nodeType": "method",
      "name": "setContactId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setContactId",
        "textToLower": "setcontactid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setContactId_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 11,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setContactId(ID contactId)",
      "overrideSignature": "public override Void setContactId(ID contactId)",
      "simplifiedSignature": "setContactId(ID)",
      "datatype": {
        "id": "Database.leadconvert.setcontactid.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setcontactid",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the ID of the contact into which the lead will be merged (this contact must be associated with the account specified with setAccountId, and setAccountId must be specified). This value is required only when updating an existing contact.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "contactid": {
          "id": "Database.leadconvert.method.setcontactid(id).varParam.contactid",
          "nodeType": "variable",
          "name": "contactId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contactId",
            "textToLower": "contactid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 37
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contactId_0:28"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contactId",
            "textToLower": "contactid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 37
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contactId_0:28"
          },
          "parentId": "Database.leadconvert.method.setcontactid(id)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setcontactid.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 25
                },
                "end": {
                  "line": 0,
                  "character": 27
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:25"
            },
            "parentId": "Database.leadconvert.setcontactid",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setconvertedstatus(string)": {
      "id": "Database.leadconvert.method.setconvertedstatus(string)",
      "nodeType": "method",
      "name": "setConvertedStatus",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setConvertedStatus",
        "textToLower": "setconvertedstatus",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setConvertedStatus_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 12,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setConvertedStatus(String status)",
      "overrideSignature": "public override Void setConvertedStatus(String status)",
      "simplifiedSignature": "setConvertedStatus(String)",
      "datatype": {
        "id": "Database.leadconvert.setconvertedstatus.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setconvertedstatus",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the lead status value for a converted lead. This field is required.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "status": {
          "id": "Database.leadconvert.method.setconvertedstatus(string).varParam.status",
          "nodeType": "variable",
          "name": "status",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "status",
            "textToLower": "status",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_status_0:38"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "status",
            "textToLower": "status",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 44
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_status_0:38"
          },
          "parentId": "Database.leadconvert.method.setconvertedstatus(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setconvertedstatus.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 31
                },
                "end": {
                  "line": 0,
                  "character": 37
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:31"
            },
            "parentId": "Database.leadconvert.setconvertedstatus",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setdonotcreateopportunity(boolean)": {
      "id": "Database.leadconvert.method.setdonotcreateopportunity(boolean)",
      "nodeType": "method",
      "name": "setDoNotCreateOpportunity",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDoNotCreateOpportunity",
        "textToLower": "setdonotcreateopportunity",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDoNotCreateOpportunity_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 13,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setDoNotCreateOpportunity(Boolean createOpportunity)",
      "overrideSignature": "public override Void setDoNotCreateOpportunity(Boolean createOpportunity)",
      "simplifiedSignature": "setDoNotCreateOpportunity(Boolean)",
      "datatype": {
        "id": "Database.leadconvert.setdonotcreateopportunity.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setdonotcreateopportunity",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Specifies whether to create an opportunity during lead conversion. The default value is false: opportunities are created by default. Set this flag to true only if you do not want to create an opportunity from the lead.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "createopportunity": {
          "id": "Database.leadconvert.method.setdonotcreateopportunity(boolean).varParam.createopportunity",
          "nodeType": "variable",
          "name": "createOpportunity",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "createOpportunity",
            "textToLower": "createopportunity",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_createOpportunity_0:46"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "createOpportunity",
            "textToLower": "createopportunity",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_createOpportunity_0:46"
          },
          "parentId": "Database.leadconvert.method.setdonotcreateopportunity(boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setdonotcreateopportunity.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 38
                },
                "end": {
                  "line": 0,
                  "character": 45
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:38"
            },
            "parentId": "Database.leadconvert.setdonotcreateopportunity",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setleadid(id)": {
      "id": "Database.leadconvert.method.setleadid(id)",
      "nodeType": "method",
      "name": "setLeadId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setLeadId",
        "textToLower": "setleadid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setLeadId_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 14,
      "memberOrder": 15,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setLeadId(ID leadId)",
      "overrideSignature": "public override Void setLeadId(ID leadId)",
      "simplifiedSignature": "setLeadId(ID)",
      "datatype": {
        "id": "Database.leadconvert.setleadid.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setleadid",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the ID of the lead to convert. This field is required.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "leadid": {
          "id": "Database.leadconvert.method.setleadid(id).varParam.leadid",
          "nodeType": "variable",
          "name": "leadId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadId",
            "textToLower": "leadid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 25
              },
              "end": {
                "line": 0,
                "character": 31
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_leadId_0:25"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadId",
            "textToLower": "leadid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 25
              },
              "end": {
                "line": 0,
                "character": 31
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_leadId_0:25"
          },
          "parentId": "Database.leadconvert.method.setleadid(id)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setleadid.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 22
                },
                "end": {
                  "line": 0,
                  "character": 24
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:22"
            },
            "parentId": "Database.leadconvert.setleadid",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setopportunityid(id)": {
      "id": "Database.leadconvert.method.setopportunityid(id)",
      "nodeType": "method",
      "name": "setOpportunityId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setOpportunityId",
        "textToLower": "setopportunityid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setOpportunityId_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 15,
      "memberOrder": 16,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setOpportunityId(ID opportunityId)",
      "overrideSignature": "public override Void setOpportunityId(ID opportunityId)",
      "simplifiedSignature": "setOpportunityId(ID)",
      "datatype": {
        "id": "Database.leadconvert.setopportunityid.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setopportunityid",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the ID of the opportunity into which the lead is merged. This value is required only when updating an existing opportunity.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "opportunityid": {
          "id": "Database.leadconvert.method.setopportunityid(id).varParam.opportunityid",
          "nodeType": "variable",
          "name": "opportunityId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "opportunityId",
            "textToLower": "opportunityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_opportunityId_0:32"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "opportunityId",
            "textToLower": "opportunityid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_opportunityId_0:32"
          },
          "parentId": "Database.leadconvert.method.setopportunityid(id)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setopportunityid.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 29
                },
                "end": {
                  "line": 0,
                  "character": 31
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:29"
            },
            "parentId": "Database.leadconvert.setopportunityid",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setopportunityname(string)": {
      "id": "Database.leadconvert.method.setopportunityname(string)",
      "nodeType": "method",
      "name": "setOpportunityName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setOpportunityName",
        "textToLower": "setopportunityname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setOpportunityName_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 16,
      "memberOrder": 17,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setOpportunityName(String opportunityName)",
      "overrideSignature": "public override Void setOpportunityName(String opportunityName)",
      "simplifiedSignature": "setOpportunityName(String)",
      "datatype": {
        "id": "Database.leadconvert.setopportunityname.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setopportunityname",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the name of the opportunity to create. If no name is specified, this value defaults to the company name of the lead.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "opportunityname": {
          "id": "Database.leadconvert.method.setopportunityname(string).varParam.opportunityname",
          "nodeType": "variable",
          "name": "opportunityName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "opportunityName",
            "textToLower": "opportunityname",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 53
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_opportunityName_0:38"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "opportunityName",
            "textToLower": "opportunityname",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 38
              },
              "end": {
                "line": 0,
                "character": 53
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_opportunityName_0:38"
          },
          "parentId": "Database.leadconvert.method.setopportunityname(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setopportunityname.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 31
                },
                "end": {
                  "line": 0,
                  "character": 37
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:31"
            },
            "parentId": "Database.leadconvert.setopportunityname",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setoverwriteleadsource(boolean)": {
      "id": "Database.leadconvert.method.setoverwriteleadsource(boolean)",
      "nodeType": "method",
      "name": "setOverwriteLeadSource",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setOverwriteLeadSource",
        "textToLower": "setoverwriteleadsource",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setOverwriteLeadSource_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 17,
      "memberOrder": 18,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setOverwriteLeadSource(Boolean overwriteLeadSource)",
      "overrideSignature": "public override Void setOverwriteLeadSource(Boolean overwriteLeadSource)",
      "simplifiedSignature": "setOverwriteLeadSource(Boolean)",
      "datatype": {
        "id": "Database.leadconvert.setoverwriteleadsource.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setoverwriteleadsource",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Specifies whether to overwrite the LeadSource field on the target contact object with the contents of the LeadSource field in the source lead object. The default value is false, to not overwrite the field. If you specify this as true, you must also specify setContactId for the target contact.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "overwriteleadsource": {
          "id": "Database.leadconvert.method.setoverwriteleadsource(boolean).varParam.overwriteleadsource",
          "nodeType": "variable",
          "name": "overwriteLeadSource",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "overwriteLeadSource",
            "textToLower": "overwriteleadsource",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 43
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_overwriteLeadSource_0:43"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "overwriteLeadSource",
            "textToLower": "overwriteleadsource",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 43
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_overwriteLeadSource_0:43"
          },
          "parentId": "Database.leadconvert.method.setoverwriteleadsource(boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setoverwriteleadsource.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 35
                },
                "end": {
                  "line": 0,
                  "character": 42
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:35"
            },
            "parentId": "Database.leadconvert.setoverwriteleadsource",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setownerid(id)": {
      "id": "Database.leadconvert.method.setownerid(id)",
      "nodeType": "method",
      "name": "setOwnerId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setOwnerId",
        "textToLower": "setownerid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setOwnerId_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 18,
      "memberOrder": 19,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setOwnerId(ID ownerId)",
      "overrideSignature": "public override Void setOwnerId(ID ownerId)",
      "simplifiedSignature": "setOwnerId(ID)",
      "datatype": {
        "id": "Database.leadconvert.setownerid.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setownerid",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Specifies the ID of the person to own any newly created account, contact, and opportunity. If the application does not specify this value, the owner of the new object will be the owner of the lead.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "ownerid": {
          "id": "Database.leadconvert.method.setownerid(id).varParam.ownerid",
          "nodeType": "variable",
          "name": "ownerId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "ownerId",
            "textToLower": "ownerid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 33
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_ownerId_0:26"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "ownerId",
            "textToLower": "ownerid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 26
              },
              "end": {
                "line": 0,
                "character": 33
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_ownerId_0:26"
          },
          "parentId": "Database.leadconvert.method.setownerid(id)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setownerid.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 23
                },
                "end": {
                  "line": 0,
                  "character": 25
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:23"
            },
            "parentId": "Database.leadconvert.setownerid",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setsendnotificationemail(boolean)": {
      "id": "Database.leadconvert.method.setsendnotificationemail(boolean)",
      "nodeType": "method",
      "name": "setSendNotificationEmail",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setSendNotificationEmail",
        "textToLower": "setsendnotificationemail",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setSendNotificationEmail_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 19,
      "memberOrder": 20,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void setSendNotificationEmail(Boolean sendEmail)",
      "overrideSignature": "public override Void setSendNotificationEmail(Boolean sendEmail)",
      "simplifiedSignature": "setSendNotificationEmail(Boolean)",
      "datatype": {
        "id": "Database.leadconvert.setsendnotificationemail.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "Database.leadconvert.setsendnotificationemail",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Specifies whether to send a notification email to the owner specified by setOwnerId. The default value is false, that is, to not send email.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {
        "sendemail": {
          "id": "Database.leadconvert.method.setsendnotificationemail(boolean).varParam.sendemail",
          "nodeType": "variable",
          "name": "sendEmail",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sendEmail",
            "textToLower": "sendemail",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 45
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sendEmail_0:45"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sendEmail",
            "textToLower": "sendemail",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 45
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sendEmail_0:45"
          },
          "parentId": "Database.leadconvert.method.setsendnotificationemail(boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "Database.leadconvert.setsendnotificationemail.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 37
                },
                "end": {
                  "line": 0,
                  "character": 44
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:37"
            },
            "parentId": "Database.leadconvert.setsendnotificationemail",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {
    "leadconvert()": {
      "id": "Database.leadconvert.method.leadconvert()",
      "nodeType": "constructor",
      "name": "LeadConvert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "LeadConvert",
        "textToLower": "leadconvert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_LeadConvert_-1:0"
      },
      "parentId": "Database.leadconvert",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public LeadConvert()",
      "overrideSignature": "public override LeadConvert()",
      "simplifiedSignature": "LeadConvert()",
      "description": "Creates a new instance of the Database.LeadConvert class.",
      "parentName": "LeadConvert",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 20,
  "queries": []
}