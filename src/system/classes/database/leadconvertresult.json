{
  "id": "Database.leadconvertresult",
  "type": "class",
  "name": "LeadConvertResult",
  "namespace": "Database",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "LeadConvertResult",
    "textToLower": "leadconvertresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_LeadConvertResult_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "The result of a lead conversion.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_database_leadconvertresult.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getaccountid()": {
      "id": "Database.leadconvertresult.getaccountid",
      "type": "method",
      "name": "getAccountId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAccountId",
        "textToLower": "getaccountid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAccountId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ID getAccountId()",
      "simplifiedSignature": "getAccountId()",
      "datatype": {
        "id": "Database.leadconvertresult.getaccountid.ID",
        "type": "datatype",
        "name": "ID"
      },
      "description": "The ID of the new account (if a new account was specified) or the ID of the account specified when convertLead was invoked.",
      "variables": {}
    },
    "getcontactid()": {
      "id": "Database.leadconvertresult.getcontactid",
      "type": "method",
      "name": "getContactId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getContactId",
        "textToLower": "getcontactid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getContactId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ID getContactId()",
      "simplifiedSignature": "getContactId()",
      "datatype": {
        "id": "Database.leadconvertresult.getcontactid.ID",
        "type": "datatype",
        "name": "ID"
      },
      "description": "The ID of the new contact (if a new contact was specified) or the ID of the contact specified when convertLead was invoked.",
      "variables": {}
    },
    "geterrors()": {
      "id": "Database.leadconvertresult.geterrors",
      "type": "method",
      "name": "getErrors",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getErrors",
        "textToLower": "geterrors",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getErrors_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Database.Error[] getErrors()",
      "simplifiedSignature": "getErrors()",
      "datatype": {
        "id": "Database.leadconvertresult.geterrors.Database.Error[]",
        "type": "datatype",
        "name": "Database.Error[]"
      },
      "description": "If an error occurred, an array of one or more database error objects providing the error code and description.",
      "variables": {}
    },
    "getleadid()": {
      "id": "Database.leadconvertresult.getleadid",
      "type": "method",
      "name": "getLeadId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLeadId",
        "textToLower": "getleadid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLeadId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ID getLeadId()",
      "simplifiedSignature": "getLeadId()",
      "datatype": {
        "id": "Database.leadconvertresult.getleadid.ID",
        "type": "datatype",
        "name": "ID"
      },
      "description": "The ID of the converted lead.",
      "variables": {}
    },
    "getopportunityid()": {
      "id": "Database.leadconvertresult.getopportunityid",
      "type": "method",
      "name": "getOpportunityId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getOpportunityId",
        "textToLower": "getopportunityid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getOpportunityId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ID getOpportunityId()",
      "simplifiedSignature": "getOpportunityId()",
      "datatype": {
        "id": "Database.leadconvertresult.getopportunityid.ID",
        "type": "datatype",
        "name": "ID"
      },
      "description": "The ID of the new opportunity, if one was created when convertLead was invoked.",
      "variables": {}
    },
    "issuccess()": {
      "id": "Database.leadconvertresult.issuccess",
      "type": "method",
      "name": "isSuccess",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSuccess",
        "textToLower": "issuccess",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSuccess_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isSuccess()",
      "simplifiedSignature": "isSuccess()",
      "datatype": {
        "id": "Database.leadconvertresult.issuccess.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "A Boolean value that is set to true if the DML operation was successful for this object, false otherwise",
      "variables": {}
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}