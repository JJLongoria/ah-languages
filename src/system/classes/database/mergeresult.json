{
  "id": "Database.mergeresult",
  "nodeType": "class",
  "name": "MergeResult",
  "namespace": "Database",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "MergeResult",
    "textToLower": "mergeresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_MergeResult_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains the result of a merge Database method operation.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_database_mergeresult.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "geterrors()": {
      "id": "Database.mergeresult.geterrors",
      "nodeType": "method",
      "name": "getErrors",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getErrors",
        "textToLower": "geterrors",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getErrors_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Database.Error> getErrors()",
      "simplifiedSignature": "getErrors()",
      "datatype": {
        "id": "Database.mergeresult.geterrors.List<Database.Error>",
        "nodeType": "datatype",
        "name": "List<Database.Error>"
      },
      "description": "Returns a list of Database.Error objects representing the errors encountered, if any, during a merge operation using the Database.merge method. If no error occurred, returns null.",
      "params": {}
    },
    "getid()": {
      "id": "Database.mergeresult.getid",
      "nodeType": "method",
      "name": "getId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getId",
        "textToLower": "getid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ID getId()",
      "simplifiedSignature": "getId()",
      "datatype": {
        "id": "Database.mergeresult.getid.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Returns the ID of the master record into which other records were merged.",
      "params": {}
    },
    "getmergedrecordids()": {
      "id": "Database.mergeresult.getmergedrecordids",
      "nodeType": "method",
      "name": "getMergedRecordIds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getMergedRecordIds",
        "textToLower": "getmergedrecordids",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getMergedRecordIds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<String> getMergedRecordIds()",
      "simplifiedSignature": "getMergedRecordIds()",
      "datatype": {
        "id": "Database.mergeresult.getmergedrecordids.List<String>",
        "nodeType": "datatype",
        "name": "List<String>"
      },
      "description": "Returns the IDs of the records merged into the master record.",
      "params": {}
    },
    "getupdatedrelatedids()": {
      "id": "Database.mergeresult.getupdatedrelatedids",
      "nodeType": "method",
      "name": "getUpdatedRelatedIds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUpdatedRelatedIds",
        "textToLower": "getupdatedrelatedids",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUpdatedRelatedIds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<String> getUpdatedRelatedIds()",
      "simplifiedSignature": "getUpdatedRelatedIds()",
      "datatype": {
        "id": "Database.mergeresult.getupdatedrelatedids.List<String>",
        "nodeType": "datatype",
        "name": "List<String>"
      },
      "description": "Returns the IDs of all related records that were reparented as a result of the merge that are viewable by the user sending the merge call.",
      "params": {}
    },
    "issuccess()": {
      "id": "Database.mergeresult.issuccess",
      "nodeType": "method",
      "name": "isSuccess",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSuccess",
        "textToLower": "issuccess",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSuccess_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isSuccess()",
      "simplifiedSignature": "isSuccess()",
      "datatype": {
        "id": "Database.mergeresult.issuccess.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the merge was successful (true) or not (false).",
      "params": {}
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}