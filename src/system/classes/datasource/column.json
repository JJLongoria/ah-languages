{
  "id": "Datasource.column",
  "type": "class",
  "name": "Column",
  "namespace": "Datasource",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Column",
    "textToLower": "column",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Column_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Describes a column on a DataSource.Table. This class extends the DataSourceUtil class and inherits its methods.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_DataSource_Column.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "decimalplaces": {
      "id": "Datasource.column.decimalplaces",
      "type": "property",
      "name": "decimalPlaces",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "decimalPlaces",
        "textToLower": "decimalplaces",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_decimalPlaces_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer decimalPlaces {get; set;}",
      "simplifiedSignature": "Integer decimalPlaces { get; set; }",
      "datatype": {
        "id": "Datasource.column.decimalplaces.integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "If the data type is numeric, the number of decimal places to the right of the decimal point.",
      "getter": {
        "id": "Datasource.column.decimalplaces.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.decimalplaces.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "description": {
      "id": "Datasource.column.description",
      "type": "property",
      "name": "description",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "description",
        "textToLower": "description",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_description_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String description {get; set;}",
      "simplifiedSignature": "String description { get; set; }",
      "datatype": {
        "id": "Datasource.column.description.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "Description of what the column represents.",
      "getter": {
        "id": "Datasource.column.description.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.description.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "filterable": {
      "id": "Datasource.column.filterable",
      "type": "property",
      "name": "filterable",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "filterable",
        "textToLower": "filterable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_filterable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean filterable {get; set;}",
      "simplifiedSignature": "Boolean filterable { get; set; }",
      "datatype": {
        "id": "Datasource.column.filterable.boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Whether a result set can be filtered based on the values of the column.",
      "getter": {
        "id": "Datasource.column.filterable.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.filterable.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "label": {
      "id": "Datasource.column.label",
      "type": "property",
      "name": "label",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "label",
        "textToLower": "label",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_label_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String label {get; set;}",
      "simplifiedSignature": "String label { get; set; }",
      "datatype": {
        "id": "Datasource.column.label.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "User-friendly name for the column that appears in the Salesforce user interface.",
      "getter": {
        "id": "Datasource.column.label.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.label.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "length": {
      "id": "Datasource.column.length",
      "type": "property",
      "name": "length",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "length",
        "textToLower": "length",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_length_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer length {get; set;}",
      "simplifiedSignature": "Integer length { get; set; }",
      "datatype": {
        "id": "Datasource.column.length.integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "If the column is a string data type, the number of characters in the column. If the column is a numeric data type, the total number of digits on both sides of the decimal point, but excluding the decimal point.",
      "getter": {
        "id": "Datasource.column.length.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.length.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "name": {
      "id": "Datasource.column.name",
      "type": "property",
      "name": "name",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "name",
        "textToLower": "name",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_name_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String name {get; set;}",
      "simplifiedSignature": "String name { get; set; }",
      "datatype": {
        "id": "Datasource.column.name.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "Name of the column in the external system.",
      "getter": {
        "id": "Datasource.column.name.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.name.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "referencetargetfield": {
      "id": "Datasource.column.referencetargetfield",
      "type": "property",
      "name": "referenceTargetField",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "referenceTargetField",
        "textToLower": "referencetargetfield",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_referenceTargetField_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String referenceTargetField {get; set;}",
      "simplifiedSignature": "String referenceTargetField { get; set; }",
      "datatype": {
        "id": "Datasource.column.referencetargetfield.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "API name of the custom field on the parent object whose values are compared against this column’s values. Matching values identify related records in an indirect lookup relationship. Applies only when the column’s data type is INDIRECT_LOOKUP_TYPE. For other data types, this value is ignored.",
      "getter": {
        "id": "Datasource.column.referencetargetfield.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.referencetargetfield.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "referenceto": {
      "id": "Datasource.column.referenceto",
      "type": "property",
      "name": "referenceTo",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "referenceTo",
        "textToLower": "referenceto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_referenceTo_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String referenceTo {get; set;}",
      "simplifiedSignature": "String referenceTo { get; set; }",
      "datatype": {
        "id": "Datasource.column.referenceto.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "API name of the parent object in the relationship that’s represented by this column. Applies only when the column’s data type is LOOKUP_TYPE, EXTERNAL_LOOKUP_TYPE, or INDIRECT_LOOKUP_TYPE. For other data types, this value is ignored.",
      "getter": {
        "id": "Datasource.column.referenceto.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.referenceto.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "sortable": {
      "id": "Datasource.column.sortable",
      "type": "property",
      "name": "sortable",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "sortable",
        "textToLower": "sortable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_sortable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean sortable {get; set;}",
      "simplifiedSignature": "Boolean sortable { get; set; }",
      "datatype": {
        "id": "Datasource.column.sortable.boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Whether a result set can be sorted based on the values of the column via an ORDER BY clause.",
      "getter": {
        "id": "Datasource.column.sortable.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.sortable.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "type": {
      "id": "Datasource.column.type",
      "type": "property",
      "name": "type",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "type",
        "textToLower": "type",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_type_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public DataSource.DataType type {get; set;}",
      "simplifiedSignature": "DataSource.DataType type { get; set; }",
      "datatype": {
        "id": "Datasource.column.type.datasource.datatype",
        "type": "datatype",
        "name": "DataSource.DataType"
      },
      "description": "Data type of the column.",
      "getter": {
        "id": "Datasource.column.type.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.column.type.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {
    "boolean(string)": {
      "id": "Datasource.column.boolean",
      "type": "method",
      "name": "boolean",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "boolean",
        "textToLower": "boolean",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_boolean_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column boolean(String name)",
      "simplifiedSignature": "boolean(String)",
      "datatype": {
        "id": "Datasource.column.boolean.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type BOOLEAN_TYPE.",
      "variables": {
        "name": {
          "id": "Datasource.column.boolean.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.boolean.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "externallookup(string,string)": {
      "id": "Datasource.column.externallookup",
      "type": "method",
      "name": "externalLookup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "externalLookup",
        "textToLower": "externallookup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_externalLookup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column externalLookup(String name, String domain)",
      "simplifiedSignature": "externalLookup(String,String)",
      "datatype": {
        "id": "Datasource.column.externallookup.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type EXTERNAL_LOOKUP_TYPE.",
      "variables": {
        "name": {
          "id": "Datasource.column.externallookup.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.externallookup.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "domain": {
          "id": "Datasource.column.externallookup.domain",
          "type": "var",
          "name": "domain",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "domain",
            "textToLower": "domain",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_domain_-1:0"
          },
          "signature": "String domain",
          "datatype": {
            "id": "Datasource.column.externallookup.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "get(string,string,string,boolean,boolean,datasource.datatype,integer,integer,string,string)": {
      "id": "Datasource.column.get",
      "type": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column get(String name, String label, String description, Boolean isSortable, Boolean isFilterable, DataSource.DataType type, Integer length, Integer decimalPlaces, String referenceTo, String referenceTargetField)",
      "simplifiedSignature": "get(String,String,String,Boolean,Boolean,DataSource.DataType,Integer,Integer,String,String)",
      "datatype": {
        "id": "Datasource.column.get.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column with the ten specified Column property values.",
      "variables": {
        "name": {
          "id": "Datasource.column.get.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "label": {
          "id": "Datasource.column.get.label",
          "type": "var",
          "name": "label",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "label",
            "textToLower": "label",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_label_-1:0"
          },
          "signature": "String label",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "description": {
          "id": "Datasource.column.get.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "isSortable": {
          "id": "Datasource.column.get.issortable",
          "type": "var",
          "name": "isSortable",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isSortable",
            "textToLower": "issortable",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isSortable_-1:0"
          },
          "signature": "Boolean isSortable",
          "datatype": {
            "id": "Datasource.column.get.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "isFilterable": {
          "id": "Datasource.column.get.isfilterable",
          "type": "var",
          "name": "isFilterable",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isFilterable",
            "textToLower": "isfilterable",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isFilterable_-1:0"
          },
          "signature": "Boolean isFilterable",
          "datatype": {
            "id": "Datasource.column.get.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "type": {
          "id": "Datasource.column.get.type",
          "type": "var",
          "name": "type",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "type",
            "textToLower": "type",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_type_-1:0"
          },
          "signature": "DataSource.DataType type",
          "datatype": {
            "id": "Datasource.column.get.datasource.datatype",
            "type": "datatype",
            "name": "DataSource.DataType"
          }
        },
        "length": {
          "id": "Datasource.column.get.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.get.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "decimalPlaces": {
          "id": "Datasource.column.get.decimalplaces",
          "type": "var",
          "name": "decimalPlaces",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalPlaces",
            "textToLower": "decimalplaces",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalPlaces_-1:0"
          },
          "signature": "Integer decimalPlaces",
          "datatype": {
            "id": "Datasource.column.get.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "referenceTo": {
          "id": "Datasource.column.get.referenceto",
          "type": "var",
          "name": "referenceTo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "referenceTo",
            "textToLower": "referenceto",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_referenceTo_-1:0"
          },
          "signature": "String referenceTo",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "referenceTargetField": {
          "id": "Datasource.column.get.referencetargetfield",
          "type": "var",
          "name": "referenceTargetField",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "referenceTargetField",
            "textToLower": "referencetargetfield",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_referenceTargetField_-1:0"
          },
          "signature": "String referenceTargetField",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "get(string,string,string,boolean,boolean,datasource.datatype,integer,integer)": {
      "id": "Datasource.column.get",
      "type": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column get(String name, String label, String description, Boolean isSortable, Boolean isFilterable, DataSource.DataType type, Integer length, Integer decimalPlaces)",
      "simplifiedSignature": "get(String,String,String,Boolean,Boolean,DataSource.DataType,Integer,Integer)",
      "datatype": {
        "id": "Datasource.column.get.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column with the eight specified Column property values.",
      "variables": {
        "name": {
          "id": "Datasource.column.get.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "label": {
          "id": "Datasource.column.get.label",
          "type": "var",
          "name": "label",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "label",
            "textToLower": "label",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_label_-1:0"
          },
          "signature": "String label",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "description": {
          "id": "Datasource.column.get.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "isSortable": {
          "id": "Datasource.column.get.issortable",
          "type": "var",
          "name": "isSortable",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isSortable",
            "textToLower": "issortable",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isSortable_-1:0"
          },
          "signature": "Boolean isSortable",
          "datatype": {
            "id": "Datasource.column.get.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "isFilterable": {
          "id": "Datasource.column.get.isfilterable",
          "type": "var",
          "name": "isFilterable",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isFilterable",
            "textToLower": "isfilterable",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isFilterable_-1:0"
          },
          "signature": "Boolean isFilterable",
          "datatype": {
            "id": "Datasource.column.get.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "type": {
          "id": "Datasource.column.get.type",
          "type": "var",
          "name": "type",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "type",
            "textToLower": "type",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_type_-1:0"
          },
          "signature": "DataSource.DataType type",
          "datatype": {
            "id": "Datasource.column.get.datasource.datatype",
            "type": "datatype",
            "name": "DataSource.DataType"
          }
        },
        "length": {
          "id": "Datasource.column.get.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.get.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "decimalPlaces": {
          "id": "Datasource.column.get.decimalplaces",
          "type": "var",
          "name": "decimalPlaces",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalPlaces",
            "textToLower": "decimalplaces",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalPlaces_-1:0"
          },
          "signature": "Integer decimalPlaces",
          "datatype": {
            "id": "Datasource.column.get.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "get(string,string,string,boolean,boolean,datasource.datatype,integer)": {
      "id": "Datasource.column.get",
      "type": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column get(String name, String label, String description, Boolean isSortable, Boolean isFilterable, DataSource.DataType type, Integer length)",
      "simplifiedSignature": "get(String,String,String,Boolean,Boolean,DataSource.DataType,Integer)",
      "datatype": {
        "id": "Datasource.column.get.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column with the seven specified Column property values.",
      "variables": {
        "name": {
          "id": "Datasource.column.get.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "label": {
          "id": "Datasource.column.get.label",
          "type": "var",
          "name": "label",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "label",
            "textToLower": "label",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_label_-1:0"
          },
          "signature": "String label",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "description": {
          "id": "Datasource.column.get.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "Datasource.column.get.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "isSortable": {
          "id": "Datasource.column.get.issortable",
          "type": "var",
          "name": "isSortable",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isSortable",
            "textToLower": "issortable",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isSortable_-1:0"
          },
          "signature": "Boolean isSortable",
          "datatype": {
            "id": "Datasource.column.get.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "isFilterable": {
          "id": "Datasource.column.get.isfilterable",
          "type": "var",
          "name": "isFilterable",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isFilterable",
            "textToLower": "isfilterable",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isFilterable_-1:0"
          },
          "signature": "Boolean isFilterable",
          "datatype": {
            "id": "Datasource.column.get.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        },
        "type": {
          "id": "Datasource.column.get.type",
          "type": "var",
          "name": "type",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "type",
            "textToLower": "type",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_type_-1:0"
          },
          "signature": "DataSource.DataType type",
          "datatype": {
            "id": "Datasource.column.get.datasource.datatype",
            "type": "datatype",
            "name": "DataSource.DataType"
          }
        },
        "length": {
          "id": "Datasource.column.get.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.get.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "indirectlookup(string,string,string)": {
      "id": "Datasource.column.indirectlookup",
      "type": "method",
      "name": "indirectLookup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indirectLookup",
        "textToLower": "indirectlookup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indirectLookup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column indirectLookup(String name, String domain, String targetField)",
      "simplifiedSignature": "indirectLookup(String,String,String)",
      "datatype": {
        "id": "Datasource.column.indirectlookup.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type INDIRECT_LOOKUP_TYPE.",
      "variables": {
        "name": {
          "id": "Datasource.column.indirectlookup.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.indirectlookup.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "domain": {
          "id": "Datasource.column.indirectlookup.domain",
          "type": "var",
          "name": "domain",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "domain",
            "textToLower": "domain",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_domain_-1:0"
          },
          "signature": "String domain",
          "datatype": {
            "id": "Datasource.column.indirectlookup.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "targetField": {
          "id": "Datasource.column.indirectlookup.targetfield",
          "type": "var",
          "name": "targetField",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "targetField",
            "textToLower": "targetfield",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_targetField_-1:0"
          },
          "signature": "String targetField",
          "datatype": {
            "id": "Datasource.column.indirectlookup.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "integer(string,integer)": {
      "id": "Datasource.column.integer",
      "type": "method",
      "name": "integer",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "integer",
        "textToLower": "integer",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_integer_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column integer(String name, Integer length)",
      "simplifiedSignature": "integer(String,Integer)",
      "datatype": {
        "id": "Datasource.column.integer.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new numeric column with no decimal places using the specified name and length.",
      "variables": {
        "name": {
          "id": "Datasource.column.integer.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.integer.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "length": {
          "id": "Datasource.column.integer.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.integer.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "lookup(string,string)": {
      "id": "Datasource.column.lookup",
      "type": "method",
      "name": "lookup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lookup",
        "textToLower": "lookup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lookup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column lookup(String name, String domain)",
      "simplifiedSignature": "lookup(String,String)",
      "datatype": {
        "id": "Datasource.column.lookup.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type LOOKUP_TYPE.",
      "variables": {
        "name": {
          "id": "Datasource.column.lookup.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.lookup.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "domain": {
          "id": "Datasource.column.lookup.domain",
          "type": "var",
          "name": "domain",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "domain",
            "textToLower": "domain",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_domain_-1:0"
          },
          "signature": "String domain",
          "datatype": {
            "id": "Datasource.column.lookup.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "number(string,integer,integer)": {
      "id": "Datasource.column.number",
      "type": "method",
      "name": "number",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "number",
        "textToLower": "number",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_number_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column number(String name, Integer length, Integer decimalPlaces)",
      "simplifiedSignature": "number(String,Integer,Integer)",
      "datatype": {
        "id": "Datasource.column.number.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type NUMBER_TYPE.",
      "variables": {
        "name": {
          "id": "Datasource.column.number.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.number.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "length": {
          "id": "Datasource.column.number.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.number.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "decimalPlaces": {
          "id": "Datasource.column.number.decimalplaces",
          "type": "var",
          "name": "decimalPlaces",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalPlaces",
            "textToLower": "decimalplaces",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalPlaces_-1:0"
          },
          "signature": "Integer decimalPlaces",
          "datatype": {
            "id": "Datasource.column.number.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "text(string,string,integer)": {
      "id": "Datasource.column.text",
      "type": "method",
      "name": "text",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "text",
        "textToLower": "text",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_text_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column text(String name, String label, Integer length)",
      "simplifiedSignature": "text(String,String,Integer)",
      "datatype": {
        "id": "Datasource.column.text.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type STRING_SHORT_TYPE or STRING_LONG_TYPE, with the specified name, label, and length.",
      "variables": {
        "name": {
          "id": "Datasource.column.text.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.text.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "label": {
          "id": "Datasource.column.text.label",
          "type": "var",
          "name": "label",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "label",
            "textToLower": "label",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_label_-1:0"
          },
          "signature": "String label",
          "datatype": {
            "id": "Datasource.column.text.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "length": {
          "id": "Datasource.column.text.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.text.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "text(string,integer)": {
      "id": "Datasource.column.text",
      "type": "method",
      "name": "text",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "text",
        "textToLower": "text",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_text_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column text(String name, Integer length)",
      "simplifiedSignature": "text(String,Integer)",
      "datatype": {
        "id": "Datasource.column.text.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type STRING_SHORT_TYPE or STRING_LONG_TYPE, with the specified name and length.",
      "variables": {
        "name": {
          "id": "Datasource.column.text.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.text.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "length": {
          "id": "Datasource.column.text.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.text.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "text(string)": {
      "id": "Datasource.column.text",
      "type": "method",
      "name": "text",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "text",
        "textToLower": "text",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_text_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column text(String name)",
      "simplifiedSignature": "text(String)",
      "datatype": {
        "id": "Datasource.column.text.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type STRING_SHORT_TYPE with the specified name and the length of 255 characters.",
      "variables": {
        "name": {
          "id": "Datasource.column.text.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.text.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "textarea(string)": {
      "id": "Datasource.column.textarea",
      "type": "method",
      "name": "textarea",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "textarea",
        "textToLower": "textarea",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_textarea_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column textarea(String name)",
      "simplifiedSignature": "textarea(String)",
      "datatype": {
        "id": "Datasource.column.textarea.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type STRING_LONG_TYPE with the specified name and the length of 32,000 characters.",
      "variables": {
        "name": {
          "id": "Datasource.column.textarea.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.textarea.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "url(string,integer)": {
      "id": "Datasource.column.url",
      "type": "method",
      "name": "url",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "url",
        "textToLower": "url",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_url_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column url(String name, Integer length)",
      "simplifiedSignature": "url(String,Integer)",
      "datatype": {
        "id": "Datasource.column.url.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type URL_TYPE with the specified name and length.",
      "variables": {
        "name": {
          "id": "Datasource.column.url.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.url.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "length": {
          "id": "Datasource.column.url.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "Datasource.column.url.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "url(string)": {
      "id": "Datasource.column.url",
      "type": "method",
      "name": "url",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "url",
        "textToLower": "url",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_url_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Column url(String name)",
      "simplifiedSignature": "url(String)",
      "datatype": {
        "id": "Datasource.column.url.DataSource.Column",
        "type": "datatype",
        "name": "DataSource.Column"
      },
      "description": "Returns a new column of data type URL_TYPE with the specified name and the length of 1,000 characters.",
      "variables": {
        "name": {
          "id": "Datasource.column.url.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.column.url.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}