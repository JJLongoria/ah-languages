{
  "id": "Datasource.queryutils",
  "nodeType": "class",
  "name": "QueryUtils",
  "namespace": "Datasource",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "QueryUtils",
    "textToLower": "queryutils",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_QueryUtils_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains helper methods to locally filter, sort, and apply limit and offset clauses to data rows. This helper class is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_DataSource_QueryUtils.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "applylimitandoffset(datasource.querycontext,list,object>>)": {
      "id": "Datasource.queryutils.applylimitandoffset",
      "nodeType": "method",
      "name": "applyLimitAndOffset",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "applyLimitAndOffset",
        "textToLower": "applylimitandoffset",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_applyLimitAndOffset_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Map<String,  Object>> applyLimitAndOffset(DataSource.QueryContext queryContext, List <Map, Object>> rows)",
      "simplifiedSignature": "applyLimitAndOffset(DataSource.QueryContext,List,Object>>)",
      "datatype": {
        "id": "Datasource.queryutils.applylimitandoffset.List<Map<String,  Object>>",
        "nodeType": "datatype",
        "name": "List<Map<String,  Object>>"
      },
      "description": "Returns a subset of data rows after locally applying limit and offset clauses from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": {
        "queryContext": {
          "id": "Datasource.queryutils.applylimitandoffset.querycontext",
          "type": "var",
          "name": "queryContext",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryContext",
            "textToLower": "querycontext",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_queryContext_-1:0"
          },
          "signature": "DataSource.QueryContext queryContext",
          "datatype": {
            "id": "Datasource.queryutils.applylimitandoffset.datasource.querycontext",
            "nodeType": "datatype",
            "name": "DataSource.QueryContext"
          }
        },
        "<Map": {
          "id": "Datasource.queryutils.applylimitandoffset.<map",
          "type": "var",
          "name": "<Map",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Map",
            "textToLower": "<map",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Map_-1:0"
          },
          "signature": "List <Map",
          "datatype": {
            "id": "Datasource.queryutils.applylimitandoffset.list",
            "nodeType": "datatype",
            "name": "List"
          }
        },
        "rows": {
          "id": "Datasource.queryutils.applylimitandoffset.rows",
          "type": "var",
          "name": "rows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rows",
            "textToLower": "rows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_rows_-1:0"
          },
          "signature": "Object>> rows",
          "datatype": {
            "id": "Datasource.queryutils.applylimitandoffset.object>>",
            "nodeType": "datatype",
            "name": "Object>>"
          }
        }
      }
    },
    "filter(datasource.querycontext,list,object>>)": {
      "id": "Datasource.queryutils.filter",
      "nodeType": "method",
      "name": "filter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "filter",
        "textToLower": "filter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_filter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Map<String,  Object>> filter(DataSource.QueryContext queryContext, List <Map, Object>> rows)",
      "simplifiedSignature": "filter(DataSource.QueryContext,List,Object>>)",
      "datatype": {
        "id": "Datasource.queryutils.filter.List<Map<String,  Object>>",
        "nodeType": "datatype",
        "name": "List<Map<String,  Object>>"
      },
      "description": "Returns a subset of data rows after locally ordering and applying filters from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": {
        "queryContext": {
          "id": "Datasource.queryutils.filter.querycontext",
          "type": "var",
          "name": "queryContext",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryContext",
            "textToLower": "querycontext",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_queryContext_-1:0"
          },
          "signature": "DataSource.QueryContext queryContext",
          "datatype": {
            "id": "Datasource.queryutils.filter.datasource.querycontext",
            "nodeType": "datatype",
            "name": "DataSource.QueryContext"
          }
        },
        "<Map": {
          "id": "Datasource.queryutils.filter.<map",
          "type": "var",
          "name": "<Map",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Map",
            "textToLower": "<map",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Map_-1:0"
          },
          "signature": "List <Map",
          "datatype": {
            "id": "Datasource.queryutils.filter.list",
            "nodeType": "datatype",
            "name": "List"
          }
        },
        "rows": {
          "id": "Datasource.queryutils.filter.rows",
          "type": "var",
          "name": "rows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rows",
            "textToLower": "rows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_rows_-1:0"
          },
          "signature": "Object>> rows",
          "datatype": {
            "id": "Datasource.queryutils.filter.object>>",
            "nodeType": "datatype",
            "name": "Object>>"
          }
        }
      }
    },
    "process(datasource.querycontext,list,object>>)": {
      "id": "Datasource.queryutils.process",
      "nodeType": "method",
      "name": "process",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "process",
        "textToLower": "process",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_process_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Map<String,  Object>> process(DataSource.QueryContext queryContext, List <Map, Object>> rows)",
      "simplifiedSignature": "process(DataSource.QueryContext,List,Object>>)",
      "datatype": {
        "id": "Datasource.queryutils.process.List<Map<String,  Object>>",
        "nodeType": "datatype",
        "name": "List<Map<String,  Object>>"
      },
      "description": "Returns data rows after locally filtering, sorting, ordering, and applying limit and offset clauses from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": {
        "queryContext": {
          "id": "Datasource.queryutils.process.querycontext",
          "type": "var",
          "name": "queryContext",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryContext",
            "textToLower": "querycontext",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_queryContext_-1:0"
          },
          "signature": "DataSource.QueryContext queryContext",
          "datatype": {
            "id": "Datasource.queryutils.process.datasource.querycontext",
            "nodeType": "datatype",
            "name": "DataSource.QueryContext"
          }
        },
        "<Map": {
          "id": "Datasource.queryutils.process.<map",
          "type": "var",
          "name": "<Map",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Map",
            "textToLower": "<map",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Map_-1:0"
          },
          "signature": "List <Map",
          "datatype": {
            "id": "Datasource.queryutils.process.list",
            "nodeType": "datatype",
            "name": "List"
          }
        },
        "rows": {
          "id": "Datasource.queryutils.process.rows",
          "type": "var",
          "name": "rows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rows",
            "textToLower": "rows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_rows_-1:0"
          },
          "signature": "Object>> rows",
          "datatype": {
            "id": "Datasource.queryutils.process.object>>",
            "nodeType": "datatype",
            "name": "Object>>"
          }
        }
      }
    },
    "sort(datasource.querycontext,list,bject>>)": {
      "id": "Datasource.queryutils.sort",
      "nodeType": "method",
      "name": "sort",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sort",
        "textToLower": "sort",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sort_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Map<String,  Object>> sort(DataSource.QueryContext queryContext, List <Map, bject>> rows)",
      "simplifiedSignature": "sort(DataSource.QueryContext,List,bject>>)",
      "datatype": {
        "id": "Datasource.queryutils.sort.List<Map<String,  Object>>",
        "nodeType": "datatype",
        "name": "List<Map<String,  Object>>"
      },
      "description": "Returns data rows after locally sorting and applying the order from the query. This helper method is provided for your convenience during early development and tests, but it isn’t supported for use in production environments.",
      "params": {
        "queryContext": {
          "id": "Datasource.queryutils.sort.querycontext",
          "type": "var",
          "name": "queryContext",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryContext",
            "textToLower": "querycontext",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_queryContext_-1:0"
          },
          "signature": "DataSource.QueryContext queryContext",
          "datatype": {
            "id": "Datasource.queryutils.sort.datasource.querycontext",
            "nodeType": "datatype",
            "name": "DataSource.QueryContext"
          }
        },
        "<Map": {
          "id": "Datasource.queryutils.sort.<map",
          "type": "var",
          "name": "<Map",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Map",
            "textToLower": "<map",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Map_-1:0"
          },
          "signature": "List <Map",
          "datatype": {
            "id": "Datasource.queryutils.sort.list",
            "nodeType": "datatype",
            "name": "List"
          }
        },
        "rows": {
          "id": "Datasource.queryutils.sort.rows",
          "type": "var",
          "name": "rows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rows",
            "textToLower": "rows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_rows_-1:0"
          },
          "signature": "bject>> rows",
          "datatype": {
            "id": "Datasource.queryutils.sort.bject>>",
            "nodeType": "datatype",
            "name": "bject>>"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}