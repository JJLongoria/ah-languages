{
  "id": "Datasource.table",
  "nodeType": "class",
  "name": "Table",
  "namespace": "Datasource",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Table",
    "textToLower": "table",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Table_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Describes a table on an external system that the Salesforce Connect custom adapter connects to. This class extends the DataSourceUtil class and inherits its methods.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_DataSource_Table.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "columns": {
      "id": "Datasource.table.columns",
      "nodeType": "property",
      "name": "columns",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "columns",
        "textToLower": "columns",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_columns_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<DataSource.Column> columns {get; set;}",
      "simplifiedSignature": "List<DataSource.Column> columns { get; set; }",
      "datatype": {
        "id": "Datasource.table.columns.list<datasource.column>",
        "nodeType": "datatype",
        "name": "List<DataSource.Column>"
      },
      "description": "List of table columns.",
      "getter": {
        "id": "Datasource.table.columns.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.table.columns.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "description": {
      "id": "Datasource.table.description",
      "nodeType": "property",
      "name": "description",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "description",
        "textToLower": "description",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_description_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String description {get; set;}",
      "simplifiedSignature": "String description { get; set; }",
      "datatype": {
        "id": "Datasource.table.description.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Description of what the table represents.",
      "getter": {
        "id": "Datasource.table.description.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.table.description.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "labelplural": {
      "id": "Datasource.table.labelplural",
      "nodeType": "property",
      "name": "labelPlural",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "labelPlural",
        "textToLower": "labelplural",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_labelPlural_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String labelPlural {get; set;}",
      "simplifiedSignature": "String labelPlural { get; set; }",
      "datatype": {
        "id": "Datasource.table.labelplural.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Plural form of the user-friendly name for the table. The labelPlural becomes the objectâ€™s plural label in the Salesforce user interface.",
      "getter": {
        "id": "Datasource.table.labelplural.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.table.labelplural.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "labelsingular": {
      "id": "Datasource.table.labelsingular",
      "nodeType": "property",
      "name": "labelSingular",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "labelSingular",
        "textToLower": "labelsingular",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_labelSingular_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String labelSingular {get; set;}",
      "simplifiedSignature": "String labelSingular { get; set; }",
      "datatype": {
        "id": "Datasource.table.labelsingular.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Singular form of the user-friendly name for the table. The labelSingular becomes the object label in the Salesforce user interface. We recommend that you make object labels unique across all standard, custom, and external objects in the org.",
      "getter": {
        "id": "Datasource.table.labelsingular.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.table.labelsingular.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "name": {
      "id": "Datasource.table.name",
      "nodeType": "property",
      "name": "name",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "name",
        "textToLower": "name",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_name_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String name {get; set;}",
      "simplifiedSignature": "String name { get; set; }",
      "datatype": {
        "id": "Datasource.table.name.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Name of the table on the external system.",
      "getter": {
        "id": "Datasource.table.name.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.table.name.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "namecolumn": {
      "id": "Datasource.table.namecolumn",
      "nodeType": "property",
      "name": "nameColumn",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "nameColumn",
        "textToLower": "namecolumn",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_nameColumn_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String nameColumn {get; set;}",
      "simplifiedSignature": "String nameColumn { get; set; }",
      "datatype": {
        "id": "Datasource.table.namecolumn.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Name of the table column that becomes the name field of the external object when the administrator syncs the table.",
      "getter": {
        "id": "Datasource.table.namecolumn.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.table.namecolumn.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {
    "get(string,string,string,string,string,list)": {
      "id": "Datasource.table.get",
      "nodeType": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Table get(String name, String labelSingular, String labelPlural, String description, String nameColumn, List <DataSource.Column>)",
      "simplifiedSignature": "get(String,String,String,String,String,List)",
      "datatype": {
        "id": "Datasource.table.get.DataSource.Table",
        "nodeType": "datatype",
        "name": "DataSource.Table"
      },
      "description": "Returns the table metadata with the specified parameter values.",
      "params": {
        "name": {
          "id": "Datasource.table.get.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.table.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "labelSingular": {
          "id": "Datasource.table.get.labelsingular",
          "type": "var",
          "name": "labelSingular",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "labelSingular",
            "textToLower": "labelsingular",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_labelSingular_-1:0"
          },
          "signature": "String labelSingular",
          "datatype": {
            "id": "Datasource.table.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "labelPlural": {
          "id": "Datasource.table.get.labelplural",
          "type": "var",
          "name": "labelPlural",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "labelPlural",
            "textToLower": "labelplural",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_labelPlural_-1:0"
          },
          "signature": "String labelPlural",
          "datatype": {
            "id": "Datasource.table.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "description": {
          "id": "Datasource.table.get.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "Datasource.table.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "nameColumn": {
          "id": "Datasource.table.get.namecolumn",
          "type": "var",
          "name": "nameColumn",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "nameColumn",
            "textToLower": "namecolumn",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_nameColumn_-1:0"
          },
          "signature": "String nameColumn",
          "datatype": {
            "id": "Datasource.table.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "<DataSource.Column>": {
          "id": "Datasource.table.get.<datasource.column>",
          "type": "var",
          "name": "<DataSource.Column>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<DataSource.Column>",
            "textToLower": "<datasource.column>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<DataSource.Column>_-1:0"
          },
          "signature": "List <DataSource.Column>",
          "datatype": {
            "id": "Datasource.table.get.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "get(string,string,list)": {
      "id": "Datasource.table.get",
      "nodeType": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.Table get(String name, String nameColumn, List <DataSource.Column>)",
      "simplifiedSignature": "get(String,String,List)",
      "datatype": {
        "id": "Datasource.table.get.DataSource.Table",
        "nodeType": "datatype",
        "name": "DataSource.Table"
      },
      "description": "Returns the table metadata with the specified parameter values, using the name for the labels and description.",
      "params": {
        "name": {
          "id": "Datasource.table.get.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Datasource.table.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "nameColumn": {
          "id": "Datasource.table.get.namecolumn",
          "type": "var",
          "name": "nameColumn",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "nameColumn",
            "textToLower": "namecolumn",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_nameColumn_-1:0"
          },
          "signature": "String nameColumn",
          "datatype": {
            "id": "Datasource.table.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "<DataSource.Column>": {
          "id": "Datasource.table.get.<datasource.column>",
          "type": "var",
          "name": "<DataSource.Column>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<DataSource.Column>",
            "textToLower": "<datasource.column>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<DataSource.Column>_-1:0"
          },
          "signature": "List <DataSource.Column>",
          "datatype": {
            "id": "Datasource.table.get.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}