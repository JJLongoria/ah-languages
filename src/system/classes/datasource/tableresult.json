{
  "id": "Datasource.tableresult",
  "nodeType": "class",
  "name": "TableResult",
  "namespace": "Datasource",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "TableResult",
    "textToLower": "tableresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_TableResult_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains the results of a search or query.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_DataSource_TableResult.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {
    "errormessage": {
      "id": "Datasource.tableresult.errormessage",
      "nodeType": "property",
      "name": "errorMessage",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "errorMessage",
        "textToLower": "errormessage",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_errorMessage_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String errorMessage {get; set;}",
      "simplifiedSignature": "String errorMessage { get; set; }",
      "datatype": {
        "id": "Datasource.tableresult.errormessage.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Error message to display to the user.",
      "getter": {
        "id": "Datasource.tableresult.errormessage.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.tableresult.errormessage.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "querymoretoken": {
      "id": "Datasource.tableresult.querymoretoken",
      "nodeType": "property",
      "name": "queryMoreToken",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "queryMoreToken",
        "textToLower": "querymoretoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_queryMoreToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String queryMoreToken {get; set;}",
      "simplifiedSignature": "String queryMoreToken { get; set; }",
      "datatype": {
        "id": "Datasource.tableresult.querymoretoken.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Query token that’s used for server-driven paging to determine and fetch the subsequent batch of results. This token is passed back to the Apex data source on subsequent queries in the queryMoreToken property on the QueryContext.​",
      "getter": {
        "id": "Datasource.tableresult.querymoretoken.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.tableresult.querymoretoken.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "rows": {
      "id": "Datasource.tableresult.rows",
      "nodeType": "property",
      "name": "rows",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "rows",
        "textToLower": "rows",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_rows_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Map<String,Object>> rows {get; set;}",
      "simplifiedSignature": "List<Map<String,Object>> rows { get; set; }",
      "datatype": {
        "id": "Datasource.tableresult.rows.list<map<string,object>>",
        "nodeType": "datatype",
        "name": "List<Map<String,Object>>"
      },
      "description": "Rows of data.",
      "getter": {
        "id": "Datasource.tableresult.rows.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.tableresult.rows.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "success": {
      "id": "Datasource.tableresult.success",
      "nodeType": "property",
      "name": "success",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "success",
        "textToLower": "success",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_success_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean success {get; set;}",
      "simplifiedSignature": "Boolean success { get; set; }",
      "datatype": {
        "id": "Datasource.tableresult.success.boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Whether the search or query was successful.",
      "getter": {
        "id": "Datasource.tableresult.success.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.tableresult.success.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "tablename": {
      "id": "Datasource.tableresult.tablename",
      "nodeType": "property",
      "name": "tableName",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "tableName",
        "textToLower": "tablename",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_tableName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String tableName {get; set;}",
      "simplifiedSignature": "String tableName { get; set; }",
      "datatype": {
        "id": "Datasource.tableresult.tablename.string",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Name of the table that was queried.",
      "getter": {
        "id": "Datasource.tableresult.tablename.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.tableresult.tablename.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "totalsize": {
      "id": "Datasource.tableresult.totalsize",
      "nodeType": "property",
      "name": "totalSize",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "totalSize",
        "textToLower": "totalsize",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_totalSize_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer totalSize {get; set;}",
      "simplifiedSignature": "Integer totalSize { get; set; }",
      "datatype": {
        "id": "Datasource.tableresult.totalsize.integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "The total number of rows that meet the query criteria, even when the external system is requested to return a smaller batch size.",
      "getter": {
        "id": "Datasource.tableresult.totalsize.get",
        "nodeType": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Datasource.tableresult.totalsize.set",
        "nodeType": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {
    "error(string)": {
      "id": "Datasource.tableresult.error",
      "nodeType": "method",
      "name": "error",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "error",
        "textToLower": "error",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_error_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.TableResult error(String errorMessage)",
      "simplifiedSignature": "error(String)",
      "datatype": {
        "id": "Datasource.tableresult.error.DataSource.TableResult",
        "nodeType": "datatype",
        "name": "DataSource.TableResult"
      },
      "description": "Returns failed search or query results with the provided error message.",
      "params": {
        "errorMessage": {
          "id": "Datasource.tableresult.error.errormessage",
          "type": "var",
          "name": "errorMessage",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMessage",
            "textToLower": "errormessage",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_errorMessage_-1:0"
          },
          "signature": "String errorMessage",
          "datatype": {
            "id": "Datasource.tableresult.error.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "get(boolean,string,string,list,object>>)": {
      "id": "Datasource.tableresult.get",
      "nodeType": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.TableResult get(Boolean success, String errorMessage, String tableName, List <Map, Object>> rows)",
      "simplifiedSignature": "get(Boolean,String,String,List,Object>>)",
      "datatype": {
        "id": "Datasource.tableresult.get.DataSource.TableResult",
        "nodeType": "datatype",
        "name": "DataSource.TableResult"
      },
      "description": "Returns a subset of data rows in a TableResult with the provided property values.",
      "params": {
        "success": {
          "id": "Datasource.tableresult.get.success",
          "type": "var",
          "name": "success",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "success",
            "textToLower": "success",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_success_-1:0"
          },
          "signature": "Boolean success",
          "datatype": {
            "id": "Datasource.tableresult.get.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        },
        "errorMessage": {
          "id": "Datasource.tableresult.get.errormessage",
          "type": "var",
          "name": "errorMessage",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMessage",
            "textToLower": "errormessage",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_errorMessage_-1:0"
          },
          "signature": "String errorMessage",
          "datatype": {
            "id": "Datasource.tableresult.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "tableName": {
          "id": "Datasource.tableresult.get.tablename",
          "type": "var",
          "name": "tableName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "tableName",
            "textToLower": "tablename",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_tableName_-1:0"
          },
          "signature": "String tableName",
          "datatype": {
            "id": "Datasource.tableresult.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "<Map": {
          "id": "Datasource.tableresult.get.<map",
          "type": "var",
          "name": "<Map",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Map",
            "textToLower": "<map",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Map_-1:0"
          },
          "signature": "List <Map",
          "datatype": {
            "id": "Datasource.tableresult.get.list",
            "nodeType": "datatype",
            "name": "List"
          }
        },
        "rows": {
          "id": "Datasource.tableresult.get.rows",
          "type": "var",
          "name": "rows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rows",
            "textToLower": "rows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_rows_-1:0"
          },
          "signature": "Object>> rows",
          "datatype": {
            "id": "Datasource.tableresult.get.object>>",
            "nodeType": "datatype",
            "name": "Object>>"
          }
        }
      }
    },
    "get(datasource.querycontext,list,object>>)": {
      "id": "Datasource.tableresult.get",
      "nodeType": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.TableResult get(DataSource.QueryContext queryContext, List <Map, Object>> rows)",
      "simplifiedSignature": "get(DataSource.QueryContext,List,Object>>)",
      "datatype": {
        "id": "Datasource.tableresult.get.DataSource.TableResult",
        "nodeType": "datatype",
        "name": "DataSource.TableResult"
      },
      "description": "Returns the subset of data rows that meet the query criteria, and the number of rows in the table, in a TableResult.",
      "params": {
        "queryContext": {
          "id": "Datasource.tableresult.get.querycontext",
          "type": "var",
          "name": "queryContext",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryContext",
            "textToLower": "querycontext",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_queryContext_-1:0"
          },
          "signature": "DataSource.QueryContext queryContext",
          "datatype": {
            "id": "Datasource.tableresult.get.datasource.querycontext",
            "nodeType": "datatype",
            "name": "DataSource.QueryContext"
          }
        },
        "<Map": {
          "id": "Datasource.tableresult.get.<map",
          "type": "var",
          "name": "<Map",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Map",
            "textToLower": "<map",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Map_-1:0"
          },
          "signature": "List <Map",
          "datatype": {
            "id": "Datasource.tableresult.get.list",
            "nodeType": "datatype",
            "name": "List"
          }
        },
        "rows": {
          "id": "Datasource.tableresult.get.rows",
          "type": "var",
          "name": "rows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rows",
            "textToLower": "rows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_rows_-1:0"
          },
          "signature": "Object>> rows",
          "datatype": {
            "id": "Datasource.tableresult.get.object>>",
            "nodeType": "datatype",
            "name": "Object>>"
          }
        }
      }
    },
    "get(datasource.tableselection,list,object>>)": {
      "id": "Datasource.tableresult.get",
      "nodeType": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static DataSource.TableResult get(DataSource.TableSelection tableSelection, List <Map, Object>> rows)",
      "simplifiedSignature": "get(DataSource.TableSelection,List,Object>>)",
      "datatype": {
        "id": "Datasource.tableresult.get.DataSource.TableResult",
        "nodeType": "datatype",
        "name": "DataSource.TableResult"
      },
      "description": "Returns the subset of data rows that meet the query criteria, and the number of rows in the table, in a TableResult.",
      "params": {
        "tableSelection": {
          "id": "Datasource.tableresult.get.tableselection",
          "type": "var",
          "name": "tableSelection",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "tableSelection",
            "textToLower": "tableselection",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_tableSelection_-1:0"
          },
          "signature": "DataSource.TableSelection tableSelection",
          "datatype": {
            "id": "Datasource.tableresult.get.datasource.tableselection",
            "nodeType": "datatype",
            "name": "DataSource.TableSelection"
          }
        },
        "<Map": {
          "id": "Datasource.tableresult.get.<map",
          "type": "var",
          "name": "<Map",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Map",
            "textToLower": "<map",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Map_-1:0"
          },
          "signature": "List <Map",
          "datatype": {
            "id": "Datasource.tableresult.get.list",
            "nodeType": "datatype",
            "name": "List"
          }
        },
        "rows": {
          "id": "Datasource.tableresult.get.rows",
          "type": "var",
          "name": "rows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "rows",
            "textToLower": "rows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_rows_-1:0"
          },
          "signature": "Object>> rows",
          "datatype": {
            "id": "Datasource.tableresult.get.object>>",
            "nodeType": "datatype",
            "name": "Object>>"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}