{
  "id": "Dom.document",
  "nodeType": "class",
  "name": "Document",
  "namespace": "Dom",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Document",
    "textToLower": "document",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Document_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Use the Document class to process XML content. You can parse nested XML content thatâ€™s up to 50 nodes deep.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_xml_dom_document.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "createrootelement(string,string,string)": {
      "id": "Dom.document.createrootelement",
      "nodeType": "method",
      "name": "createRootElement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createRootElement",
        "textToLower": "createrootelement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createRootElement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode createRootElement(String name, String namespace, String prefix)",
      "simplifiedSignature": "createRootElement(String,String,String)",
      "datatype": {
        "id": "Dom.document.createrootelement.Dom.XmlNode",
        "nodeType": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Creates the top-level root element for a document.",
      "params": {
        "name": {
          "id": "Dom.document.createrootelement.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Dom.document.createrootelement.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "namespace": {
          "id": "Dom.document.createrootelement.namespace",
          "type": "var",
          "name": "namespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "namespace",
            "textToLower": "namespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_namespace_-1:0"
          },
          "signature": "String namespace",
          "datatype": {
            "id": "Dom.document.createrootelement.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "prefix": {
          "id": "Dom.document.createrootelement.prefix",
          "type": "var",
          "name": "prefix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "prefix",
            "textToLower": "prefix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_prefix_-1:0"
          },
          "signature": "String prefix",
          "datatype": {
            "id": "Dom.document.createrootelement.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getrootelement()": {
      "id": "Dom.document.getrootelement",
      "nodeType": "method",
      "name": "getRootElement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRootElement",
        "textToLower": "getrootelement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRootElement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode getRootElement()",
      "simplifiedSignature": "getRootElement()",
      "datatype": {
        "id": "Dom.document.getrootelement.Dom.XmlNode",
        "nodeType": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Returns the top-level root element node in the document. If this method returns null, the root element has not been created yet.",
      "params": {}
    },
    "load(string)": {
      "id": "Dom.document.load",
      "nodeType": "method",
      "name": "load",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "load",
        "textToLower": "load",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_load_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void load(String xml)",
      "simplifiedSignature": "load(String)",
      "datatype": {
        "id": "Dom.document.load.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Parse the XML representation of the document specified in the xml argument and load it into a document.",
      "params": {
        "xml": {
          "id": "Dom.document.load.xml",
          "type": "var",
          "name": "xml",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "xml",
            "textToLower": "xml",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_xml_-1:0"
          },
          "signature": "String xml",
          "datatype": {
            "id": "Dom.document.load.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "toxmlstring()": {
      "id": "Dom.document.toxmlstring",
      "nodeType": "method",
      "name": "toXmlString",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toXmlString",
        "textToLower": "toxmlstring",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toXmlString_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toXmlString()",
      "simplifiedSignature": "toXmlString()",
      "datatype": {
        "id": "Dom.document.toxmlstring.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the XML representation of the document as a String.",
      "params": {}
    }
  },
  "constructors": {
    "document()": {
      "id": "Dom.document.document",
      "nodeType": "constructor",
      "name": "Document",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "Document",
        "textToLower": "document",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_Document_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Document()",
      "simplifiedSignature": "Document()",
      "datatype": {
        "id": "Dom.document.document.constructor",
        "nodeType": "datatype",
        "name": "Document"
      },
      "description": "Creates a new instance of the Dom.Document class.",
      "params": {}
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}