{
  "id": "Dom.xmlnode",
  "type": "class",
  "name": "XmlNode",
  "namespace": "Dom",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "XmlNode",
    "textToLower": "xmlnode",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_XmlNode_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Use the XmlNode class to work with a node in an XML document.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_xml_dom_xmlnode.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "addchildelement(string,string,string)": {
      "id": "Dom.xmlnode.addchildelement",
      "type": "method",
      "name": "addChildElement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addChildElement",
        "textToLower": "addchildelement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addChildElement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode addChildElement(String name, String namespace, String prefix)",
      "simplifiedSignature": "addChildElement(String,String,String)",
      "datatype": {
        "id": "Dom.xmlnode.addchildelement.Dom.XmlNode",
        "type": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Creates a child element node for this node.",
      "variables": {
        "name": {
          "id": "Dom.xmlnode.addchildelement.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Dom.xmlnode.addchildelement.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "namespace": {
          "id": "Dom.xmlnode.addchildelement.namespace",
          "type": "var",
          "name": "namespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "namespace",
            "textToLower": "namespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_namespace_-1:0"
          },
          "signature": "String namespace",
          "datatype": {
            "id": "Dom.xmlnode.addchildelement.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "prefix": {
          "id": "Dom.xmlnode.addchildelement.prefix",
          "type": "var",
          "name": "prefix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "prefix",
            "textToLower": "prefix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_prefix_-1:0"
          },
          "signature": "String prefix",
          "datatype": {
            "id": "Dom.xmlnode.addchildelement.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "addcommentnode(string)": {
      "id": "Dom.xmlnode.addcommentnode",
      "type": "method",
      "name": "addCommentNode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addCommentNode",
        "textToLower": "addcommentnode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addCommentNode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode addCommentNode(String text)",
      "simplifiedSignature": "addCommentNode(String)",
      "datatype": {
        "id": "Dom.xmlnode.addcommentnode.Dom.XmlNode",
        "type": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Creates a child comment node for this node.",
      "variables": {
        "text": {
          "id": "Dom.xmlnode.addcommentnode.text",
          "type": "var",
          "name": "text",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "text",
            "textToLower": "text",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_text_-1:0"
          },
          "signature": "String text",
          "datatype": {
            "id": "Dom.xmlnode.addcommentnode.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "addtextnode(string)": {
      "id": "Dom.xmlnode.addtextnode",
      "type": "method",
      "name": "addTextNode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addTextNode",
        "textToLower": "addtextnode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addTextNode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode addTextNode(String text)",
      "simplifiedSignature": "addTextNode(String)",
      "datatype": {
        "id": "Dom.xmlnode.addtextnode.Dom.XmlNode",
        "type": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Creates a child text node for this node.",
      "variables": {
        "text": {
          "id": "Dom.xmlnode.addtextnode.text",
          "type": "var",
          "name": "text",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "text",
            "textToLower": "text",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_text_-1:0"
          },
          "signature": "String text",
          "datatype": {
            "id": "Dom.xmlnode.addtextnode.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getattribute(string,string)": {
      "id": "Dom.xmlnode.getattribute",
      "type": "method",
      "name": "getAttribute",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttribute",
        "textToLower": "getattribute",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttribute_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttribute(String key, String keyNamespace)",
      "simplifiedSignature": "getAttribute(String,String)",
      "datatype": {
        "id": "Dom.xmlnode.getattribute.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns namespacePrefix:attributeValue for the given key and key namespace.",
      "variables": {
        "key": {
          "id": "Dom.xmlnode.getattribute.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Dom.xmlnode.getattribute.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "keyNamespace": {
          "id": "Dom.xmlnode.getattribute.keynamespace",
          "type": "var",
          "name": "keyNamespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "keyNamespace",
            "textToLower": "keynamespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_keyNamespace_-1:0"
          },
          "signature": "String keyNamespace",
          "datatype": {
            "id": "Dom.xmlnode.getattribute.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getattributecount()": {
      "id": "Dom.xmlnode.getattributecount",
      "type": "method",
      "name": "getAttributeCount",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeCount",
        "textToLower": "getattributecount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeCount_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer getAttributeCount()",
      "simplifiedSignature": "getAttributeCount()",
      "datatype": {
        "id": "Dom.xmlnode.getattributecount.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of attributes for this node.",
      "variables": {}
    },
    "getattributekeyat(integer)": {
      "id": "Dom.xmlnode.getattributekeyat",
      "type": "method",
      "name": "getAttributeKeyAt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeKeyAt",
        "textToLower": "getattributekeyat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeKeyAt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeKeyAt(Integer index)",
      "simplifiedSignature": "getAttributeKeyAt(Integer)",
      "datatype": {
        "id": "Dom.xmlnode.getattributekeyat.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the attribute key for the given index. Index values start at 0.",
      "variables": {
        "index": {
          "id": "Dom.xmlnode.getattributekeyat.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "Dom.xmlnode.getattributekeyat.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getattributekeynsat(integer)": {
      "id": "Dom.xmlnode.getattributekeynsat",
      "type": "method",
      "name": "getAttributeKeyNsAt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeKeyNsAt",
        "textToLower": "getattributekeynsat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeKeyNsAt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeKeyNsAt(Integer index)",
      "simplifiedSignature": "getAttributeKeyNsAt(Integer)",
      "datatype": {
        "id": "Dom.xmlnode.getattributekeynsat.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the attribute key namespace for the given index.",
      "variables": {
        "index": {
          "id": "Dom.xmlnode.getattributekeynsat.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "Dom.xmlnode.getattributekeynsat.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getattributevalue(string,string)": {
      "id": "Dom.xmlnode.getattributevalue",
      "type": "method",
      "name": "getAttributeValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeValue",
        "textToLower": "getattributevalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeValue(String key, String keyNamespace)",
      "simplifiedSignature": "getAttributeValue(String,String)",
      "datatype": {
        "id": "Dom.xmlnode.getattributevalue.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the attribute value for the given key and key namespace.",
      "variables": {
        "key": {
          "id": "Dom.xmlnode.getattributevalue.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Dom.xmlnode.getattributevalue.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "keyNamespace": {
          "id": "Dom.xmlnode.getattributevalue.keynamespace",
          "type": "var",
          "name": "keyNamespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "keyNamespace",
            "textToLower": "keynamespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_keyNamespace_-1:0"
          },
          "signature": "String keyNamespace",
          "datatype": {
            "id": "Dom.xmlnode.getattributevalue.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getattributevaluens(string,string)": {
      "id": "Dom.xmlnode.getattributevaluens",
      "type": "method",
      "name": "getAttributeValueNs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeValueNs",
        "textToLower": "getattributevaluens",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeValueNs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeValueNs(String key, String keyNamespace)",
      "simplifiedSignature": "getAttributeValueNs(String,String)",
      "datatype": {
        "id": "Dom.xmlnode.getattributevaluens.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the attribute value namespace for the given key and key namespace.",
      "variables": {
        "key": {
          "id": "Dom.xmlnode.getattributevaluens.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Dom.xmlnode.getattributevaluens.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "keyNamespace": {
          "id": "Dom.xmlnode.getattributevaluens.keynamespace",
          "type": "var",
          "name": "keyNamespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "keyNamespace",
            "textToLower": "keynamespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_keyNamespace_-1:0"
          },
          "signature": "String keyNamespace",
          "datatype": {
            "id": "Dom.xmlnode.getattributevaluens.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getchildelement(string,string)": {
      "id": "Dom.xmlnode.getchildelement",
      "type": "method",
      "name": "getChildElement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getChildElement",
        "textToLower": "getchildelement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getChildElement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode getChildElement(String name, String namespace)",
      "simplifiedSignature": "getChildElement(String,String)",
      "datatype": {
        "id": "Dom.xmlnode.getchildelement.Dom.XmlNode",
        "type": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Returns the child element node for the node with the given name and namespace.",
      "variables": {
        "name": {
          "id": "Dom.xmlnode.getchildelement.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Dom.xmlnode.getchildelement.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "namespace": {
          "id": "Dom.xmlnode.getchildelement.namespace",
          "type": "var",
          "name": "namespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "namespace",
            "textToLower": "namespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_namespace_-1:0"
          },
          "signature": "String namespace",
          "datatype": {
            "id": "Dom.xmlnode.getchildelement.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getchildelements()": {
      "id": "Dom.xmlnode.getchildelements",
      "type": "method",
      "name": "getChildElements",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getChildElements",
        "textToLower": "getchildelements",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getChildElements_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode[] getChildElements()",
      "simplifiedSignature": "getChildElements()",
      "datatype": {
        "id": "Dom.xmlnode.getchildelements.Dom.XmlNode[]",
        "type": "datatype",
        "name": "Dom.XmlNode[]"
      },
      "description": "Returns the child element nodes for this node. This doesn't include child text or comment nodes.",
      "variables": {}
    },
    "getchildren()": {
      "id": "Dom.xmlnode.getchildren",
      "type": "method",
      "name": "getChildren",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getChildren",
        "textToLower": "getchildren",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getChildren_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode[] getChildren()",
      "simplifiedSignature": "getChildren()",
      "datatype": {
        "id": "Dom.xmlnode.getchildren.Dom.XmlNode[]",
        "type": "datatype",
        "name": "Dom.XmlNode[]"
      },
      "description": "Returns the child nodes for this node. This includes all node types.",
      "variables": {}
    },
    "getname()": {
      "id": "Dom.xmlnode.getname",
      "type": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "Dom.xmlnode.getname.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the element name.",
      "variables": {}
    },
    "getnamespace()": {
      "id": "Dom.xmlnode.getnamespace",
      "type": "method",
      "name": "getNamespace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNamespace",
        "textToLower": "getnamespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNamespace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getNamespace()",
      "simplifiedSignature": "getNamespace()",
      "datatype": {
        "id": "Dom.xmlnode.getnamespace.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the namespace of the element.",
      "variables": {}
    },
    "getnamespacefor(string)": {
      "id": "Dom.xmlnode.getnamespacefor",
      "type": "method",
      "name": "getNamespaceFor",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNamespaceFor",
        "textToLower": "getnamespacefor",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNamespaceFor_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getNamespaceFor(String prefix)",
      "simplifiedSignature": "getNamespaceFor(String)",
      "datatype": {
        "id": "Dom.xmlnode.getnamespacefor.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the namespace of the element for the given prefix.",
      "variables": {
        "prefix": {
          "id": "Dom.xmlnode.getnamespacefor.prefix",
          "type": "var",
          "name": "prefix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "prefix",
            "textToLower": "prefix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_prefix_-1:0"
          },
          "signature": "String prefix",
          "datatype": {
            "id": "Dom.xmlnode.getnamespacefor.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getnodetype()": {
      "id": "Dom.xmlnode.getnodetype",
      "type": "method",
      "name": "getNodeType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNodeType",
        "textToLower": "getnodetype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNodeType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNodeType getNodeType()",
      "simplifiedSignature": "getNodeType()",
      "datatype": {
        "id": "Dom.xmlnode.getnodetype.Dom.XmlNodeType",
        "type": "datatype",
        "name": "Dom.XmlNodeType"
      },
      "description": "Returns the node type.",
      "variables": {}
    },
    "getparent()": {
      "id": "Dom.xmlnode.getparent",
      "type": "method",
      "name": "getParent",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getParent",
        "textToLower": "getparent",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getParent_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode getParent()",
      "simplifiedSignature": "getParent()",
      "datatype": {
        "id": "Dom.xmlnode.getparent.Dom.XmlNode",
        "type": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Returns the parent of this element.",
      "variables": {}
    },
    "getprefixfor(string)": {
      "id": "Dom.xmlnode.getprefixfor",
      "type": "method",
      "name": "getPrefixFor",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPrefixFor",
        "textToLower": "getprefixfor",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPrefixFor_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getPrefixFor(String namespace)",
      "simplifiedSignature": "getPrefixFor(String)",
      "datatype": {
        "id": "Dom.xmlnode.getprefixfor.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the prefix of the given namespace.",
      "variables": {
        "namespace": {
          "id": "Dom.xmlnode.getprefixfor.namespace",
          "type": "var",
          "name": "namespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "namespace",
            "textToLower": "namespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_namespace_-1:0"
          },
          "signature": "String namespace",
          "datatype": {
            "id": "Dom.xmlnode.getprefixfor.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "gettext()": {
      "id": "Dom.xmlnode.gettext",
      "type": "method",
      "name": "getText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getText",
        "textToLower": "gettext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getText()",
      "simplifiedSignature": "getText()",
      "datatype": {
        "id": "Dom.xmlnode.gettext.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the text for this node.",
      "variables": {}
    },
    "insertbefore(dom.xmlnode,dom.xmlnode)": {
      "id": "Dom.xmlnode.insertbefore",
      "type": "method",
      "name": "insertBefore",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertBefore",
        "textToLower": "insertbefore",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertBefore_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Dom.XmlNode insertBefore(Dom.XmlNode newChild, Dom.XmlNode refChild)",
      "simplifiedSignature": "insertBefore(Dom.XmlNode,Dom.XmlNode)",
      "datatype": {
        "id": "Dom.xmlnode.insertbefore.Dom.XmlNode",
        "type": "datatype",
        "name": "Dom.XmlNode"
      },
      "description": "Inserts a new child node before the specified node.",
      "variables": {
        "newChild": {
          "id": "Dom.xmlnode.insertbefore.newchild",
          "type": "var",
          "name": "newChild",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "newChild",
            "textToLower": "newchild",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_newChild_-1:0"
          },
          "signature": "Dom.XmlNode newChild",
          "datatype": {
            "id": "Dom.xmlnode.insertbefore.dom.xmlnode",
            "type": "datatype",
            "name": "Dom.XmlNode"
          }
        },
        "refChild": {
          "id": "Dom.xmlnode.insertbefore.refchild",
          "type": "var",
          "name": "refChild",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "refChild",
            "textToLower": "refchild",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_refChild_-1:0"
          },
          "signature": "Dom.XmlNode refChild",
          "datatype": {
            "id": "Dom.xmlnode.insertbefore.dom.xmlnode",
            "type": "datatype",
            "name": "Dom.XmlNode"
          }
        }
      }
    },
    "removeattribute(string,string)": {
      "id": "Dom.xmlnode.removeattribute",
      "type": "method",
      "name": "removeAttribute",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeAttribute",
        "textToLower": "removeattribute",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeAttribute_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean removeAttribute(String key, String keyNamespace)",
      "simplifiedSignature": "removeAttribute(String,String)",
      "datatype": {
        "id": "Dom.xmlnode.removeattribute.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Removes the attribute with the given key and key namespace. Returns true if successful, false otherwise.",
      "variables": {
        "key": {
          "id": "Dom.xmlnode.removeattribute.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Dom.xmlnode.removeattribute.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "keyNamespace": {
          "id": "Dom.xmlnode.removeattribute.keynamespace",
          "type": "var",
          "name": "keyNamespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "keyNamespace",
            "textToLower": "keynamespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_keyNamespace_-1:0"
          },
          "signature": "String keyNamespace",
          "datatype": {
            "id": "Dom.xmlnode.removeattribute.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "removechild(dom.xmlnode)": {
      "id": "Dom.xmlnode.removechild",
      "type": "method",
      "name": "removeChild",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeChild",
        "textToLower": "removechild",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeChild_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean removeChild(Dom.XmlNode childNode)",
      "simplifiedSignature": "removeChild(Dom.XmlNode)",
      "datatype": {
        "id": "Dom.xmlnode.removechild.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Removes the given child node.",
      "variables": {
        "childNode": {
          "id": "Dom.xmlnode.removechild.childnode",
          "type": "var",
          "name": "childNode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "childNode",
            "textToLower": "childnode",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_childNode_-1:0"
          },
          "signature": "Dom.XmlNode childNode",
          "datatype": {
            "id": "Dom.xmlnode.removechild.dom.xmlnode",
            "type": "datatype",
            "name": "Dom.XmlNode"
          }
        }
      }
    },
    "setattribute(string,string)": {
      "id": "Dom.xmlnode.setattribute",
      "type": "method",
      "name": "setAttribute",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAttribute",
        "textToLower": "setattribute",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAttribute_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setAttribute(String key, String value)",
      "simplifiedSignature": "setAttribute(String,String)",
      "datatype": {
        "id": "Dom.xmlnode.setattribute.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the key attribute value.",
      "variables": {
        "key": {
          "id": "Dom.xmlnode.setattribute.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Dom.xmlnode.setattribute.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "Dom.xmlnode.setattribute.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "String value",
          "datatype": {
            "id": "Dom.xmlnode.setattribute.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setattributens(string,string,string,string)": {
      "id": "Dom.xmlnode.setattributens",
      "type": "method",
      "name": "setAttributeNs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAttributeNs",
        "textToLower": "setattributens",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAttributeNs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setAttributeNs(String key, String value, String keyNamespace, String valueNamespace)",
      "simplifiedSignature": "setAttributeNs(String,String,String,String)",
      "datatype": {
        "id": "Dom.xmlnode.setattributens.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the key attribute value.",
      "variables": {
        "key": {
          "id": "Dom.xmlnode.setattributens.key",
          "type": "var",
          "name": "key",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "key",
            "textToLower": "key",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_key_-1:0"
          },
          "signature": "String key",
          "datatype": {
            "id": "Dom.xmlnode.setattributens.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "Dom.xmlnode.setattributens.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "String value",
          "datatype": {
            "id": "Dom.xmlnode.setattributens.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "keyNamespace": {
          "id": "Dom.xmlnode.setattributens.keynamespace",
          "type": "var",
          "name": "keyNamespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "keyNamespace",
            "textToLower": "keynamespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_keyNamespace_-1:0"
          },
          "signature": "String keyNamespace",
          "datatype": {
            "id": "Dom.xmlnode.setattributens.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "valueNamespace": {
          "id": "Dom.xmlnode.setattributens.valuenamespace",
          "type": "var",
          "name": "valueNamespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "valueNamespace",
            "textToLower": "valuenamespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_valueNamespace_-1:0"
          },
          "signature": "String valueNamespace",
          "datatype": {
            "id": "Dom.xmlnode.setattributens.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setnamespace(string,string)": {
      "id": "Dom.xmlnode.setnamespace",
      "type": "method",
      "name": "setNamespace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setNamespace",
        "textToLower": "setnamespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setNamespace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setNamespace(String prefix, String namespace)",
      "simplifiedSignature": "setNamespace(String,String)",
      "datatype": {
        "id": "Dom.xmlnode.setnamespace.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the namespace for the given prefix.",
      "variables": {
        "prefix": {
          "id": "Dom.xmlnode.setnamespace.prefix",
          "type": "var",
          "name": "prefix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "prefix",
            "textToLower": "prefix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_prefix_-1:0"
          },
          "signature": "String prefix",
          "datatype": {
            "id": "Dom.xmlnode.setnamespace.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "namespace": {
          "id": "Dom.xmlnode.setnamespace.namespace",
          "type": "var",
          "name": "namespace",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "namespace",
            "textToLower": "namespace",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_namespace_-1:0"
          },
          "signature": "String namespace",
          "datatype": {
            "id": "Dom.xmlnode.setnamespace.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}