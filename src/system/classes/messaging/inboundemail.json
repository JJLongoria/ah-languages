{
  "id": "Messaging.inboundemail",
  "type": "class",
  "name": "InboundEmail",
  "namespace": "Messaging",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "InboundEmail",
    "textToLower": "inboundemail",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_InboundEmail_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Represents an inbound email object.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_email_inbound_inbound.htm",
  "classes": {
    "binaryattachment": {
      "id": "Messaging.inboundemail.binaryattachment",
      "type": "class",
      "name": "BinaryAttachment",
      "namespace": "Messaging",
      "startToken": {
        "type": "declaration.entity.name.class",
        "text": "BinaryAttachment",
        "textToLower": "binaryattachment",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.class_BinaryAttachment_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "sharingModifier": {
        "type": "keyword.modifier.sharing",
        "text": "without sharing",
        "textToLower": "without sharing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.sharing_without sharing_-1:0"
      },
      "description": "An InboundEmail object stores binary attachments in an InboundEmail.BinaryAttachment object.",
      "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_email_inbound_binary.htm",
      "classes": {},
      "interfaces": {},
      "enums": {},
      "variables": {
        "body": {
          "id": "Messaging.inboundemail.binaryattachment.body",
          "type": "property",
          "name": "body",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "body",
            "textToLower": "body",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_body_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public Blob body {get; set;}",
          "simplifiedSignature": "Blob body { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.binaryattachment.body.blob",
            "type": "datatype",
            "name": "Blob"
          },
          "description": "The body of the attachment.",
          "getter": {
            "id": "Messaging.inboundemail.binaryattachment.body.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.binaryattachment.body.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        },
        "filename": {
          "id": "Messaging.inboundemail.binaryattachment.filename",
          "type": "property",
          "name": "fileName",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "fileName",
            "textToLower": "filename",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_fileName_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public String fileName {get; set;}",
          "simplifiedSignature": "String fileName { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.binaryattachment.filename.string",
            "type": "datatype",
            "name": "String"
          },
          "description": "The name of the attached file.",
          "getter": {
            "id": "Messaging.inboundemail.binaryattachment.filename.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.binaryattachment.filename.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        },
        "headers": {
          "id": "Messaging.inboundemail.binaryattachment.headers",
          "type": "property",
          "name": "headers",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "headers",
            "textToLower": "headers",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_headers_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public List<Messaging.InboundEmail.Header> headers {get; set;}",
          "simplifiedSignature": "List<Messaging.InboundEmail.Header> headers { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.binaryattachment.headers.list<messaging.inboundemail.header>",
            "type": "datatype",
            "name": "List<Messaging.InboundEmail.Header>"
          },
          "description": "Any header values associated with the attachment. Examples of header names include Content-Type, Content-Transfer-Encoding, and Content-ID.",
          "getter": {
            "id": "Messaging.inboundemail.binaryattachment.headers.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.binaryattachment.headers.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        }
      },
      "methods": {},
      "constructors": {
        "inboundemail.binaryattachment()": {
          "id": "Messaging.inboundemail.binaryattachment.inboundemail.binaryattachment",
          "type": "constructor",
          "name": "InboundEmail.BinaryAttachment",
          "startToken": {
            "type": "declaration.entity.name.function",
            "text": "InboundEmail.BinaryAttachment",
            "textToLower": "inboundemail.binaryattachment",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.function_InboundEmail.BinaryAttachment_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public InboundEmail.BinaryAttachment()",
          "simplifiedSignature": "InboundEmail.BinaryAttachment()",
          "datatype": {
            "id": "Messaging.inboundemail.binaryattachment.inboundemail.binaryattachment.constructor",
            "type": "datatype",
            "name": "BinaryAttachment"
          },
          "description": "Creates a new instance of the Messaging.InboundEmail.BinaryAttachment class.",
          "variables": {}
        }
      },
      "extendsType": "",
      "implementTypes": [],
      "implements": {}
    },
    "header": {
      "id": "Messaging.inboundemail.header",
      "type": "class",
      "name": "Header",
      "namespace": "Messaging",
      "startToken": {
        "type": "declaration.entity.name.class",
        "text": "Header",
        "textToLower": "header",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.class_Header_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "sharingModifier": {
        "type": "keyword.modifier.sharing",
        "text": "without sharing",
        "textToLower": "without sharing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.sharing_without sharing_-1:0"
      },
      "description": "An InboundEmail object stores RFC 2822 email header information in an InboundEmail.Header object with the following properties.",
      "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_email_inbound_header.htm",
      "classes": {},
      "interfaces": {},
      "enums": {},
      "variables": {
        "name": {
          "id": "Messaging.inboundemail.header.name",
          "type": "property",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_name_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public String name {get; set;}",
          "simplifiedSignature": "String name { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.header.name.string",
            "type": "datatype",
            "name": "String"
          },
          "description": "The name of the header parameter, such as Date or Message-ID.",
          "getter": {
            "id": "Messaging.inboundemail.header.name.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.header.name.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        }
      },
      "methods": {},
      "constructors": {},
      "extendsType": "",
      "implementTypes": [],
      "implements": {}
    },
    "textattachment": {
      "id": "Messaging.inboundemail.textattachment",
      "type": "class",
      "name": "TextAttachment",
      "namespace": "Messaging",
      "startToken": {
        "type": "declaration.entity.name.class",
        "text": "TextAttachment",
        "textToLower": "textattachment",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.class_TextAttachment_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "sharingModifier": {
        "type": "keyword.modifier.sharing",
        "text": "without sharing",
        "textToLower": "without sharing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.sharing_without sharing_-1:0"
      },
      "description": "An InboundEmail object stores text attachments in an InboundEmail.TextAttachment object.",
      "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_email_inbound_text.htm",
      "classes": {},
      "interfaces": {},
      "enums": {},
      "variables": {
        "body": {
          "id": "Messaging.inboundemail.textattachment.body",
          "type": "property",
          "name": "body",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "body",
            "textToLower": "body",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_body_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public String body {get; set;}",
          "simplifiedSignature": "String body { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.textattachment.body.string",
            "type": "datatype",
            "name": "String"
          },
          "description": "The body of the attachment.",
          "getter": {
            "id": "Messaging.inboundemail.textattachment.body.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.textattachment.body.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        },
        "bodyistruncated": {
          "id": "Messaging.inboundemail.textattachment.bodyistruncated",
          "type": "property",
          "name": "bodyIsTruncated",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "bodyIsTruncated",
            "textToLower": "bodyistruncated",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_bodyIsTruncated_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public Boolean bodyIsTruncated {get; set;}",
          "simplifiedSignature": "Boolean bodyIsTruncated { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.textattachment.bodyistruncated.boolean",
            "type": "datatype",
            "name": "Boolean"
          },
          "description": "Indicates whether the attachment body text is truncated (true) or not (false.)",
          "getter": {
            "id": "Messaging.inboundemail.textattachment.bodyistruncated.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.textattachment.bodyistruncated.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        },
        "charset": {
          "id": "Messaging.inboundemail.textattachment.charset",
          "type": "property",
          "name": "charset",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "charset",
            "textToLower": "charset",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_charset_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public String charset {get; set;}",
          "simplifiedSignature": "String charset { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.textattachment.charset.string",
            "type": "datatype",
            "name": "String"
          },
          "description": "The original character set of the body field. The body is re-encoded as UTF-8 as input to the Apex method.",
          "getter": {
            "id": "Messaging.inboundemail.textattachment.charset.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.textattachment.charset.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        },
        "filename": {
          "id": "Messaging.inboundemail.textattachment.filename",
          "type": "property",
          "name": "fileName",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "fileName",
            "textToLower": "filename",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_fileName_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public String fileName {get; set;}",
          "simplifiedSignature": "String fileName { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.textattachment.filename.string",
            "type": "datatype",
            "name": "String"
          },
          "description": "The name of the attached file.",
          "getter": {
            "id": "Messaging.inboundemail.textattachment.filename.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.textattachment.filename.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        },
        "headers": {
          "id": "Messaging.inboundemail.textattachment.headers",
          "type": "property",
          "name": "headers",
          "startToken": {
            "type": "declaration.entity.name.property",
            "text": "headers",
            "textToLower": "headers",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.property_headers_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public List<Messaging.InboundEmail.Header> headers {get; set;}",
          "simplifiedSignature": "List<Messaging.InboundEmail.Header> headers { get; set; }",
          "datatype": {
            "id": "Messaging.inboundemail.textattachment.headers.list<messaging.inboundemail.header>",
            "type": "datatype",
            "name": "List<Messaging.InboundEmail.Header>"
          },
          "description": "Any header values associated with the attachment. Examples of header names include Content-Type, Content-Transfer-Encoding, and Content-ID.",
          "getter": {
            "id": "Messaging.inboundemail.textattachment.headers.get",
            "type": "getter",
            "name": "get",
            "startToken": {
              "type": "keyword.declaration.property.getter",
              "text": "get",
              "textToLower": "get",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.getter_get_-1:0"
            }
          },
          "setter": {
            "id": "Messaging.inboundemail.textattachment.headers.set",
            "type": "setter",
            "name": "set",
            "startToken": {
              "type": "keyword.declaration.property.setter",
              "text": "set",
              "textToLower": "set",
              "isAux": false,
              "range": {
                "start": {
                  "line": -1,
                  "character": 0
                },
                "end": {
                  "line": -1,
                  "character": 0
                },
                "isEmpty": true,
                "isSingleLine": true
              },
              "id": "keyword.declaration.property.setter_set_-1:0"
            }
          }
        }
      },
      "methods": {},
      "constructors": {
        "inboundemail.textattachment()": {
          "id": "Messaging.inboundemail.textattachment.inboundemail.textattachment",
          "type": "constructor",
          "name": "InboundEmail.TextAttachment",
          "startToken": {
            "type": "declaration.entity.name.function",
            "text": "InboundEmail.TextAttachment",
            "textToLower": "inboundemail.textattachment",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.function_InboundEmail.TextAttachment_-1:0"
          },
          "accessModifier": {
            "type": "keyword.modifier.access",
            "text": "public",
            "textToLower": "public",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "keyword.modifier.access_public_-1:0"
          },
          "signature": "public InboundEmail.TextAttachment()",
          "simplifiedSignature": "InboundEmail.TextAttachment()",
          "datatype": {
            "id": "Messaging.inboundemail.textattachment.inboundemail.textattachment.constructor",
            "type": "datatype",
            "name": "TextAttachment"
          },
          "description": "Creates a new instance of the Messaging.InboundEmail.TextAttachment class.",
          "variables": {}
        }
      },
      "extendsType": "",
      "implementTypes": [],
      "implements": {}
    }
  },
  "interfaces": {},
  "enums": {},
  "variables": {
    "binaryattachments": {
      "id": "Messaging.inboundemail.binaryattachments",
      "type": "property",
      "name": "binaryAttachments",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "binaryAttachments",
        "textToLower": "binaryattachments",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_binaryAttachments_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public InboundEmail.BinaryAttachment[] binaryAttachments {get; set;}",
      "simplifiedSignature": "InboundEmail.BinaryAttachment[] binaryAttachments { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.binaryattachments.inboundemail.binaryattachment[]",
        "type": "datatype",
        "name": "InboundEmail.BinaryAttachment[]"
      },
      "description": "A list of binary attachments received with the email, if any.",
      "getter": {
        "id": "Messaging.inboundemail.binaryattachments.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.binaryattachments.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "ccaddresses": {
      "id": "Messaging.inboundemail.ccaddresses",
      "type": "property",
      "name": "ccAddresses",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "ccAddresses",
        "textToLower": "ccaddresses",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_ccAddresses_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String[] ccAddresses {get; set;}",
      "simplifiedSignature": "String[] ccAddresses { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.ccaddresses.string[]",
        "type": "datatype",
        "name": "String[]"
      },
      "description": "A list of carbon copy (CC) addresses, if any.",
      "getter": {
        "id": "Messaging.inboundemail.ccaddresses.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.ccaddresses.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "fromaddress": {
      "id": "Messaging.inboundemail.fromaddress",
      "type": "property",
      "name": "fromAddress",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "fromAddress",
        "textToLower": "fromaddress",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_fromAddress_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String fromAddress {get; set;}",
      "simplifiedSignature": "String fromAddress { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.fromaddress.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The email address that appears in the From field.",
      "getter": {
        "id": "Messaging.inboundemail.fromaddress.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.fromaddress.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "fromname": {
      "id": "Messaging.inboundemail.fromname",
      "type": "property",
      "name": "fromName",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "fromName",
        "textToLower": "fromname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_fromName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String fromName {get; set;}",
      "simplifiedSignature": "String fromName { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.fromname.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The name that appears in the From field, if any.",
      "getter": {
        "id": "Messaging.inboundemail.fromname.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.fromname.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "headers": {
      "id": "Messaging.inboundemail.headers",
      "type": "property",
      "name": "headers",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "headers",
        "textToLower": "headers",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_headers_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public InboundEmail.Header[] headers {get; set;}",
      "simplifiedSignature": "InboundEmail.Header[] headers { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.headers.inboundemail.header[]",
        "type": "datatype",
        "name": "InboundEmail.Header[]"
      },
      "description": "A list of the RFC 2822 headers in the email.",
      "getter": {
        "id": "Messaging.inboundemail.headers.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.headers.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "htmlbody": {
      "id": "Messaging.inboundemail.htmlbody",
      "type": "property",
      "name": "htmlBody",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "htmlBody",
        "textToLower": "htmlbody",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_htmlBody_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String htmlBody {get; set;}",
      "simplifiedSignature": "String htmlBody { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.htmlbody.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The HTML version of the email, if specified by the sender.",
      "getter": {
        "id": "Messaging.inboundemail.htmlbody.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.htmlbody.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "htmlbodyistruncated": {
      "id": "Messaging.inboundemail.htmlbodyistruncated",
      "type": "property",
      "name": "htmlBodyIsTruncated",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "htmlBodyIsTruncated",
        "textToLower": "htmlbodyistruncated",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_htmlBodyIsTruncated_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean htmlBodyIsTruncated {get; set;}",
      "simplifiedSignature": "Boolean htmlBodyIsTruncated { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.htmlbodyistruncated.boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the HTML body text is truncated (true) or not (false.)",
      "getter": {
        "id": "Messaging.inboundemail.htmlbodyistruncated.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.htmlbodyistruncated.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "inreplyto": {
      "id": "Messaging.inboundemail.inreplyto",
      "type": "property",
      "name": "inReplyTo",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "inReplyTo",
        "textToLower": "inreplyto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_inReplyTo_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String inReplyTo {get; set;}",
      "simplifiedSignature": "String inReplyTo { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.inreplyto.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The In-Reply-To field of the incoming email. Identifies the email or emails to which this one is a reply (parent emails). Contains the parent email or emails' message-IDs.",
      "getter": {
        "id": "Messaging.inboundemail.inreplyto.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.inreplyto.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "messageid": {
      "id": "Messaging.inboundemail.messageid",
      "type": "property",
      "name": "messageId",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "messageId",
        "textToLower": "messageid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_messageId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String messageId {get; set;}",
      "simplifiedSignature": "String messageId { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.messageid.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The Message-ID—the incoming email's unique identifier.",
      "getter": {
        "id": "Messaging.inboundemail.messageid.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.messageid.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "plaintextbody": {
      "id": "Messaging.inboundemail.plaintextbody",
      "type": "property",
      "name": "plainTextBody",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "plainTextBody",
        "textToLower": "plaintextbody",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_plainTextBody_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String plainTextBody {get; set;}",
      "simplifiedSignature": "String plainTextBody { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.plaintextbody.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The plain text version of the email, if specified by the sender.",
      "getter": {
        "id": "Messaging.inboundemail.plaintextbody.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.plaintextbody.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "plaintextbodyistruncated": {
      "id": "Messaging.inboundemail.plaintextbodyistruncated",
      "type": "property",
      "name": "plainTextBodyIsTruncated",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "plainTextBodyIsTruncated",
        "textToLower": "plaintextbodyistruncated",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_plainTextBodyIsTruncated_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean plainTextBodyIsTruncated {get; set;}",
      "simplifiedSignature": "Boolean plainTextBodyIsTruncated { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.plaintextbodyistruncated.boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the plain body text is truncated (true) or not (false.)",
      "getter": {
        "id": "Messaging.inboundemail.plaintextbodyistruncated.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.plaintextbodyistruncated.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "references": {
      "id": "Messaging.inboundemail.references",
      "type": "property",
      "name": "references",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "references",
        "textToLower": "references",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_references_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String[] references {get; set;}",
      "simplifiedSignature": "String[] references { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.references.string[]",
        "type": "datatype",
        "name": "String[]"
      },
      "description": "The References field of the incoming email. Identifies an email thread. Contains a list of the parent emails' References and message IDs, and possibly the In-Reply-To fields.",
      "getter": {
        "id": "Messaging.inboundemail.references.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.references.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "replyto": {
      "id": "Messaging.inboundemail.replyto",
      "type": "property",
      "name": "replyTo",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "replyTo",
        "textToLower": "replyto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_replyTo_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String replyTo {get; set;}",
      "simplifiedSignature": "String replyTo { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.replyto.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The email address that appears in the reply-to header.",
      "getter": {
        "id": "Messaging.inboundemail.replyto.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.replyto.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "subject": {
      "id": "Messaging.inboundemail.subject",
      "type": "property",
      "name": "subject",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "subject",
        "textToLower": "subject",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_subject_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String subject {get; set;}",
      "simplifiedSignature": "String subject { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.subject.string",
        "type": "datatype",
        "name": "String"
      },
      "description": "The subject line of the email, if any.",
      "getter": {
        "id": "Messaging.inboundemail.subject.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.subject.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    },
    "textattachments": {
      "id": "Messaging.inboundemail.textattachments",
      "type": "property",
      "name": "textAttachments",
      "startToken": {
        "type": "declaration.entity.name.property",
        "text": "textAttachments",
        "textToLower": "textattachments",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.property_textAttachments_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public InboundEmail.TextAttachment[] textAttachments {get; set;}",
      "simplifiedSignature": "InboundEmail.TextAttachment[] textAttachments { get; set; }",
      "datatype": {
        "id": "Messaging.inboundemail.textattachments.inboundemail.textattachment[]",
        "type": "datatype",
        "name": "InboundEmail.TextAttachment[]"
      },
      "description": "A list of text attachments received with the email, if any.",
      "getter": {
        "id": "Messaging.inboundemail.textattachments.get",
        "type": "getter",
        "name": "get",
        "startToken": {
          "type": "keyword.declaration.property.getter",
          "text": "get",
          "textToLower": "get",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.getter_get_-1:0"
        }
      },
      "setter": {
        "id": "Messaging.inboundemail.textattachments.set",
        "type": "setter",
        "name": "set",
        "startToken": {
          "type": "keyword.declaration.property.setter",
          "text": "set",
          "textToLower": "set",
          "isAux": false,
          "range": {
            "start": {
              "line": -1,
              "character": 0
            },
            "end": {
              "line": -1,
              "character": 0
            },
            "isEmpty": true,
            "isSingleLine": true
          },
          "id": "keyword.declaration.property.setter_set_-1:0"
        }
      }
    }
  },
  "methods": {},
  "constructors": {
    "inboundemail()": {
      "id": "Messaging.inboundemail.inboundemail",
      "type": "constructor",
      "name": "InboundEmail",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "InboundEmail",
        "textToLower": "inboundemail",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_InboundEmail_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public InboundEmail()",
      "simplifiedSignature": "InboundEmail()",
      "datatype": {
        "id": "Messaging.inboundemail.inboundemail.constructor",
        "type": "datatype",
        "name": "InboundEmail"
      },
      "description": "Creates a new instance of the Messaging.InboundEmail class.",
      "variables": {}
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}