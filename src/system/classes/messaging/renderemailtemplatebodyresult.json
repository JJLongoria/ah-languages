{
  "id": "Messaging.renderemailtemplatebodyresult",
  "nodeType": "class",
  "name": "RenderEmailTemplateBodyResult",
  "namespace": "Messaging",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "RenderEmailTemplateBodyResult",
    "textToLower": "renderemailtemplatebodyresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_RenderEmailTemplateBodyResult_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains the results for rendering email templates.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Messaging_RenderEmailTemplateBodyResult.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "geterrors()": {
      "id": "Messaging.renderemailtemplatebodyresult.method.geterrors()",
      "nodeType": "method",
      "name": "getErrors",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getErrors",
        "textToLower": "geterrors",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getErrors_-1:0"
      },
      "parentId": "Messaging.renderemailtemplatebodyresult",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public List<Messaging.RenderEmailTemplateError> getErrors()",
      "overrideSignature": "public override List<Messaging.RenderEmailTemplateError> getErrors()",
      "simplifiedSignature": "getErrors()",
      "datatype": {
        "id": "Messaging.renderemailtemplatebodyresult.geterrors.datatype.List<Messaging.RenderEmailTemplateError>",
        "nodeType": "datatype",
        "name": "List<Messaging.RenderEmailTemplateError>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:7"
        },
        "parentId": "Messaging.renderemailtemplatebodyresult.geterrors",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "Messaging.renderemailtemplatebodyresult.geterrors.datatype.List<Messaging.RenderEmailTemplateError>.value.Messaging.RenderEmailTemplateError",
          "nodeType": "datatype",
          "name": "Messaging.RenderEmailTemplateError",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Messaging",
            "textToLower": "messaging",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 12
              },
              "end": {
                "line": 0,
                "character": 21
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Messaging_0:12"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Messaging.RenderEmailTemplateError"
        }
      },
      "description": "If an error occurred during the renderEmailTemplate method, a RenderEmailTemplateError object is returned.",
      "parentName": "RenderEmailTemplateBodyResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getmergedbody()": {
      "id": "Messaging.renderemailtemplatebodyresult.method.getmergedbody()",
      "nodeType": "method",
      "name": "getMergedBody",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getMergedBody",
        "textToLower": "getmergedbody",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getMergedBody_-1:0"
      },
      "parentId": "Messaging.renderemailtemplatebodyresult",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getMergedBody()",
      "overrideSignature": "public override String getMergedBody()",
      "simplifiedSignature": "getMergedBody()",
      "datatype": {
        "id": "Messaging.renderemailtemplatebodyresult.getmergedbody.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Messaging.renderemailtemplatebodyresult.getmergedbody",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the rendered body text with merge field references replaced with the corresponding record data.",
      "parentName": "RenderEmailTemplateBodyResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getsuccess()": {
      "id": "Messaging.renderemailtemplatebodyresult.method.getsuccess()",
      "nodeType": "method",
      "name": "getSuccess",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSuccess",
        "textToLower": "getsuccess",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSuccess_-1:0"
      },
      "parentId": "Messaging.renderemailtemplatebodyresult",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean getSuccess()",
      "overrideSignature": "public override Boolean getSuccess()",
      "simplifiedSignature": "getSuccess()",
      "datatype": {
        "id": "Messaging.renderemailtemplatebodyresult.getsuccess.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Messaging.renderemailtemplatebodyresult.getsuccess",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Indicates whether the operation was successful.",
      "parentName": "RenderEmailTemplateBodyResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 3,
  "queries": []
}