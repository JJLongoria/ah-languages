{
  "id": "Reports.evaluatedcondition",
  "type": "class",
  "name": "EvaluatedCondition",
  "namespace": "Reports",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "EvaluatedCondition",
    "textToLower": "evaluatedcondition",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_EvaluatedCondition_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains the individual components of an evaluated condition for a report notification, such as the aggregate name and label, the operator, and the value that the aggregate is compared to.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_reports_EvaluatedCondition.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getaggregatelabel()": {
      "id": "Reports.evaluatedcondition.getaggregatelabel",
      "type": "method",
      "name": "getAggregateLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAggregateLabel",
        "textToLower": "getaggregatelabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAggregateLabel_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAggregateLabel()",
      "simplifiedSignature": "getAggregateLabel()",
      "datatype": {
        "id": "Reports.evaluatedcondition.getaggregatelabel.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the localized display name of the aggregate.",
      "variables": {}
    },
    "getaggregatename()": {
      "id": "Reports.evaluatedcondition.getaggregatename",
      "type": "method",
      "name": "getAggregateName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAggregateName",
        "textToLower": "getaggregatename",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAggregateName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAggregateName()",
      "simplifiedSignature": "getAggregateName()",
      "datatype": {
        "id": "Reports.evaluatedcondition.getaggregatename.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the unique API name of the aggregate.",
      "variables": {}
    },
    "getcompareto()": {
      "id": "Reports.evaluatedcondition.getcompareto",
      "type": "method",
      "name": "getCompareTo",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCompareTo",
        "textToLower": "getcompareto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCompareTo_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Double getCompareTo()",
      "simplifiedSignature": "getCompareTo()",
      "datatype": {
        "id": "Reports.evaluatedcondition.getcompareto.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the value that the aggregate is compared to in the condition.",
      "variables": {}
    },
    "getdisplaycompareto()": {
      "id": "Reports.evaluatedcondition.getdisplaycompareto",
      "type": "method",
      "name": "getDisplayCompareTo",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDisplayCompareTo",
        "textToLower": "getdisplaycompareto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDisplayCompareTo_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getDisplayCompareTo()",
      "simplifiedSignature": "getDisplayCompareTo()",
      "datatype": {
        "id": "Reports.evaluatedcondition.getdisplaycompareto.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the value that the aggregate is compared to in the condition, formatted for display. For example, a display value for a currency is $20.00 or USD20.00 instead of 20.00.",
      "variables": {}
    },
    "getdisplayvalue()": {
      "id": "Reports.evaluatedcondition.getdisplayvalue",
      "type": "method",
      "name": "getDisplayValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDisplayValue",
        "textToLower": "getdisplayvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDisplayValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getDisplayValue()",
      "simplifiedSignature": "getDisplayValue()",
      "datatype": {
        "id": "Reports.evaluatedcondition.getdisplayvalue.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the value of the aggregate when the report is run, formatted for display. For example, a display value for a currency is $20.00 or USD20.00 instead of 20.00.",
      "variables": {}
    },
    "getoperator()": {
      "id": "Reports.evaluatedcondition.getoperator",
      "type": "method",
      "name": "getOperator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getOperator",
        "textToLower": "getoperator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getOperator_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Reports.EvaluatedConditionOperator getOperator()",
      "simplifiedSignature": "getOperator()",
      "datatype": {
        "id": "Reports.evaluatedcondition.getoperator.Reports.EvaluatedConditionOperator",
        "type": "datatype",
        "name": "Reports.EvaluatedConditionOperator"
      },
      "description": "Returns the operator used in the condition.",
      "variables": {}
    },
    "getvalue()": {
      "id": "Reports.evaluatedcondition.getvalue",
      "type": "method",
      "name": "getValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getValue",
        "textToLower": "getvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Double getValue()",
      "simplifiedSignature": "getValue()",
      "datatype": {
        "id": "Reports.evaluatedcondition.getvalue.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the actual value of the aggregate when the report is run.",
      "variables": {}
    }
  },
  "constructors": {
    "evaluatedcondition(string,string,double,double,string,string,reports.evaluatedconditionoperator)": {
      "id": "Reports.evaluatedcondition.evaluatedcondition",
      "type": "constructor",
      "name": "EvaluatedCondition",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "EvaluatedCondition",
        "textToLower": "evaluatedcondition",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_EvaluatedCondition_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public EvaluatedCondition(String aggregateName, String aggregateLabel, Double compareToValue, Double aggregateValue, String displayCompareTo, String displayValue, Reports.EvaluatedConditionOperator operator)",
      "simplifiedSignature": "EvaluatedCondition(String,String,Double,Double,String,String,Reports.EvaluatedConditionOperator)",
      "datatype": {
        "id": "Reports.evaluatedcondition.evaluatedcondition.constructor",
        "type": "datatype",
        "name": "EvaluatedCondition"
      },
      "description": "Creates a new instance of the Reports.EvaluatedConditions class using the specified parameters.",
      "variables": {
        "aggregateName": {
          "id": "Reports.evaluatedcondition.evaluatedcondition.aggregatename",
          "type": "var",
          "name": "aggregateName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "aggregateName",
            "textToLower": "aggregatename",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_aggregateName_-1:0"
          },
          "signature": "String aggregateName",
          "datatype": {
            "id": "Reports.evaluatedcondition.evaluatedcondition.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "aggregateLabel": {
          "id": "Reports.evaluatedcondition.evaluatedcondition.aggregatelabel",
          "type": "var",
          "name": "aggregateLabel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "aggregateLabel",
            "textToLower": "aggregatelabel",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_aggregateLabel_-1:0"
          },
          "signature": "String aggregateLabel",
          "datatype": {
            "id": "Reports.evaluatedcondition.evaluatedcondition.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "compareToValue": {
          "id": "Reports.evaluatedcondition.evaluatedcondition.comparetovalue",
          "type": "var",
          "name": "compareToValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "compareToValue",
            "textToLower": "comparetovalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_compareToValue_-1:0"
          },
          "signature": "Double compareToValue",
          "datatype": {
            "id": "Reports.evaluatedcondition.evaluatedcondition.double",
            "type": "datatype",
            "name": "Double"
          }
        },
        "aggregateValue": {
          "id": "Reports.evaluatedcondition.evaluatedcondition.aggregatevalue",
          "type": "var",
          "name": "aggregateValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "aggregateValue",
            "textToLower": "aggregatevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_aggregateValue_-1:0"
          },
          "signature": "Double aggregateValue",
          "datatype": {
            "id": "Reports.evaluatedcondition.evaluatedcondition.double",
            "type": "datatype",
            "name": "Double"
          }
        },
        "displayCompareTo": {
          "id": "Reports.evaluatedcondition.evaluatedcondition.displaycompareto",
          "type": "var",
          "name": "displayCompareTo",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "displayCompareTo",
            "textToLower": "displaycompareto",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_displayCompareTo_-1:0"
          },
          "signature": "String displayCompareTo",
          "datatype": {
            "id": "Reports.evaluatedcondition.evaluatedcondition.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "displayValue": {
          "id": "Reports.evaluatedcondition.evaluatedcondition.displayvalue",
          "type": "var",
          "name": "displayValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "displayValue",
            "textToLower": "displayvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_displayValue_-1:0"
          },
          "signature": "String displayValue",
          "datatype": {
            "id": "Reports.evaluatedcondition.evaluatedcondition.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "operator": {
          "id": "Reports.evaluatedcondition.evaluatedcondition.operator",
          "type": "var",
          "name": "operator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "operator",
            "textToLower": "operator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_operator_-1:0"
          },
          "signature": "Reports.EvaluatedConditionOperator operator",
          "datatype": {
            "id": "Reports.evaluatedcondition.evaluatedcondition.reports.evaluatedconditionoperator",
            "type": "datatype",
            "name": "Reports.EvaluatedConditionOperator"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}