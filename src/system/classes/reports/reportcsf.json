{
  "id": "Reports.reportcsf",
  "nodeType": "class",
  "name": "ReportCsf",
  "namespace": "Reports",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ReportCsf",
    "textToLower": "reportcsf",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ReportCsf_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods and constructors for working with information about a custom summary formula (CSF).",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_reports_ReportCsf.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getacrossgroup()": {
      "id": "Reports.reportcsf.getacrossgroup",
      "nodeType": "method",
      "name": "getAcrossGroup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAcrossGroup",
        "textToLower": "getacrossgroup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAcrossGroup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAcrossGroup()",
      "simplifiedSignature": "getAcrossGroup()",
      "datatype": {
        "id": "Reports.reportcsf.getacrossgroup.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the name of a column grouping when the acrossGroupType is CUSTOM. Otherwise, returns null.",
      "params": {}
    },
    "getacrossgrouptype()": {
      "id": "Reports.reportcsf.getacrossgrouptype",
      "nodeType": "method",
      "name": "getAcrossGroupType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAcrossGroupType",
        "textToLower": "getacrossgrouptype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAcrossGroupType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Reports.CsfGroupType getAcrossGroupType()",
      "simplifiedSignature": "getAcrossGroupType()",
      "datatype": {
        "id": "Reports.reportcsf.getacrossgrouptype.Reports.CsfGroupType",
        "nodeType": "datatype",
        "name": "Reports.CsfGroupType"
      },
      "description": "Returns where to display the aggregate.",
      "params": {}
    },
    "getdecimalplaces()": {
      "id": "Reports.reportcsf.getdecimalplaces",
      "nodeType": "method",
      "name": "getDecimalPlaces",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDecimalPlaces",
        "textToLower": "getdecimalplaces",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDecimalPlaces_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer getDecimalPlaces()",
      "simplifiedSignature": "getDecimalPlaces()",
      "datatype": {
        "id": "Reports.reportcsf.getdecimalplaces.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of decimal places that numbers in the custom summary formula have.",
      "params": {}
    },
    "getdescription()": {
      "id": "Reports.reportcsf.getdescription",
      "nodeType": "method",
      "name": "getDescription",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDescription",
        "textToLower": "getdescription",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDescription_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getDescription()",
      "simplifiedSignature": "getDescription()",
      "datatype": {
        "id": "Reports.reportcsf.getdescription.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the user-facing description of a custom summary formula.",
      "params": {}
    },
    "getdowngroup()": {
      "id": "Reports.reportcsf.getdowngroup",
      "nodeType": "method",
      "name": "getDownGroup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDownGroup",
        "textToLower": "getdowngroup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDownGroup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getDownGroup()",
      "simplifiedSignature": "getDownGroup()",
      "datatype": {
        "id": "Reports.reportcsf.getdowngroup.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the name of a row grouping when the downGroupType is CUSTOM. Otherwise, returns null.",
      "params": {}
    },
    "getdowngrouptype()": {
      "id": "Reports.reportcsf.getdowngrouptype",
      "nodeType": "method",
      "name": "getDownGroupType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDownGroupType",
        "textToLower": "getdowngrouptype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDownGroupType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Reports.CsfGroupType getDownGroupType()",
      "simplifiedSignature": "getDownGroupType()",
      "datatype": {
        "id": "Reports.reportcsf.getdowngrouptype.Reports.CsfGroupType",
        "nodeType": "datatype",
        "name": "Reports.CsfGroupType"
      },
      "description": "Returns where to display the aggregate of the custom summary formula.",
      "params": {}
    },
    "getformula()": {
      "id": "Reports.reportcsf.getformula",
      "nodeType": "method",
      "name": "getFormula",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFormula",
        "textToLower": "getformula",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFormula_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getFormula()",
      "simplifiedSignature": "getFormula()",
      "datatype": {
        "id": "Reports.reportcsf.getformula.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the operations performed on values in the custom summary formula.",
      "params": {}
    },
    "getformulatype()": {
      "id": "Reports.reportcsf.getformulatype",
      "nodeType": "method",
      "name": "getFormulaType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFormulaType",
        "textToLower": "getformulatype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFormulaType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Reports.FormulaType getFormulaType()",
      "simplifiedSignature": "getFormulaType()",
      "datatype": {
        "id": "Reports.reportcsf.getformulatype.Reports.FormulaType",
        "nodeType": "datatype",
        "name": "Reports.FormulaType"
      },
      "description": "Returns the formula type.",
      "params": {}
    },
    "getlabel()": {
      "id": "Reports.reportcsf.getlabel",
      "nodeType": "method",
      "name": "getLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLabel",
        "textToLower": "getlabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLabel_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getLabel()",
      "simplifiedSignature": "getLabel()",
      "datatype": {
        "id": "Reports.reportcsf.getlabel.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the user-facing name of the custom summary formula.",
      "params": {}
    },
    "setacrossgroup(string)": {
      "id": "Reports.reportcsf.setacrossgroup",
      "nodeType": "method",
      "name": "setAcrossGroup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAcrossGroup",
        "textToLower": "setacrossgroup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAcrossGroup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setAcrossGroup(String acrossGroup)",
      "simplifiedSignature": "setAcrossGroup(String)",
      "datatype": {
        "id": "Reports.reportcsf.setacrossgroup.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Specifies the column for the across grouping.",
      "params": {
        "acrossGroup": {
          "id": "Reports.reportcsf.setacrossgroup.acrossgroup",
          "type": "var",
          "name": "acrossGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "acrossGroup",
            "textToLower": "acrossgroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_acrossGroup_-1:0"
          },
          "signature": "String acrossGroup",
          "datatype": {
            "id": "Reports.reportcsf.setacrossgroup.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setacrossgrouptype(string)": {
      "id": "Reports.reportcsf.setacrossgrouptype",
      "nodeType": "method",
      "name": "setAcrossGroupType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAcrossGroupType",
        "textToLower": "setacrossgrouptype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAcrossGroupType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setAcrossGroupType(String value)",
      "simplifiedSignature": "setAcrossGroupType(String)",
      "datatype": {
        "id": "Reports.reportcsf.setacrossgrouptype.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets where to display the aggregate.",
      "params": {
        "value": {
          "id": "Reports.reportcsf.setacrossgrouptype.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "String value",
          "datatype": {
            "id": "Reports.reportcsf.setacrossgrouptype.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setacrossgrouptype(reports.csfgrouptype)": {
      "id": "Reports.reportcsf.setacrossgrouptype",
      "nodeType": "method",
      "name": "setAcrossGroupType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAcrossGroupType",
        "textToLower": "setacrossgrouptype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAcrossGroupType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setAcrossGroupType(Reports.CsfGroupType acrossGroupType)",
      "simplifiedSignature": "setAcrossGroupType(Reports.CsfGroupType)",
      "datatype": {
        "id": "Reports.reportcsf.setacrossgrouptype.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets where to display the aggregate.",
      "params": {
        "acrossGroupType": {
          "id": "Reports.reportcsf.setacrossgrouptype.acrossgrouptype",
          "type": "var",
          "name": "acrossGroupType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "acrossGroupType",
            "textToLower": "acrossgrouptype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_acrossGroupType_-1:0"
          },
          "signature": "Reports.CsfGroupType acrossGroupType",
          "datatype": {
            "id": "Reports.reportcsf.setacrossgrouptype.reports.csfgrouptype",
            "nodeType": "datatype",
            "name": "Reports.CsfGroupType"
          }
        }
      }
    },
    "setdecimalplaces(integer)": {
      "id": "Reports.reportcsf.setdecimalplaces",
      "nodeType": "method",
      "name": "setDecimalPlaces",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDecimalPlaces",
        "textToLower": "setdecimalplaces",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDecimalPlaces_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDecimalPlaces(Integer decimalPlaces)",
      "simplifiedSignature": "setDecimalPlaces(Integer)",
      "datatype": {
        "id": "Reports.reportcsf.setdecimalplaces.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the number of decimal places in numbers.",
      "params": {
        "decimalPlaces": {
          "id": "Reports.reportcsf.setdecimalplaces.decimalplaces",
          "type": "var",
          "name": "decimalPlaces",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalPlaces",
            "textToLower": "decimalplaces",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalPlaces_-1:0"
          },
          "signature": "Integer decimalPlaces",
          "datatype": {
            "id": "Reports.reportcsf.setdecimalplaces.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "setdescription(string)": {
      "id": "Reports.reportcsf.setdescription",
      "nodeType": "method",
      "name": "setDescription",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDescription",
        "textToLower": "setdescription",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDescription_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDescription(String description)",
      "simplifiedSignature": "setDescription(String)",
      "datatype": {
        "id": "Reports.reportcsf.setdescription.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the user-facing description of the custom summary formula.",
      "params": {
        "description": {
          "id": "Reports.reportcsf.setdescription.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "Reports.reportcsf.setdescription.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setdowngroup(string)": {
      "id": "Reports.reportcsf.setdowngroup",
      "nodeType": "method",
      "name": "setDownGroup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDownGroup",
        "textToLower": "setdowngroup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDownGroup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDownGroup(String downGroup)",
      "simplifiedSignature": "setDownGroup(String)",
      "datatype": {
        "id": "Reports.reportcsf.setdowngroup.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the name of a row grouping when the downGroupType is CUSTOM.",
      "params": {
        "downGroup": {
          "id": "Reports.reportcsf.setdowngroup.downgroup",
          "type": "var",
          "name": "downGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "downGroup",
            "textToLower": "downgroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_downGroup_-1:0"
          },
          "signature": "String downGroup",
          "datatype": {
            "id": "Reports.reportcsf.setdowngroup.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setdowngrouptype(string)": {
      "id": "Reports.reportcsf.setdowngrouptype",
      "nodeType": "method",
      "name": "setDownGroupType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDownGroupType",
        "textToLower": "setdowngrouptype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDownGroupType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDownGroupType(String value)",
      "simplifiedSignature": "setDownGroupType(String)",
      "datatype": {
        "id": "Reports.reportcsf.setdowngrouptype.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets where to display the aggregate.",
      "params": {
        "value": {
          "id": "Reports.reportcsf.setdowngrouptype.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "String value",
          "datatype": {
            "id": "Reports.reportcsf.setdowngrouptype.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setdowngrouptype(reports.csfgrouptype)": {
      "id": "Reports.reportcsf.setdowngrouptype",
      "nodeType": "method",
      "name": "setDownGroupType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDownGroupType",
        "textToLower": "setdowngrouptype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDownGroupType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDownGroupType(Reports.CsfGroupType downGroupType)",
      "simplifiedSignature": "setDownGroupType(Reports.CsfGroupType)",
      "datatype": {
        "id": "Reports.reportcsf.setdowngrouptype.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets where to display the aggregate.",
      "params": {
        "downGroupType": {
          "id": "Reports.reportcsf.setdowngrouptype.downgrouptype",
          "type": "var",
          "name": "downGroupType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "downGroupType",
            "textToLower": "downgrouptype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_downGroupType_-1:0"
          },
          "signature": "Reports.CsfGroupType downGroupType",
          "datatype": {
            "id": "Reports.reportcsf.setdowngrouptype.reports.csfgrouptype",
            "nodeType": "datatype",
            "name": "Reports.CsfGroupType"
          }
        }
      }
    },
    "setformula(string)": {
      "id": "Reports.reportcsf.setformula",
      "nodeType": "method",
      "name": "setFormula",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setFormula",
        "textToLower": "setformula",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setFormula_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setFormula(String formula)",
      "simplifiedSignature": "setFormula(String)",
      "datatype": {
        "id": "Reports.reportcsf.setformula.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the operations to perform on values in the custom summary formula.",
      "params": {
        "formula": {
          "id": "Reports.reportcsf.setformula.formula",
          "type": "var",
          "name": "formula",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formula",
            "textToLower": "formula",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formula_-1:0"
          },
          "signature": "String formula",
          "datatype": {
            "id": "Reports.reportcsf.setformula.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setformulatype(string)": {
      "id": "Reports.reportcsf.setformulatype",
      "nodeType": "method",
      "name": "setFormulaType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setFormulaType",
        "textToLower": "setformulatype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setFormulaType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setFormulaType(String value)",
      "simplifiedSignature": "setFormulaType(String)",
      "datatype": {
        "id": "Reports.reportcsf.setformulatype.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the format of the numbers in the custom summary formula.",
      "params": {
        "value": {
          "id": "Reports.reportcsf.setformulatype.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "String value",
          "datatype": {
            "id": "Reports.reportcsf.setformulatype.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setformulatype(reports.formulatype)": {
      "id": "Reports.reportcsf.setformulatype",
      "nodeType": "method",
      "name": "setFormulaType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setFormulaType",
        "textToLower": "setformulatype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setFormulaType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setFormulaType(Reports.FormulaType formulaType)",
      "simplifiedSignature": "setFormulaType(Reports.FormulaType)",
      "datatype": {
        "id": "Reports.reportcsf.setformulatype.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the format of numbers used in the custom summary formula.",
      "params": {
        "formulaType": {
          "id": "Reports.reportcsf.setformulatype.formulatype",
          "type": "var",
          "name": "formulaType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formulaType",
            "textToLower": "formulatype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formulaType_-1:0"
          },
          "signature": "Reports.FormulaType formulaType",
          "datatype": {
            "id": "Reports.reportcsf.setformulatype.reports.formulatype",
            "nodeType": "datatype",
            "name": "Reports.FormulaType"
          }
        }
      }
    },
    "setlabel(string)": {
      "id": "Reports.reportcsf.setlabel",
      "nodeType": "method",
      "name": "setLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setLabel",
        "textToLower": "setlabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setLabel_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setLabel(String label)",
      "simplifiedSignature": "setLabel(String)",
      "datatype": {
        "id": "Reports.reportcsf.setlabel.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the user-facing name of the custom summary formula.",
      "params": {
        "label": {
          "id": "Reports.reportcsf.setlabel.label",
          "type": "var",
          "name": "label",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "label",
            "textToLower": "label",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_label_-1:0"
          },
          "signature": "String label",
          "datatype": {
            "id": "Reports.reportcsf.setlabel.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "tostring()": {
      "id": "Reports.reportcsf.tostring",
      "nodeType": "method",
      "name": "toString",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toString",
        "textToLower": "tostring",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toString_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toString()",
      "simplifiedSignature": "toString()",
      "datatype": {
        "id": "Reports.reportcsf.tostring.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns a string.",
      "params": {}
    }
  },
  "constructors": {
    "reportcsf(string,string,reports.formulatype,integer,string,reports.csfgrouptype,string,reports.csfgrouptype,string)": {
      "id": "Reports.reportcsf.reportcsf",
      "nodeType": "constructor",
      "name": "ReportCsf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "ReportCsf",
        "textToLower": "reportcsf",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_ReportCsf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ReportCsf(String label, String description, Reports.FormulaType formulaType, Integer decimalPlaces, String downGroup, Reports.CsfGroupType downGroupType, String acrossGroup, Reports.CsfGroupType acrossGroupType, String formula)",
      "simplifiedSignature": "ReportCsf(String,String,Reports.FormulaType,Integer,String,Reports.CsfGroupType,String,Reports.CsfGroupType,String)",
      "datatype": {
        "id": "Reports.reportcsf.reportcsf.constructor",
        "nodeType": "datatype",
        "name": "ReportCsf"
      },
      "description": "Creates an instance of the Reports.ReportCsf class using the specified parameters.",
      "params": {
        "label": {
          "id": "Reports.reportcsf.reportcsf.label",
          "type": "var",
          "name": "label",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "label",
            "textToLower": "label",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_label_-1:0"
          },
          "signature": "String label",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "description": {
          "id": "Reports.reportcsf.reportcsf.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "formulaType": {
          "id": "Reports.reportcsf.reportcsf.formulatype",
          "type": "var",
          "name": "formulaType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formulaType",
            "textToLower": "formulatype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formulaType_-1:0"
          },
          "signature": "Reports.FormulaType formulaType",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.reports.formulatype",
            "nodeType": "datatype",
            "name": "Reports.FormulaType"
          }
        },
        "decimalPlaces": {
          "id": "Reports.reportcsf.reportcsf.decimalplaces",
          "type": "var",
          "name": "decimalPlaces",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalPlaces",
            "textToLower": "decimalplaces",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalPlaces_-1:0"
          },
          "signature": "Integer decimalPlaces",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        },
        "downGroup": {
          "id": "Reports.reportcsf.reportcsf.downgroup",
          "type": "var",
          "name": "downGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "downGroup",
            "textToLower": "downgroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_downGroup_-1:0"
          },
          "signature": "String downGroup",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "downGroupType": {
          "id": "Reports.reportcsf.reportcsf.downgrouptype",
          "type": "var",
          "name": "downGroupType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "downGroupType",
            "textToLower": "downgrouptype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_downGroupType_-1:0"
          },
          "signature": "Reports.CsfGroupType downGroupType",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.reports.csfgrouptype",
            "nodeType": "datatype",
            "name": "Reports.CsfGroupType"
          }
        },
        "acrossGroup": {
          "id": "Reports.reportcsf.reportcsf.acrossgroup",
          "type": "var",
          "name": "acrossGroup",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "acrossGroup",
            "textToLower": "acrossgroup",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_acrossGroup_-1:0"
          },
          "signature": "String acrossGroup",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "acrossGroupType": {
          "id": "Reports.reportcsf.reportcsf.acrossgrouptype",
          "type": "var",
          "name": "acrossGroupType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "acrossGroupType",
            "textToLower": "acrossgrouptype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_acrossGroupType_-1:0"
          },
          "signature": "Reports.CsfGroupType acrossGroupType",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.reports.csfgrouptype",
            "nodeType": "datatype",
            "name": "Reports.CsfGroupType"
          }
        },
        "formula": {
          "id": "Reports.reportcsf.reportcsf.formula",
          "type": "var",
          "name": "formula",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "formula",
            "textToLower": "formula",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_formula_-1:0"
          },
          "signature": "String formula",
          "datatype": {
            "id": "Reports.reportcsf.reportcsf.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "reportcsf()": {
      "id": "Reports.reportcsf.reportcsf",
      "nodeType": "constructor",
      "name": "ReportCsf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "ReportCsf",
        "textToLower": "reportcsf",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_ReportCsf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ReportCsf()",
      "simplifiedSignature": "ReportCsf()",
      "datatype": {
        "id": "Reports.reportcsf.reportcsf.constructor",
        "nodeType": "datatype",
        "name": "ReportCsf"
      },
      "description": "Creates an instance of the Reports.ReportCsf class. You can then set values by using the class’s set methods.",
      "params": {}
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}