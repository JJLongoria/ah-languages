{
  "id": "Reports.reportfilter",
  "type": "class",
  "name": "ReportFilter",
  "namespace": "Reports",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ReportFilter",
    "textToLower": "reportfilter",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ReportFilter_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains information about a report filter, including column, operator, and value.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_reports_reportfilter.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getcolumn()": {
      "id": "Reports.reportfilter.getcolumn",
      "type": "method",
      "name": "getColumn",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getColumn",
        "textToLower": "getcolumn",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getColumn_-1:0"
      },
      "signature": "String getColumn()",
      "simplifiedSignature": "getColumn()",
      "datatype": {
        "id": "Reports.reportfilter.getcolumn.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the unique API name for the field that’s being filtered.",
      "variables": {}
    },
    "getoperator()": {
      "id": "Reports.reportfilter.getoperator",
      "type": "method",
      "name": "getOperator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getOperator",
        "textToLower": "getoperator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getOperator_-1:0"
      },
      "signature": "String getOperator()",
      "simplifiedSignature": "getOperator()",
      "datatype": {
        "id": "Reports.reportfilter.getoperator.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the unique API name for the condition that is used to filter a field, such as “greater than” or “not equal to.” Filter conditions depend on the data type of the field.",
      "variables": {}
    },
    "getvalue()": {
      "id": "Reports.reportfilter.getvalue",
      "type": "method",
      "name": "getValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getValue",
        "textToLower": "getvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getValue_-1:0"
      },
      "signature": "String getValue()",
      "simplifiedSignature": "getValue()",
      "datatype": {
        "id": "Reports.reportfilter.getvalue.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the value by which a field can be filtered. For example, the field Age can be filtered by a numeric value.",
      "variables": {}
    },
    "setcolumn()": {
      "id": "Reports.reportfilter.setcolumn",
      "type": "method",
      "name": "setColumn",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setColumn",
        "textToLower": "setcolumn",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setColumn_-1:0"
      },
      "signature": "void setColumn()",
      "simplifiedSignature": "setColumn()",
      "datatype": {
        "id": "Reports.reportfilter.setcolumn.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the unique API name for the field that’s being filtered.",
      "variables": {}
    },
    "setoperator()": {
      "id": "Reports.reportfilter.setoperator",
      "type": "method",
      "name": "setOperator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setOperator",
        "textToLower": "setoperator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setOperator_-1:0"
      },
      "signature": "void setOperator()",
      "simplifiedSignature": "setOperator()",
      "datatype": {
        "id": "Reports.reportfilter.setoperator.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the unique API name for the condition that is used to filter a field, such as “greater than” or “not equal to.” Filter conditions depend on the data type of the field.",
      "variables": {}
    },
    "setvalue()": {
      "id": "Reports.reportfilter.setvalue",
      "type": "method",
      "name": "setValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setValue",
        "textToLower": "setvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setValue_-1:0"
      },
      "signature": "void setValue()",
      "simplifiedSignature": "setValue()",
      "datatype": {
        "id": "Reports.reportfilter.setvalue.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the value by which a field can be filtered. For example, the field Age can be filtered by a numeric value.",
      "variables": {}
    }
  },
  "constructors": {
    "reportfilter()": {
      "id": "Reports.reportfilter.reportfilter",
      "type": "constructor",
      "name": "ReportFilter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "ReportFilter",
        "textToLower": "reportfilter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_ReportFilter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ReportFilter()",
      "simplifiedSignature": "ReportFilter()",
      "datatype": {
        "id": "Reports.reportfilter.reportfilter.constructor",
        "type": "datatype",
        "name": "ReportFilter"
      },
      "description": "Creates a new instance of the Reports.ReportFilter class. You can then set values by using the “set” methods.",
      "variables": {}
    },
    "reportfilter(string,string,string)": {
      "id": "Reports.reportfilter.reportfilter",
      "type": "constructor",
      "name": "ReportFilter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "ReportFilter",
        "textToLower": "reportfilter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_ReportFilter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ReportFilter(String column, String operator, String value)",
      "simplifiedSignature": "ReportFilter(String,String,String)",
      "datatype": {
        "id": "Reports.reportfilter.reportfilter.constructor",
        "type": "datatype",
        "name": "ReportFilter"
      },
      "description": "Creates a new instance of the Reports.ReportFilter class by using the specified parameters.",
      "variables": {
        "column": {
          "id": "Reports.reportfilter.reportfilter.column",
          "type": "var",
          "name": "column",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "column",
            "textToLower": "column",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_column_-1:0"
          },
          "signature": "String column",
          "datatype": {
            "id": "Reports.reportfilter.reportfilter.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "operator": {
          "id": "Reports.reportfilter.reportfilter.operator",
          "type": "var",
          "name": "operator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "operator",
            "textToLower": "operator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_operator_-1:0"
          },
          "signature": "String operator",
          "datatype": {
            "id": "Reports.reportfilter.reportfilter.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "Reports.reportfilter.reportfilter.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "String value",
          "datatype": {
            "id": "Reports.reportfilter.reportfilter.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}