{
  "id": "Reports.reportmetadata",
  "type": "class",
  "name": "ReportMetadata",
  "namespace": "Reports",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ReportMetadata",
    "textToLower": "reportmetadata",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ReportMetadata_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains report metadata for a tabular, summary, or matrix report.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_reports_reportmetadata.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getaggregates()": {
      "id": "Reports.reportmetadata.getaggregates",
      "type": "method",
      "name": "getAggregates",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAggregates",
        "textToLower": "getaggregates",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAggregates_-1:0"
      },
      "signature": "List<String> getAggregates()",
      "simplifiedSignature": "getAggregates()",
      "datatype": {
        "id": "Reports.reportmetadata.getaggregates.List<String>",
        "type": "datatype",
        "name": "List<String>"
      },
      "description": "Returns unique identifiers for summary or custom summary formula fields in the report.",
      "variables": {}
    },
    "getbuckets()": {
      "id": "Reports.reportmetadata.getbuckets",
      "type": "method",
      "name": "getBuckets",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBuckets",
        "textToLower": "getbuckets",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBuckets_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Reports.BucketField> getBuckets()",
      "simplifiedSignature": "getBuckets()",
      "datatype": {
        "id": "Reports.reportmetadata.getbuckets.List<Reports.BucketField>",
        "type": "datatype",
        "name": "List<Reports.BucketField>"
      },
      "description": "Returns a list of bucket fields in the report.",
      "variables": {}
    },
    "getcrossfilters()": {
      "id": "Reports.reportmetadata.getcrossfilters",
      "type": "method",
      "name": "getCrossFilters",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCrossFilters",
        "textToLower": "getcrossfilters",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCrossFilters_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Reports.CrossFilter> getCrossFilters()",
      "simplifiedSignature": "getCrossFilters()",
      "datatype": {
        "id": "Reports.reportmetadata.getcrossfilters.List<Reports.CrossFilter>",
        "type": "datatype",
        "name": "List<Reports.CrossFilter>"
      },
      "description": "Returns information about cross filters applied to a report.",
      "variables": {}
    },
    "getcurrencycode()": {
      "id": "Reports.reportmetadata.getcurrencycode",
      "type": "method",
      "name": "getCurrencyCode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCurrencyCode",
        "textToLower": "getcurrencycode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCurrencyCode_-1:0"
      },
      "signature": "String getCurrencyCode()",
      "simplifiedSignature": "getCurrencyCode()",
      "datatype": {
        "id": "Reports.reportmetadata.getcurrencycode.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns report currency, such as USD, EUR, or GBP, for an organization that has multicurrency enabled. The value is null if the organization does not have multicurrency enabled.",
      "variables": {}
    },
    "getcustomsummaryformula()": {
      "id": "Reports.reportmetadata.getcustomsummaryformula",
      "type": "method",
      "name": "getCustomSummaryFormula",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCustomSummaryFormula",
        "textToLower": "getcustomsummaryformula",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCustomSummaryFormula_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Map<String, Reports.ReportCsf> getCustomSummaryFormula()",
      "simplifiedSignature": "getCustomSummaryFormula()",
      "datatype": {
        "id": "Reports.reportmetadata.getcustomsummaryformula.Map<String, Reports.ReportCsf>",
        "type": "datatype",
        "name": "Map<String, Reports.ReportCsf>"
      },
      "description": "Returns information about custom summary formulas in a report.",
      "variables": {}
    },
    "getdescription()": {
      "id": "Reports.reportmetadata.getdescription",
      "type": "method",
      "name": "getDescription",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDescription",
        "textToLower": "getdescription",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDescription_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getDescription()",
      "simplifiedSignature": "getDescription()",
      "datatype": {
        "id": "Reports.reportmetadata.getdescription.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the description of the report.",
      "variables": {}
    },
    "getdetailcolumns()": {
      "id": "Reports.reportmetadata.getdetailcolumns",
      "type": "method",
      "name": "getDetailColumns",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDetailColumns",
        "textToLower": "getdetailcolumns",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDetailColumns_-1:0"
      },
      "signature": "List<String> getDetailColumns()",
      "simplifiedSignature": "getDetailColumns()",
      "datatype": {
        "id": "Reports.reportmetadata.getdetailcolumns.List<String>",
        "type": "datatype",
        "name": "List<String>"
      },
      "description": "Returns unique API names (column names) for the fields that contain detailed data. For example, the method might return the following values: “OPPORTUNITY_NAME, TYPE, LEAD_SOURCE, AMOUNT.”",
      "variables": {}
    },
    "getdevelopername()": {
      "id": "Reports.reportmetadata.getdevelopername",
      "type": "method",
      "name": "getDeveloperName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDeveloperName",
        "textToLower": "getdevelopername",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDeveloperName_-1:0"
      },
      "signature": "String getDeveloperName()",
      "simplifiedSignature": "getDeveloperName()",
      "datatype": {
        "id": "Reports.reportmetadata.getdevelopername.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the report API name. For example, the method might return the following value: “Closed_Sales_This_Quarter.”",
      "variables": {}
    },
    "getdivision(such)": {
      "id": "Reports.reportmetadata.getdivision",
      "type": "method",
      "name": "getDivision",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDivision",
        "textToLower": "getdivision",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDivision_-1:0"
      },
      "signature": "String getDivision(such as)",
      "simplifiedSignature": "getDivision(such)",
      "datatype": {
        "id": "Reports.reportmetadata.getdivision.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the division specified in the report.",
      "variables": {
        "as": {
          "id": "Reports.reportmetadata.getdivision.as",
          "type": "var",
          "name": "as",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "as",
            "textToLower": "as",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_as_-1:0"
          },
          "signature": "such as",
          "datatype": {
            "id": "Reports.reportmetadata.getdivision.such",
            "type": "datatype",
            "name": "such"
          }
        }
      }
    },
    "getgroupingsacross()": {
      "id": "Reports.reportmetadata.getgroupingsacross",
      "type": "method",
      "name": "getGroupingsAcross",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getGroupingsAcross",
        "textToLower": "getgroupingsacross",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getGroupingsAcross_-1:0"
      },
      "signature": "List<Reports.GroupingInfo> getGroupingsAcross()",
      "simplifiedSignature": "getGroupingsAcross()",
      "datatype": {
        "id": "Reports.reportmetadata.getgroupingsacross.List<Reports.GroupingInfo>",
        "type": "datatype",
        "name": "List<Reports.GroupingInfo>"
      },
      "description": "Returns column groupings in a report.",
      "variables": {}
    },
    "getgroupingsdown()": {
      "id": "Reports.reportmetadata.getgroupingsdown",
      "type": "method",
      "name": "getGroupingsDown",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getGroupingsDown",
        "textToLower": "getgroupingsdown",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getGroupingsDown_-1:0"
      },
      "signature": "List<Reports.GroupingInfo> getGroupingsDown()",
      "simplifiedSignature": "getGroupingsDown()",
      "datatype": {
        "id": "Reports.reportmetadata.getgroupingsdown.List<Reports.GroupingInfo>",
        "type": "datatype",
        "name": "List<Reports.GroupingInfo>"
      },
      "description": "Returns row groupings for a report.",
      "variables": {}
    },
    "gethasdetailrows()": {
      "id": "Reports.reportmetadata.gethasdetailrows",
      "type": "method",
      "name": "getHasDetailRows",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getHasDetailRows",
        "textToLower": "gethasdetailrows",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getHasDetailRows_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean getHasDetailRows()",
      "simplifiedSignature": "getHasDetailRows()",
      "datatype": {
        "id": "Reports.reportmetadata.gethasdetailrows.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the report has detail rows.",
      "variables": {}
    },
    "gethasrecordcount()": {
      "id": "Reports.reportmetadata.gethasrecordcount",
      "type": "method",
      "name": "getHasRecordCount",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getHasRecordCount",
        "textToLower": "gethasrecordcount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getHasRecordCount_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean getHasRecordCount()",
      "simplifiedSignature": "getHasRecordCount()",
      "datatype": {
        "id": "Reports.reportmetadata.gethasrecordcount.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the report shows the total number of records.",
      "variables": {}
    },
    "gethistoricalsnapshotdates()": {
      "id": "Reports.reportmetadata.gethistoricalsnapshotdates",
      "type": "method",
      "name": "getHistoricalSnapshotDates",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getHistoricalSnapshotDates",
        "textToLower": "gethistoricalsnapshotdates",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getHistoricalSnapshotDates_-1:0"
      },
      "signature": "List<String> getHistoricalSnapshotDates()",
      "simplifiedSignature": "getHistoricalSnapshotDates()",
      "datatype": {
        "id": "Reports.reportmetadata.gethistoricalsnapshotdates.List<String>",
        "type": "datatype",
        "name": "List<String>"
      },
      "description": "Returns a list of historical snapshot dates.",
      "variables": {}
    },
    "getid()": {
      "id": "Reports.reportmetadata.getid",
      "type": "method",
      "name": "getId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getId",
        "textToLower": "getid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getId_-1:0"
      },
      "signature": "Id getId()",
      "simplifiedSignature": "getId()",
      "datatype": {
        "id": "Reports.reportmetadata.getid.Id",
        "type": "datatype",
        "name": "Id"
      },
      "description": "Returns the unique report ID.",
      "variables": {}
    },
    "getname()": {
      "id": "Reports.reportmetadata.getname",
      "type": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "signature": "String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "Reports.reportmetadata.getname.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the report name.",
      "variables": {}
    },
    "getreportbooleanfilter()": {
      "id": "Reports.reportmetadata.getreportbooleanfilter",
      "type": "method",
      "name": "getReportBooleanFilter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getReportBooleanFilter",
        "textToLower": "getreportbooleanfilter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getReportBooleanFilter_-1:0"
      },
      "signature": "String getReportBooleanFilter()",
      "simplifiedSignature": "getReportBooleanFilter()",
      "datatype": {
        "id": "Reports.reportmetadata.getreportbooleanfilter.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns logic to parse custom field filters. The value is null when filter logic is not specified.",
      "variables": {}
    },
    "getreportfilters()": {
      "id": "Reports.reportmetadata.getreportfilters",
      "type": "method",
      "name": "getReportFilters",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getReportFilters",
        "textToLower": "getreportfilters",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getReportFilters_-1:0"
      },
      "signature": "List<Reports.ReportFilter> getReportFilters()",
      "simplifiedSignature": "getReportFilters()",
      "datatype": {
        "id": "Reports.reportmetadata.getreportfilters.List<Reports.ReportFilter>",
        "type": "datatype",
        "name": "List<Reports.ReportFilter>"
      },
      "description": "Returns a list of each custom filter in the report along with the field name, filter operator, and filter value.",
      "variables": {}
    },
    "getreportformat()": {
      "id": "Reports.reportmetadata.getreportformat",
      "type": "method",
      "name": "getReportFormat",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getReportFormat",
        "textToLower": "getreportformat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getReportFormat_-1:0"
      },
      "signature": "Reports.ReportFormat getReportFormat()",
      "simplifiedSignature": "getReportFormat()",
      "datatype": {
        "id": "Reports.reportmetadata.getreportformat.Reports.ReportFormat",
        "type": "datatype",
        "name": "Reports.ReportFormat"
      },
      "description": "Returns the format of the report.",
      "variables": {}
    },
    "getreporttype()": {
      "id": "Reports.reportmetadata.getreporttype",
      "type": "method",
      "name": "getReportType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getReportType",
        "textToLower": "getreporttype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getReportType_-1:0"
      },
      "signature": "Reports.ReportType getReportType()",
      "simplifiedSignature": "getReportType()",
      "datatype": {
        "id": "Reports.reportmetadata.getreporttype.Reports.ReportType",
        "type": "datatype",
        "name": "Reports.ReportType"
      },
      "description": "Returns the unique API name and display name for the report type.",
      "variables": {}
    },
    "getscope()": {
      "id": "Reports.reportmetadata.getscope",
      "type": "method",
      "name": "getScope",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getScope",
        "textToLower": "getscope",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getScope_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getScope()",
      "simplifiedSignature": "getScope()",
      "datatype": {
        "id": "Reports.reportmetadata.getscope.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the API name for the scope defined for the report. Scope values depend on the report type.",
      "variables": {}
    },
    "getshowgrandtotal()": {
      "id": "Reports.reportmetadata.getshowgrandtotal",
      "type": "method",
      "name": "getShowGrandTotal",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getShowGrandTotal",
        "textToLower": "getshowgrandtotal",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getShowGrandTotal_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean getShowGrandTotal()",
      "simplifiedSignature": "getShowGrandTotal()",
      "datatype": {
        "id": "Reports.reportmetadata.getshowgrandtotal.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the report shows the grand total.",
      "variables": {}
    },
    "getshowsubtotals()": {
      "id": "Reports.reportmetadata.getshowsubtotals",
      "type": "method",
      "name": "getShowSubtotals",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getShowSubtotals",
        "textToLower": "getshowsubtotals",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getShowSubtotals_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean getShowSubtotals()",
      "simplifiedSignature": "getShowSubtotals()",
      "datatype": {
        "id": "Reports.reportmetadata.getshowsubtotals.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the report shows subtotals, such as column or row totals.",
      "variables": {}
    },
    "getsortby()": {
      "id": "Reports.reportmetadata.getsortby",
      "type": "method",
      "name": "getSortBy",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSortBy",
        "textToLower": "getsortby",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSortBy_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Reports.SortColumn> getSortBy()",
      "simplifiedSignature": "getSortBy()",
      "datatype": {
        "id": "Reports.reportmetadata.getsortby.List<Reports.SortColumn>",
        "type": "datatype",
        "name": "List<Reports.SortColumn>"
      },
      "description": "Returns the list of columns on which the report is sorted. Currently, you can sort on only one column.",
      "variables": {}
    },
    "getstandarddatefilter()": {
      "id": "Reports.reportmetadata.getstandarddatefilter",
      "type": "method",
      "name": "getStandardDateFilter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getStandardDateFilter",
        "textToLower": "getstandarddatefilter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getStandardDateFilter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Reports.StandardDateFilter getStandardDateFilter()",
      "simplifiedSignature": "getStandardDateFilter()",
      "datatype": {
        "id": "Reports.reportmetadata.getstandarddatefilter.Reports.StandardDateFilter",
        "type": "datatype",
        "name": "Reports.StandardDateFilter"
      },
      "description": "Returns information about the standard date filter for the report, such as the start date, end date, date range, and date field API name.",
      "variables": {}
    },
    "getstandardfilters()": {
      "id": "Reports.reportmetadata.getstandardfilters",
      "type": "method",
      "name": "getStandardFilters",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getStandardFilters",
        "textToLower": "getstandardfilters",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getStandardFilters_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Reports.StandardFilter> getStandardFilters()",
      "simplifiedSignature": "getStandardFilters()",
      "datatype": {
        "id": "Reports.reportmetadata.getstandardfilters.List<Reports.StandardFilter>",
        "type": "datatype",
        "name": "List<Reports.StandardFilter>"
      },
      "description": "Returns a list of standard filters for the report.",
      "variables": {}
    },
    "gettoprows()": {
      "id": "Reports.reportmetadata.gettoprows",
      "type": "method",
      "name": "getTopRows",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTopRows",
        "textToLower": "gettoprows",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTopRows_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Reports.TopRows getTopRows()",
      "simplifiedSignature": "getTopRows()",
      "datatype": {
        "id": "Reports.reportmetadata.gettoprows.Reports.TopRows",
        "type": "datatype",
        "name": "Reports.TopRows"
      },
      "description": "Returns information about a row limit filter, including the number of rows returned and the sort order.",
      "variables": {}
    },
    "setaggregates(list)": {
      "id": "Reports.reportmetadata.setaggregates",
      "type": "method",
      "name": "setAggregates",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setAggregates",
        "textToLower": "setaggregates",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setAggregates_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setAggregates(List <String>)",
      "simplifiedSignature": "setAggregates(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setaggregates.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets unique identifiers for standard or custom summary formula fields in the report.",
      "variables": {
        "<String>": {
          "id": "Reports.reportmetadata.setaggregates.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Reports.reportmetadata.setaggregates.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setbuckets(list)": {
      "id": "Reports.reportmetadata.setbuckets",
      "type": "method",
      "name": "setBuckets",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setBuckets",
        "textToLower": "setbuckets",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setBuckets_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setBuckets(List <Reports.BucketField>)",
      "simplifiedSignature": "setBuckets(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setbuckets.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Creates bucket fields in a report.",
      "variables": {
        "<Reports.BucketField>": {
          "id": "Reports.reportmetadata.setbuckets.<reports.bucketfield>",
          "type": "var",
          "name": "<Reports.BucketField>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Reports.BucketField>",
            "textToLower": "<reports.bucketfield>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Reports.BucketField>_-1:0"
          },
          "signature": "List <Reports.BucketField>",
          "datatype": {
            "id": "Reports.reportmetadata.setbuckets.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setcrossfilters(list)": {
      "id": "Reports.reportmetadata.setcrossfilters",
      "type": "method",
      "name": "setCrossFilters",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setCrossFilters",
        "textToLower": "setcrossfilters",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setCrossFilters_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setCrossFilters(List <Reports.CrossFilter>)",
      "simplifiedSignature": "setCrossFilters(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setcrossfilters.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Applies cross filters to a report.",
      "variables": {
        "<Reports.CrossFilter>": {
          "id": "Reports.reportmetadata.setcrossfilters.<reports.crossfilter>",
          "type": "var",
          "name": "<Reports.CrossFilter>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Reports.CrossFilter>",
            "textToLower": "<reports.crossfilter>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Reports.CrossFilter>_-1:0"
          },
          "signature": "List <Reports.CrossFilter>",
          "datatype": {
            "id": "Reports.reportmetadata.setcrossfilters.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setcurrencycode(string)": {
      "id": "Reports.reportmetadata.setcurrencycode",
      "type": "method",
      "name": "setCurrencyCode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setCurrencyCode",
        "textToLower": "setcurrencycode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setCurrencyCode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setCurrencyCode(String currencyCode)",
      "simplifiedSignature": "setCurrencyCode(String)",
      "datatype": {
        "id": "Reports.reportmetadata.setcurrencycode.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the currency, such as USD, EUR, or GBP, for report summary fields in an organization that has multicurrency enabled.",
      "variables": {
        "currencyCode": {
          "id": "Reports.reportmetadata.setcurrencycode.currencycode",
          "type": "var",
          "name": "currencyCode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "currencyCode",
            "textToLower": "currencycode",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_currencyCode_-1:0"
          },
          "signature": "String currencyCode",
          "datatype": {
            "id": "Reports.reportmetadata.setcurrencycode.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setcustomsummaryformula(map,reports.reportcsf>)": {
      "id": "Reports.reportmetadata.setcustomsummaryformula",
      "type": "method",
      "name": "setCustomSummaryFormula",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setCustomSummaryFormula",
        "textToLower": "setcustomsummaryformula",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setCustomSummaryFormula_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setCustomSummaryFormula(MAP <String, Reports.ReportCsf> customSummaryFormula)",
      "simplifiedSignature": "setCustomSummaryFormula(MAP,Reports.ReportCsf>)",
      "datatype": {
        "id": "Reports.reportmetadata.setcustomsummaryformula.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Adds a custom summary formula to a report.",
      "variables": {
        "<String": {
          "id": "Reports.reportmetadata.setcustomsummaryformula.<string",
          "type": "var",
          "name": "<String",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String",
            "textToLower": "<string",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String_-1:0"
          },
          "signature": "MAP <String",
          "datatype": {
            "id": "Reports.reportmetadata.setcustomsummaryformula.map",
            "type": "datatype",
            "name": "MAP"
          }
        },
        "customSummaryFormula": {
          "id": "Reports.reportmetadata.setcustomsummaryformula.customsummaryformula",
          "type": "var",
          "name": "customSummaryFormula",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "customSummaryFormula",
            "textToLower": "customsummaryformula",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_customSummaryFormula_-1:0"
          },
          "signature": "Reports.ReportCsf> customSummaryFormula",
          "datatype": {
            "id": "Reports.reportmetadata.setcustomsummaryformula.reports.reportcsf>",
            "type": "datatype",
            "name": "Reports.ReportCsf>"
          }
        }
      }
    },
    "setdescription(string)": {
      "id": "Reports.reportmetadata.setdescription",
      "type": "method",
      "name": "setDescription",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDescription",
        "textToLower": "setdescription",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDescription_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDescription(String description)",
      "simplifiedSignature": "setDescription(String)",
      "datatype": {
        "id": "Reports.reportmetadata.setdescription.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the description of the report.",
      "variables": {
        "description": {
          "id": "Reports.reportmetadata.setdescription.description",
          "type": "var",
          "name": "description",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "description",
            "textToLower": "description",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_description_-1:0"
          },
          "signature": "String description",
          "datatype": {
            "id": "Reports.reportmetadata.setdescription.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setdetailcolumns(list)": {
      "id": "Reports.reportmetadata.setdetailcolumns",
      "type": "method",
      "name": "setDetailColumns",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDetailColumns",
        "textToLower": "setdetailcolumns",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDetailColumns_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDetailColumns(List <String>)",
      "simplifiedSignature": "setDetailColumns(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setdetailcolumns.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the unique API names for the fields that contain detailed data—for example, OPPORTUNITY_NAME, TYPE, LEAD_SOURCE, or AMOUNT.",
      "variables": {
        "<String>": {
          "id": "Reports.reportmetadata.setdetailcolumns.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Reports.reportmetadata.setdetailcolumns.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setdevelopername(string)": {
      "id": "Reports.reportmetadata.setdevelopername",
      "type": "method",
      "name": "setDeveloperName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDeveloperName",
        "textToLower": "setdevelopername",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDeveloperName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setDeveloperName(String developerName)",
      "simplifiedSignature": "setDeveloperName(String)",
      "datatype": {
        "id": "Reports.reportmetadata.setdevelopername.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the report API name—for example, Closed_Sales_This_Quarter.",
      "variables": {
        "developerName": {
          "id": "Reports.reportmetadata.setdevelopername.developername",
          "type": "var",
          "name": "developerName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "developerName",
            "textToLower": "developername",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_developerName_-1:0"
          },
          "signature": "String developerName",
          "datatype": {
            "id": "Reports.reportmetadata.setdevelopername.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setdivision(such)": {
      "id": "Reports.reportmetadata.setdivision",
      "type": "method",
      "name": "setDivision",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setDivision",
        "textToLower": "setdivision",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setDivision_-1:0"
      },
      "signature": "void setDivision(such as)",
      "simplifiedSignature": "setDivision(such)",
      "datatype": {
        "id": "Reports.reportmetadata.setdivision.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the division of the report.",
      "variables": {
        "as": {
          "id": "Reports.reportmetadata.setdivision.as",
          "type": "var",
          "name": "as",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "as",
            "textToLower": "as",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_as_-1:0"
          },
          "signature": "such as",
          "datatype": {
            "id": "Reports.reportmetadata.setdivision.such",
            "type": "datatype",
            "name": "such"
          }
        }
      }
    },
    "setgroupingsacross(list)": {
      "id": "Reports.reportmetadata.setgroupingsacross",
      "type": "method",
      "name": "setGroupingsAcross",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setGroupingsAcross",
        "textToLower": "setgroupingsacross",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setGroupingsAcross_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setGroupingsAcross(List <Reports.GroupingInfo>)",
      "simplifiedSignature": "setGroupingsAcross(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setgroupingsacross.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets column groupings in a report.",
      "variables": {
        "<Reports.GroupingInfo>": {
          "id": "Reports.reportmetadata.setgroupingsacross.<reports.groupinginfo>",
          "type": "var",
          "name": "<Reports.GroupingInfo>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Reports.GroupingInfo>",
            "textToLower": "<reports.groupinginfo>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Reports.GroupingInfo>_-1:0"
          },
          "signature": "List <Reports.GroupingInfo>",
          "datatype": {
            "id": "Reports.reportmetadata.setgroupingsacross.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setgroupingsdown(list)": {
      "id": "Reports.reportmetadata.setgroupingsdown",
      "type": "method",
      "name": "setGroupingsDown",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setGroupingsDown",
        "textToLower": "setgroupingsdown",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setGroupingsDown_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setGroupingsDown(List <Reports.GroupingInfo>)",
      "simplifiedSignature": "setGroupingsDown(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setgroupingsdown.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets row groupings for a report.",
      "variables": {
        "<Reports.GroupingInfo>": {
          "id": "Reports.reportmetadata.setgroupingsdown.<reports.groupinginfo>",
          "type": "var",
          "name": "<Reports.GroupingInfo>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Reports.GroupingInfo>",
            "textToLower": "<reports.groupinginfo>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Reports.GroupingInfo>_-1:0"
          },
          "signature": "List <Reports.GroupingInfo>",
          "datatype": {
            "id": "Reports.reportmetadata.setgroupingsdown.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "sethasdetailrows(boolean)": {
      "id": "Reports.reportmetadata.sethasdetailrows",
      "type": "method",
      "name": "setHasDetailRows",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setHasDetailRows",
        "textToLower": "sethasdetailrows",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setHasDetailRows_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setHasDetailRows(Boolean hasDetailRows)",
      "simplifiedSignature": "setHasDetailRows(Boolean)",
      "datatype": {
        "id": "Reports.reportmetadata.sethasdetailrows.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Specifies whether the report has detail rows.",
      "variables": {
        "hasDetailRows": {
          "id": "Reports.reportmetadata.sethasdetailrows.hasdetailrows",
          "type": "var",
          "name": "hasDetailRows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "hasDetailRows",
            "textToLower": "hasdetailrows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_hasDetailRows_-1:0"
          },
          "signature": "Boolean hasDetailRows",
          "datatype": {
            "id": "Reports.reportmetadata.sethasdetailrows.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "sethasrecordcount(boolean)": {
      "id": "Reports.reportmetadata.sethasrecordcount",
      "type": "method",
      "name": "setHasRecordCount",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setHasRecordCount",
        "textToLower": "sethasrecordcount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setHasRecordCount_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setHasRecordCount(Boolean hasRecordCount)",
      "simplifiedSignature": "setHasRecordCount(Boolean)",
      "datatype": {
        "id": "Reports.reportmetadata.sethasrecordcount.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Specifies whether the report is configured to show the total number of records.",
      "variables": {
        "hasRecordCount": {
          "id": "Reports.reportmetadata.sethasrecordcount.hasrecordcount",
          "type": "var",
          "name": "hasRecordCount",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "hasRecordCount",
            "textToLower": "hasrecordcount",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_hasRecordCount_-1:0"
          },
          "signature": "Boolean hasRecordCount",
          "datatype": {
            "id": "Reports.reportmetadata.sethasrecordcount.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "sethistoricalsnapshotdates()": {
      "id": "Reports.reportmetadata.sethistoricalsnapshotdates",
      "type": "method",
      "name": "setHistoricalSnapshotDates",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setHistoricalSnapshotDates",
        "textToLower": "sethistoricalsnapshotdates",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setHistoricalSnapshotDates_-1:0"
      },
      "signature": "void setHistoricalSnapshotDates()",
      "simplifiedSignature": "setHistoricalSnapshotDates()",
      "datatype": {
        "id": "Reports.reportmetadata.sethistoricalsnapshotdates.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets a list of historical snapshot dates.",
      "variables": {}
    },
    "setid(id)": {
      "id": "Reports.reportmetadata.setid",
      "type": "method",
      "name": "setId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setId",
        "textToLower": "setid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setId(Id id)",
      "simplifiedSignature": "setId(Id)",
      "datatype": {
        "id": "Reports.reportmetadata.setid.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the unique report ID.",
      "variables": {
        "id": {
          "id": "Reports.reportmetadata.setid.id",
          "type": "var",
          "name": "id",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "id",
            "textToLower": "id",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_id_-1:0"
          },
          "signature": "Id id",
          "datatype": {
            "id": "Reports.reportmetadata.setid.id",
            "type": "datatype",
            "name": "Id"
          }
        }
      }
    },
    "setname(string)": {
      "id": "Reports.reportmetadata.setname",
      "type": "method",
      "name": "setName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setName",
        "textToLower": "setname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setName(String name)",
      "simplifiedSignature": "setName(String)",
      "datatype": {
        "id": "Reports.reportmetadata.setname.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the report name.",
      "variables": {
        "name": {
          "id": "Reports.reportmetadata.setname.name",
          "type": "var",
          "name": "name",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "name",
            "textToLower": "name",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_name_-1:0"
          },
          "signature": "String name",
          "datatype": {
            "id": "Reports.reportmetadata.setname.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setreportbooleanfilter()": {
      "id": "Reports.reportmetadata.setreportbooleanfilter",
      "type": "method",
      "name": "setReportBooleanFilter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setReportBooleanFilter",
        "textToLower": "setreportbooleanfilter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setReportBooleanFilter_-1:0"
      },
      "signature": "void setReportBooleanFilter()",
      "simplifiedSignature": "setReportBooleanFilter()",
      "datatype": {
        "id": "Reports.reportmetadata.setreportbooleanfilter.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets logic to parse custom field filters.",
      "variables": {}
    },
    "setreportfilters()": {
      "id": "Reports.reportmetadata.setreportfilters",
      "type": "method",
      "name": "setReportFilters",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setReportFilters",
        "textToLower": "setreportfilters",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setReportFilters_-1:0"
      },
      "signature": "void setReportFilters()",
      "simplifiedSignature": "setReportFilters()",
      "datatype": {
        "id": "Reports.reportmetadata.setreportfilters.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets a list of each custom filter in the report along with the field name, filter operator, and filter value.",
      "variables": {}
    },
    "setreportformat(reports.reportformat)": {
      "id": "Reports.reportmetadata.setreportformat",
      "type": "method",
      "name": "setReportFormat",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setReportFormat",
        "textToLower": "setreportformat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setReportFormat_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setReportFormat(Reports.ReportFormat format)",
      "simplifiedSignature": "setReportFormat(Reports.ReportFormat)",
      "datatype": {
        "id": "Reports.reportmetadata.setreportformat.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the format of the report.",
      "variables": {
        "format": {
          "id": "Reports.reportmetadata.setreportformat.format",
          "type": "var",
          "name": "format",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "format",
            "textToLower": "format",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_format_-1:0"
          },
          "signature": "Reports.ReportFormat format",
          "datatype": {
            "id": "Reports.reportmetadata.setreportformat.reports.reportformat",
            "type": "datatype",
            "name": "Reports.ReportFormat"
          }
        }
      }
    },
    "setreporttype(reports.reporttype)": {
      "id": "Reports.reportmetadata.setreporttype",
      "type": "method",
      "name": "setReportType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setReportType",
        "textToLower": "setreporttype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setReportType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setReportType(Reports.ReportType reportType)",
      "simplifiedSignature": "setReportType(Reports.ReportType)",
      "datatype": {
        "id": "Reports.reportmetadata.setreporttype.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the unique API name and display name for the report type.",
      "variables": {
        "reportType": {
          "id": "Reports.reportmetadata.setreporttype.reporttype",
          "type": "var",
          "name": "reportType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "reportType",
            "textToLower": "reporttype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_reportType_-1:0"
          },
          "signature": "Reports.ReportType reportType",
          "datatype": {
            "id": "Reports.reportmetadata.setreporttype.reports.reporttype",
            "type": "datatype",
            "name": "Reports.ReportType"
          }
        }
      }
    },
    "setscope(string)": {
      "id": "Reports.reportmetadata.setscope",
      "type": "method",
      "name": "setScope",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setScope",
        "textToLower": "setscope",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setScope_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setScope(String scopeName)",
      "simplifiedSignature": "setScope(String)",
      "datatype": {
        "id": "Reports.reportmetadata.setscope.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the API name for the scope defined for the report. Scope values depend on the report type.",
      "variables": {
        "scopeName": {
          "id": "Reports.reportmetadata.setscope.scopename",
          "type": "var",
          "name": "scopeName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scopeName",
            "textToLower": "scopename",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_scopeName_-1:0"
          },
          "signature": "String scopeName",
          "datatype": {
            "id": "Reports.reportmetadata.setscope.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setshowgrandtotal(boolean)": {
      "id": "Reports.reportmetadata.setshowgrandtotal",
      "type": "method",
      "name": "setShowGrandTotal",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setShowGrandTotal",
        "textToLower": "setshowgrandtotal",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setShowGrandTotal_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setShowGrandTotal(Boolean showGrandTotal)",
      "simplifiedSignature": "setShowGrandTotal(Boolean)",
      "datatype": {
        "id": "Reports.reportmetadata.setshowgrandtotal.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Specifies whether the report shows the grand total.",
      "variables": {
        "showGrandTotal": {
          "id": "Reports.reportmetadata.setshowgrandtotal.showgrandtotal",
          "type": "var",
          "name": "showGrandTotal",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "showGrandTotal",
            "textToLower": "showgrandtotal",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_showGrandTotal_-1:0"
          },
          "signature": "Boolean showGrandTotal",
          "datatype": {
            "id": "Reports.reportmetadata.setshowgrandtotal.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "setshowsubtotals(boolean)": {
      "id": "Reports.reportmetadata.setshowsubtotals",
      "type": "method",
      "name": "setShowSubtotals",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setShowSubtotals",
        "textToLower": "setshowsubtotals",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setShowSubtotals_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setShowSubtotals(Boolean showSubtotals)",
      "simplifiedSignature": "setShowSubtotals(Boolean)",
      "datatype": {
        "id": "Reports.reportmetadata.setshowsubtotals.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Specifies whether the report shows subtotals, such as column or row totals.",
      "variables": {
        "showSubtotals": {
          "id": "Reports.reportmetadata.setshowsubtotals.showsubtotals",
          "type": "var",
          "name": "showSubtotals",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "showSubtotals",
            "textToLower": "showsubtotals",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_showSubtotals_-1:0"
          },
          "signature": "Boolean showSubtotals",
          "datatype": {
            "id": "Reports.reportmetadata.setshowsubtotals.boolean",
            "type": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "setsortby(list)": {
      "id": "Reports.reportmetadata.setsortby",
      "type": "method",
      "name": "setSortBy",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setSortBy",
        "textToLower": "setsortby",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setSortBy_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setSortBy(List <Reports.SortColumn>)",
      "simplifiedSignature": "setSortBy(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setsortby.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the list of columns on which the report is sorted. Currently, you can only sort on one column.",
      "variables": {
        "<Reports.SortColumn>": {
          "id": "Reports.reportmetadata.setsortby.<reports.sortcolumn>",
          "type": "var",
          "name": "<Reports.SortColumn>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Reports.SortColumn>",
            "textToLower": "<reports.sortcolumn>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Reports.SortColumn>_-1:0"
          },
          "signature": "List <Reports.SortColumn>",
          "datatype": {
            "id": "Reports.reportmetadata.setsortby.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setstandarddatefilter(reports.standarddatefilter)": {
      "id": "Reports.reportmetadata.setstandarddatefilter",
      "type": "method",
      "name": "setStandardDateFilter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setStandardDateFilter",
        "textToLower": "setstandarddatefilter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setStandardDateFilter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setStandardDateFilter(Reports.StandardDateFilter dateFilter)",
      "simplifiedSignature": "setStandardDateFilter(Reports.StandardDateFilter)",
      "datatype": {
        "id": "Reports.reportmetadata.setstandarddatefilter.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets the standard date filter—which includes the start date, end date, date range, and date field API name—for the report.",
      "variables": {
        "dateFilter": {
          "id": "Reports.reportmetadata.setstandarddatefilter.datefilter",
          "type": "var",
          "name": "dateFilter",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dateFilter",
            "textToLower": "datefilter",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dateFilter_-1:0"
          },
          "signature": "Reports.StandardDateFilter dateFilter",
          "datatype": {
            "id": "Reports.reportmetadata.setstandarddatefilter.reports.standarddatefilter",
            "type": "datatype",
            "name": "Reports.StandardDateFilter"
          }
        }
      }
    },
    "setstandardfilters(list)": {
      "id": "Reports.reportmetadata.setstandardfilters",
      "type": "method",
      "name": "setStandardFilters",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setStandardFilters",
        "textToLower": "setstandardfilters",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setStandardFilters_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setStandardFilters(List <Reports.StandardFilter>)",
      "simplifiedSignature": "setStandardFilters(List)",
      "datatype": {
        "id": "Reports.reportmetadata.setstandardfilters.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Sets one or more standard filters on the report.",
      "variables": {
        "<Reports.StandardFilter>": {
          "id": "Reports.reportmetadata.setstandardfilters.<reports.standardfilter>",
          "type": "var",
          "name": "<Reports.StandardFilter>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Reports.StandardFilter>",
            "textToLower": "<reports.standardfilter>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Reports.StandardFilter>_-1:0"
          },
          "signature": "List <Reports.StandardFilter>",
          "datatype": {
            "id": "Reports.reportmetadata.setstandardfilters.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "settoprows(reports.toprows)": {
      "id": "Reports.reportmetadata.settoprows",
      "type": "method",
      "name": "setTopRows",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTopRows",
        "textToLower": "settoprows",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTopRows_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setTopRows(Reports.TopRows topRows)",
      "simplifiedSignature": "setTopRows(Reports.TopRows)",
      "datatype": {
        "id": "Reports.reportmetadata.settoprows.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Applies a row limit filter to a report.",
      "variables": {
        "topRows": {
          "id": "Reports.reportmetadata.settoprows.toprows",
          "type": "var",
          "name": "topRows",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topRows",
            "textToLower": "toprows",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topRows_-1:0"
          },
          "signature": "Reports.TopRows topRows",
          "datatype": {
            "id": "Reports.reportmetadata.settoprows.reports.toprows",
            "type": "datatype",
            "name": "Reports.TopRows"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}