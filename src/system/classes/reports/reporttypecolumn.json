{
  "id": "Reports.reporttypecolumn",
  "nodeType": "class",
  "name": "ReportTypeColumn",
  "namespace": "Reports",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ReportTypeColumn",
    "textToLower": "reporttypecolumn",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ReportTypeColumn_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains detailed report type metadata about a field, including data type, display name, and filter values.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_reports_reporttypecolumn.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getdatatype()": {
      "id": "Reports.reporttypecolumn.method.getdatatype()",
      "nodeType": "method",
      "name": "getDataType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDataType",
        "textToLower": "getdatatype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDataType_-1:0"
      },
      "parentId": "Reports.reporttypecolumn",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Reports.ColumnDataType getDataType()",
      "overrideSignature": "public override Reports.ColumnDataType getDataType()",
      "simplifiedSignature": "getDataType()",
      "datatype": {
        "id": "Reports.reporttypecolumn.getdatatype.datatype.Reports.ColumnDataType",
        "nodeType": "datatype",
        "name": "Reports.ColumnDataType",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Reports",
          "textToLower": "reports",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Reports_0:7"
        },
        "parentId": "Reports.reporttypecolumn.getdatatype",
        "order": 0,
        "memberOrder": 0,
        "type": "Reports.ColumnDataType"
      },
      "description": "Returns the data type of the field.",
      "parentName": "ReportTypeColumn",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getfiltervalues()": {
      "id": "Reports.reporttypecolumn.method.getfiltervalues()",
      "nodeType": "method",
      "name": "getFilterValues",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFilterValues",
        "textToLower": "getfiltervalues",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFilterValues_-1:0"
      },
      "parentId": "Reports.reporttypecolumn",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public List<Reports.FilterValue> getFilterValues()",
      "overrideSignature": "public override List<Reports.FilterValue> getFilterValues()",
      "simplifiedSignature": "getFilterValues()",
      "datatype": {
        "id": "Reports.reporttypecolumn.getfiltervalues.datatype.List<Reports.FilterValue>",
        "nodeType": "datatype",
        "name": "List<Reports.FilterValue>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:7"
        },
        "parentId": "Reports.reporttypecolumn.getfiltervalues",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "Reports.reporttypecolumn.getfiltervalues.datatype.List<Reports.FilterValue>.value.Reports.FilterValue",
          "nodeType": "datatype",
          "name": "Reports.FilterValue",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Reports",
            "textToLower": "reports",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 12
              },
              "end": {
                "line": 0,
                "character": 19
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Reports_0:12"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Reports.FilterValue"
        }
      },
      "description": "If the field data type is picklist, multi-select picklist, boolean, or checkbox, returns all filter values for a field. For example, checkbox fields always have a value of true or false. For fields of other data types, the filter value is an empty array, because their values can’t be determined.",
      "parentName": "ReportTypeColumn",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getfilterable()": {
      "id": "Reports.reporttypecolumn.method.getfilterable()",
      "nodeType": "method",
      "name": "getFilterable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFilterable",
        "textToLower": "getfilterable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFilterable_-1:0"
      },
      "parentId": "Reports.reporttypecolumn",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean getFilterable()",
      "overrideSignature": "public override Boolean getFilterable()",
      "simplifiedSignature": "getFilterable()",
      "datatype": {
        "id": "Reports.reporttypecolumn.getfilterable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Reports.reporttypecolumn.getfilterable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "If the field is of a type that can’t be filtered, returns False. For example, fields of the type Encrypted Text can’t be filtered.",
      "parentName": "ReportTypeColumn",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getlabel()": {
      "id": "Reports.reporttypecolumn.method.getlabel()",
      "nodeType": "method",
      "name": "getLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLabel",
        "textToLower": "getlabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLabel_-1:0"
      },
      "parentId": "Reports.reporttypecolumn",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getLabel()",
      "overrideSignature": "public override String getLabel()",
      "simplifiedSignature": "getLabel()",
      "datatype": {
        "id": "Reports.reporttypecolumn.getlabel.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Reports.reporttypecolumn.getlabel",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the localized display name of the field.",
      "parentName": "ReportTypeColumn",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getname()": {
      "id": "Reports.reporttypecolumn.method.getname()",
      "nodeType": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "parentId": "Reports.reporttypecolumn",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getName()",
      "overrideSignature": "public override String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "Reports.reporttypecolumn.getname.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Reports.reporttypecolumn.getname",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the unique API name of the field.",
      "parentName": "ReportTypeColumn",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 5,
  "queries": []
}