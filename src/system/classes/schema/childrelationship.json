{
  "id": "Schema.childrelationship",
  "nodeType": "class",
  "name": "ChildRelationship",
  "namespace": "Schema",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "ChildRelationship",
    "textToLower": "childrelationship",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_ChildRelationship_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for accessing the child relationship as well as the child sObject for a parent sObject.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Schema_ChildRelationship.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getchildsobject()": {
      "id": "Schema.childrelationship.method.getchildsobject()",
      "nodeType": "method",
      "name": "getChildSObject",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getChildSObject",
        "textToLower": "getchildsobject",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getChildSObject_-1:0"
      },
      "parentId": "Schema.childrelationship",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Schema.SObjectType getChildSObject()",
      "overrideSignature": "public override Schema.SObjectType getChildSObject()",
      "simplifiedSignature": "getChildSObject()",
      "datatype": {
        "id": "Schema.childrelationship.getchildsobject.datatype.Schema.SObjectType",
        "nodeType": "datatype",
        "name": "Schema.SObjectType",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Schema",
          "textToLower": "schema",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Schema_0:7"
        },
        "parentId": "Schema.childrelationship.getchildsobject",
        "order": 0,
        "memberOrder": 0,
        "type": "Schema.SObjectType"
      },
      "description": "Returns the token of the child sObject on which there is a foreign key back to the parent sObject.",
      "parentName": "ChildRelationship",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getfield()": {
      "id": "Schema.childrelationship.method.getfield()",
      "nodeType": "method",
      "name": "getField",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getField",
        "textToLower": "getfield",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getField_-1:0"
      },
      "parentId": "Schema.childrelationship",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Schema.SObjectField getField()",
      "overrideSignature": "public override Schema.SObjectField getField()",
      "simplifiedSignature": "getField()",
      "datatype": {
        "id": "Schema.childrelationship.getfield.datatype.Schema.SObjectField",
        "nodeType": "datatype",
        "name": "Schema.SObjectField",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Schema",
          "textToLower": "schema",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Schema_0:7"
        },
        "parentId": "Schema.childrelationship.getfield",
        "order": 0,
        "memberOrder": 0,
        "type": "Schema.SObjectField"
      },
      "description": "Returns the token of the field that has a foreign key back to the parent sObject.",
      "parentName": "ChildRelationship",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getrelationshipname()": {
      "id": "Schema.childrelationship.method.getrelationshipname()",
      "nodeType": "method",
      "name": "getRelationshipName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRelationshipName",
        "textToLower": "getrelationshipname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRelationshipName_-1:0"
      },
      "parentId": "Schema.childrelationship",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getRelationshipName()",
      "overrideSignature": "public override String getRelationshipName()",
      "simplifiedSignature": "getRelationshipName()",
      "datatype": {
        "id": "Schema.childrelationship.getrelationshipname.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.childrelationship.getrelationshipname",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the name of the relationship.",
      "parentName": "ChildRelationship",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iscascadedelete()": {
      "id": "Schema.childrelationship.method.iscascadedelete()",
      "nodeType": "method",
      "name": "isCascadeDelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCascadeDelete",
        "textToLower": "iscascadedelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCascadeDelete_-1:0"
      },
      "parentId": "Schema.childrelationship",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isCascadeDelete()",
      "overrideSignature": "public override Boolean isCascadeDelete()",
      "simplifiedSignature": "isCascadeDelete()",
      "datatype": {
        "id": "Schema.childrelationship.iscascadedelete.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.childrelationship.iscascadedelete",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the child object is deleted when the parent object is deleted, false otherwise.",
      "parentName": "ChildRelationship",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isdeprecatedandhidden()": {
      "id": "Schema.childrelationship.method.isdeprecatedandhidden()",
      "nodeType": "method",
      "name": "isDeprecatedAndHidden",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDeprecatedAndHidden",
        "textToLower": "isdeprecatedandhidden",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDeprecatedAndHidden_-1:0"
      },
      "parentId": "Schema.childrelationship",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isDeprecatedAndHidden()",
      "overrideSignature": "public override Boolean isDeprecatedAndHidden()",
      "simplifiedSignature": "isDeprecatedAndHidden()",
      "datatype": {
        "id": "Schema.childrelationship.isdeprecatedandhidden.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.childrelationship.isdeprecatedandhidden",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Reserved for future use.",
      "parentName": "ChildRelationship",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isrestricteddelete()": {
      "id": "Schema.childrelationship.method.isrestricteddelete()",
      "nodeType": "method",
      "name": "isRestrictedDelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isRestrictedDelete",
        "textToLower": "isrestricteddelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isRestrictedDelete_-1:0"
      },
      "parentId": "Schema.childrelationship",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isRestrictedDelete()",
      "overrideSignature": "public override Boolean isRestrictedDelete()",
      "simplifiedSignature": "isRestrictedDelete()",
      "datatype": {
        "id": "Schema.childrelationship.isrestricteddelete.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.childrelationship.isrestricteddelete",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the parent object can't be deleted because it is referenced by a child object, false otherwise.",
      "parentName": "ChildRelationship",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 6,
  "queries": []
}