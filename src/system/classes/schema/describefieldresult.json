{
  "id": "Schema.describefieldresult",
  "nodeType": "class",
  "name": "DescribeFieldResult",
  "namespace": "Schema",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "DescribeFieldResult",
    "textToLower": "describefieldresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_DescribeFieldResult_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for describing sObject fields.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_fields_describe.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getbytelength()": {
      "id": "Schema.describefieldresult.method.getbytelength()",
      "nodeType": "method",
      "name": "getByteLength",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getByteLength",
        "textToLower": "getbytelength",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getByteLength_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getByteLength()",
      "overrideSignature": "public override Integer getByteLength()",
      "simplifiedSignature": "getByteLength()",
      "datatype": {
        "id": "Schema.describefieldresult.getbytelength.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Schema.describefieldresult.getbytelength",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "For variable-length fields (including binary fields), returns the maximum size of the field, in bytes.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getcalculatedformula()": {
      "id": "Schema.describefieldresult.method.getcalculatedformula()",
      "nodeType": "method",
      "name": "getCalculatedFormula",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCalculatedFormula",
        "textToLower": "getcalculatedformula",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCalculatedFormula_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getCalculatedFormula()",
      "overrideSignature": "public override String getCalculatedFormula()",
      "simplifiedSignature": "getCalculatedFormula()",
      "datatype": {
        "id": "Schema.describefieldresult.getcalculatedformula.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getcalculatedformula",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the formula specified for this field.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getcontroller()": {
      "id": "Schema.describefieldresult.method.getcontroller()",
      "nodeType": "method",
      "name": "getController",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getController",
        "textToLower": "getcontroller",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getController_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Schema.sObjectField getController()",
      "overrideSignature": "public override Schema.sObjectField getController()",
      "simplifiedSignature": "getController()",
      "datatype": {
        "id": "Schema.describefieldresult.getcontroller.datatype.Schema.sObjectField",
        "nodeType": "datatype",
        "name": "Schema.sObjectField",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Schema",
          "textToLower": "schema",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Schema_0:7"
        },
        "parentId": "Schema.describefieldresult.getcontroller",
        "order": 0,
        "memberOrder": 0,
        "type": "Schema.sObjectField"
      },
      "description": "Returns the token of the controlling field.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getdefaultvalue()": {
      "id": "Schema.describefieldresult.method.getdefaultvalue()",
      "nodeType": "method",
      "name": "getDefaultValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDefaultValue",
        "textToLower": "getdefaultvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDefaultValue_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Object getDefaultValue()",
      "overrideSignature": "public override Object getDefaultValue()",
      "simplifiedSignature": "getDefaultValue()",
      "datatype": {
        "id": "Schema.describefieldresult.getdefaultvalue.datatype.Object",
        "nodeType": "datatype",
        "name": "Object",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Object",
          "textToLower": "object",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Object_0:7"
        },
        "parentId": "Schema.describefieldresult.getdefaultvalue",
        "order": 0,
        "memberOrder": 0,
        "type": "Object"
      },
      "description": "Returns the default value for this field.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getdefaultvalueformula()": {
      "id": "Schema.describefieldresult.method.getdefaultvalueformula()",
      "nodeType": "method",
      "name": "getDefaultValueFormula",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDefaultValueFormula",
        "textToLower": "getdefaultvalueformula",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDefaultValueFormula_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getDefaultValueFormula()",
      "overrideSignature": "public override String getDefaultValueFormula()",
      "simplifiedSignature": "getDefaultValueFormula()",
      "datatype": {
        "id": "Schema.describefieldresult.getdefaultvalueformula.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getdefaultvalueformula",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the default value specified for this field if a formula is not used.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getdigits()": {
      "id": "Schema.describefieldresult.method.getdigits()",
      "nodeType": "method",
      "name": "getDigits",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDigits",
        "textToLower": "getdigits",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDigits_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getDigits()",
      "overrideSignature": "public override Integer getDigits()",
      "simplifiedSignature": "getDigits()",
      "datatype": {
        "id": "Schema.describefieldresult.getdigits.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Schema.describefieldresult.getdigits",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "Returns the maximum number of digits specified for the field. This method is only valid with Integer fields.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getinlinehelptext()": {
      "id": "Schema.describefieldresult.method.getinlinehelptext()",
      "nodeType": "method",
      "name": "getInlineHelpText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getInlineHelpText",
        "textToLower": "getinlinehelptext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getInlineHelpText_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 7,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getInlineHelpText()",
      "overrideSignature": "public override String getInlineHelpText()",
      "simplifiedSignature": "getInlineHelpText()",
      "datatype": {
        "id": "Schema.describefieldresult.getinlinehelptext.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getinlinehelptext",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the content of the field-level help.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getlabel()": {
      "id": "Schema.describefieldresult.method.getlabel()",
      "nodeType": "method",
      "name": "getLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLabel",
        "textToLower": "getlabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLabel_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 8,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getLabel()",
      "overrideSignature": "public override String getLabel()",
      "simplifiedSignature": "getLabel()",
      "datatype": {
        "id": "Schema.describefieldresult.getlabel.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getlabel",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the text label that is displayed next to the field in the Salesforce user interface. This label can be localized.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getlength()": {
      "id": "Schema.describefieldresult.method.getlength()",
      "nodeType": "method",
      "name": "getLength",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLength",
        "textToLower": "getlength",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLength_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 9,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getLength()",
      "overrideSignature": "public override Integer getLength()",
      "simplifiedSignature": "getLength()",
      "datatype": {
        "id": "Schema.describefieldresult.getlength.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Schema.describefieldresult.getlength",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "Returns the maximum size of the field for the DescribeFieldResult object in Unicode characters (not bytes).",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getlocalname()": {
      "id": "Schema.describefieldresult.method.getlocalname()",
      "nodeType": "method",
      "name": "getLocalName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLocalName",
        "textToLower": "getlocalname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLocalName_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 10,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getLocalName()",
      "overrideSignature": "public override String getLocalName()",
      "simplifiedSignature": "getLocalName()",
      "datatype": {
        "id": "Schema.describefieldresult.getlocalname.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getlocalname",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the name of the field, similar to the getName method. However, if the field is part of the current namespace, the namespace portion of the name is omitted.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getname()": {
      "id": "Schema.describefieldresult.method.getname()",
      "nodeType": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 11,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getName()",
      "overrideSignature": "public override String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "Schema.describefieldresult.getname.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getname",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the field name used in Apex.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getpicklistvalues()": {
      "id": "Schema.describefieldresult.method.getpicklistvalues()",
      "nodeType": "method",
      "name": "getPicklistValues",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPicklistValues",
        "textToLower": "getpicklistvalues",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPicklistValues_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 12,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public List<Schema.PicklistEntry> getPicklistValues()",
      "overrideSignature": "public override List<Schema.PicklistEntry> getPicklistValues()",
      "simplifiedSignature": "getPicklistValues()",
      "datatype": {
        "id": "Schema.describefieldresult.getpicklistvalues.datatype.List<Schema.PicklistEntry>",
        "nodeType": "datatype",
        "name": "List<Schema.PicklistEntry>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:7"
        },
        "parentId": "Schema.describefieldresult.getpicklistvalues",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "Schema.describefieldresult.getpicklistvalues.datatype.List<Schema.PicklistEntry>.value.Schema.PicklistEntry",
          "nodeType": "datatype",
          "name": "Schema.PicklistEntry",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Schema",
            "textToLower": "schema",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 12
              },
              "end": {
                "line": 0,
                "character": 18
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Schema_0:12"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Schema.PicklistEntry"
        }
      },
      "description": "Returns a list of PicklistEntry objects. A runtime error is returned if the field is not a picklist.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getprecision()": {
      "id": "Schema.describefieldresult.method.getprecision()",
      "nodeType": "method",
      "name": "getPrecision",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPrecision",
        "textToLower": "getprecision",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPrecision_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 13,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getPrecision()",
      "overrideSignature": "public override Integer getPrecision()",
      "simplifiedSignature": "getPrecision()",
      "datatype": {
        "id": "Schema.describefieldresult.getprecision.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Schema.describefieldresult.getprecision",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "For fields of type Double, returns the maximum number of digits that can be stored, including all numbers to the left and to the right of the decimal point (but excluding the decimal point character).",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getreferencetargetfield()": {
      "id": "Schema.describefieldresult.method.getreferencetargetfield()",
      "nodeType": "method",
      "name": "getReferenceTargetField",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getReferenceTargetField",
        "textToLower": "getreferencetargetfield",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getReferenceTargetField_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 14,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getReferenceTargetField()",
      "overrideSignature": "public override String getReferenceTargetField()",
      "simplifiedSignature": "getReferenceTargetField()",
      "datatype": {
        "id": "Schema.describefieldresult.getreferencetargetfield.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getreferencetargetfield",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the name of the custom field on the parent standard or custom object whose values are matched against the values of the child external object's indirect lookup relationship field. The match is done to determine which records are related to each other.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getreferenceto()": {
      "id": "Schema.describefieldresult.method.getreferenceto()",
      "nodeType": "method",
      "name": "getReferenceTo",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getReferenceTo",
        "textToLower": "getreferenceto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getReferenceTo_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 15,
      "memberOrder": 15,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public List<Schema.sObjectType> getReferenceTo()",
      "overrideSignature": "public override List<Schema.sObjectType> getReferenceTo()",
      "simplifiedSignature": "getReferenceTo()",
      "datatype": {
        "id": "Schema.describefieldresult.getreferenceto.datatype.List<Schema.sObjectType>",
        "nodeType": "datatype",
        "name": "List<Schema.sObjectType>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:7"
        },
        "parentId": "Schema.describefieldresult.getreferenceto",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "Schema.describefieldresult.getreferenceto.datatype.List<Schema.sObjectType>.value.Schema.sObjectType",
          "nodeType": "datatype",
          "name": "Schema.sObjectType",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Schema",
            "textToLower": "schema",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 13
              },
              "end": {
                "line": 0,
                "character": 19
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Schema_0:13"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Schema.sObjectType"
        }
      },
      "description": "Returns a list of Schema.sObjectType objects for the parent objects of this field. If the isNamePointing method returns true, there is more than one entry in the list, otherwise there is only one.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getrelationshipname()": {
      "id": "Schema.describefieldresult.method.getrelationshipname()",
      "nodeType": "method",
      "name": "getRelationshipName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRelationshipName",
        "textToLower": "getrelationshipname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRelationshipName_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 16,
      "memberOrder": 16,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public String getRelationshipName()",
      "overrideSignature": "public override String getRelationshipName()",
      "simplifiedSignature": "getRelationshipName()",
      "datatype": {
        "id": "Schema.describefieldresult.getrelationshipname.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:7"
        },
        "parentId": "Schema.describefieldresult.getrelationshipname",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the name of the relationship.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getrelationshiporder()": {
      "id": "Schema.describefieldresult.method.getrelationshiporder()",
      "nodeType": "method",
      "name": "getRelationshipOrder",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRelationshipOrder",
        "textToLower": "getrelationshiporder",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRelationshipOrder_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 17,
      "memberOrder": 17,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getRelationshipOrder()",
      "overrideSignature": "public override Integer getRelationshipOrder()",
      "simplifiedSignature": "getRelationshipOrder()",
      "datatype": {
        "id": "Schema.describefieldresult.getrelationshiporder.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Schema.describefieldresult.getrelationshiporder",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "Returns 1 if the field is a child, 0 otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getscale()": {
      "id": "Schema.describefieldresult.method.getscale()",
      "nodeType": "method",
      "name": "getScale",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getScale",
        "textToLower": "getscale",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getScale_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 18,
      "memberOrder": 18,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Integer getScale()",
      "overrideSignature": "public override Integer getScale()",
      "simplifiedSignature": "getScale()",
      "datatype": {
        "id": "Schema.describefieldresult.getscale.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:7"
        },
        "parentId": "Schema.describefieldresult.getscale",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "For fields of type Double, returns the number of digits to the right of the decimal point. Any extra digits to the right of the decimal point are truncated.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getsoaptype()": {
      "id": "Schema.describefieldresult.method.getsoaptype()",
      "nodeType": "method",
      "name": "getSOAPType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSOAPType",
        "textToLower": "getsoaptype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSOAPType_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 19,
      "memberOrder": 19,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Schema.SOAPType getSOAPType()",
      "overrideSignature": "public override Schema.SOAPType getSOAPType()",
      "simplifiedSignature": "getSOAPType()",
      "datatype": {
        "id": "Schema.describefieldresult.getsoaptype.datatype.Schema.SOAPType",
        "nodeType": "datatype",
        "name": "Schema.SOAPType",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Schema",
          "textToLower": "schema",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Schema_0:7"
        },
        "parentId": "Schema.describefieldresult.getsoaptype",
        "order": 0,
        "memberOrder": 0,
        "type": "Schema.SOAPType"
      },
      "description": "Returns one of the SoapType enum values, depending on the type of field.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getsobjectfield()": {
      "id": "Schema.describefieldresult.method.getsobjectfield()",
      "nodeType": "method",
      "name": "getSObjectField",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObjectField",
        "textToLower": "getsobjectfield",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObjectField_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 20,
      "memberOrder": 20,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Schema.sObjectField getSObjectField()",
      "overrideSignature": "public override Schema.sObjectField getSObjectField()",
      "simplifiedSignature": "getSObjectField()",
      "datatype": {
        "id": "Schema.describefieldresult.getsobjectfield.datatype.Schema.sObjectField",
        "nodeType": "datatype",
        "name": "Schema.sObjectField",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Schema",
          "textToLower": "schema",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Schema_0:7"
        },
        "parentId": "Schema.describefieldresult.getsobjectfield",
        "order": 0,
        "memberOrder": 0,
        "type": "Schema.sObjectField"
      },
      "description": "Returns the token for this field.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "gettype()": {
      "id": "Schema.describefieldresult.method.gettype()",
      "nodeType": "method",
      "name": "getType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getType",
        "textToLower": "gettype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getType_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 21,
      "memberOrder": 21,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Schema.DisplayType getType()",
      "overrideSignature": "public override Schema.DisplayType getType()",
      "simplifiedSignature": "getType()",
      "datatype": {
        "id": "Schema.describefieldresult.gettype.datatype.Schema.DisplayType",
        "nodeType": "datatype",
        "name": "Schema.DisplayType",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Schema",
          "textToLower": "schema",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Schema_0:7"
        },
        "parentId": "Schema.describefieldresult.gettype",
        "order": 0,
        "memberOrder": 0,
        "type": "Schema.DisplayType"
      },
      "description": "Returns one of the DisplayType enum values, depending on the type of field.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isaccessible()": {
      "id": "Schema.describefieldresult.method.isaccessible()",
      "nodeType": "method",
      "name": "isAccessible",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAccessible",
        "textToLower": "isaccessible",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAccessible_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 22,
      "memberOrder": 22,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isAccessible()",
      "overrideSignature": "public override Boolean isAccessible()",
      "simplifiedSignature": "isAccessible()",
      "datatype": {
        "id": "Schema.describefieldresult.isaccessible.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isaccessible",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the current user can see this field, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isaipredictionfield()": {
      "id": "Schema.describefieldresult.method.isaipredictionfield()",
      "nodeType": "method",
      "name": "isAiPredictionField",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAiPredictionField",
        "textToLower": "isaipredictionfield",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAiPredictionField_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 23,
      "memberOrder": 23,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isAiPredictionField()",
      "overrideSignature": "public override Boolean isAiPredictionField()",
      "simplifiedSignature": "isAiPredictionField()",
      "datatype": {
        "id": "Schema.describefieldresult.isaipredictionfield.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isaipredictionfield",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the current field is enabled to display Einstein prediction data, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isautonumber()": {
      "id": "Schema.describefieldresult.method.isautonumber()",
      "nodeType": "method",
      "name": "isAutoNumber",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAutoNumber",
        "textToLower": "isautonumber",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAutoNumber_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 24,
      "memberOrder": 24,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isAutoNumber()",
      "overrideSignature": "public override Boolean isAutoNumber()",
      "simplifiedSignature": "isAutoNumber()",
      "datatype": {
        "id": "Schema.describefieldresult.isautonumber.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isautonumber",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is an Auto Number field, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iscalculated()": {
      "id": "Schema.describefieldresult.method.iscalculated()",
      "nodeType": "method",
      "name": "isCalculated",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCalculated",
        "textToLower": "iscalculated",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCalculated_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 25,
      "memberOrder": 25,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isCalculated()",
      "overrideSignature": "public override Boolean isCalculated()",
      "simplifiedSignature": "isCalculated()",
      "datatype": {
        "id": "Schema.describefieldresult.iscalculated.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.iscalculated",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is a custom formula field, false otherwise. Note that custom formula fields are always read-only.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iscascadedelete()": {
      "id": "Schema.describefieldresult.method.iscascadedelete()",
      "nodeType": "method",
      "name": "isCascadeDelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCascadeDelete",
        "textToLower": "iscascadedelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCascadeDelete_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 26,
      "memberOrder": 26,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isCascadeDelete()",
      "overrideSignature": "public override Boolean isCascadeDelete()",
      "simplifiedSignature": "isCascadeDelete()",
      "datatype": {
        "id": "Schema.describefieldresult.iscascadedelete.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.iscascadedelete",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the child object is deleted when the parent object is deleted, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iscasesensitive()": {
      "id": "Schema.describefieldresult.method.iscasesensitive()",
      "nodeType": "method",
      "name": "isCaseSensitive",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCaseSensitive",
        "textToLower": "iscasesensitive",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCaseSensitive_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 27,
      "memberOrder": 27,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isCaseSensitive()",
      "overrideSignature": "public override Boolean isCaseSensitive()",
      "simplifiedSignature": "isCaseSensitive()",
      "datatype": {
        "id": "Schema.describefieldresult.iscasesensitive.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.iscasesensitive",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is case sensitive, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iscreateable()": {
      "id": "Schema.describefieldresult.method.iscreateable()",
      "nodeType": "method",
      "name": "isCreateable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCreateable",
        "textToLower": "iscreateable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCreateable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 28,
      "memberOrder": 28,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isCreateable()",
      "overrideSignature": "public override Boolean isCreateable()",
      "simplifiedSignature": "isCreateable()",
      "datatype": {
        "id": "Schema.describefieldresult.iscreateable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.iscreateable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field can be created by the current user, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iscustom()": {
      "id": "Schema.describefieldresult.method.iscustom()",
      "nodeType": "method",
      "name": "isCustom",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCustom",
        "textToLower": "iscustom",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCustom_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 29,
      "memberOrder": 29,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isCustom()",
      "overrideSignature": "public override Boolean isCustom()",
      "simplifiedSignature": "isCustom()",
      "datatype": {
        "id": "Schema.describefieldresult.iscustom.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.iscustom",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is a custom field, false if it is a standard field, such as Name.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isdefaultedoncreate()": {
      "id": "Schema.describefieldresult.method.isdefaultedoncreate()",
      "nodeType": "method",
      "name": "isDefaultedOnCreate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDefaultedOnCreate",
        "textToLower": "isdefaultedoncreate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDefaultedOnCreate_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 30,
      "memberOrder": 30,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isDefaultedOnCreate()",
      "overrideSignature": "public override Boolean isDefaultedOnCreate()",
      "simplifiedSignature": "isDefaultedOnCreate()",
      "datatype": {
        "id": "Schema.describefieldresult.isdefaultedoncreate.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isdefaultedoncreate",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field receives a default value when created, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isdependentpicklist()": {
      "id": "Schema.describefieldresult.method.isdependentpicklist()",
      "nodeType": "method",
      "name": "isDependentPicklist",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDependentPicklist",
        "textToLower": "isdependentpicklist",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDependentPicklist_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 31,
      "memberOrder": 31,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isDependentPicklist()",
      "overrideSignature": "public override Boolean isDependentPicklist()",
      "simplifiedSignature": "isDependentPicklist()",
      "datatype": {
        "id": "Schema.describefieldresult.isdependentpicklist.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isdependentpicklist",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the picklist is a dependent picklist, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isdeprecatedandhidden()": {
      "id": "Schema.describefieldresult.method.isdeprecatedandhidden()",
      "nodeType": "method",
      "name": "isDeprecatedAndHidden",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDeprecatedAndHidden",
        "textToLower": "isdeprecatedandhidden",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDeprecatedAndHidden_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 32,
      "memberOrder": 32,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isDeprecatedAndHidden()",
      "overrideSignature": "public override Boolean isDeprecatedAndHidden()",
      "simplifiedSignature": "isDeprecatedAndHidden()",
      "datatype": {
        "id": "Schema.describefieldresult.isdeprecatedandhidden.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isdeprecatedandhidden",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Reserved for future use.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isexternalid()": {
      "id": "Schema.describefieldresult.method.isexternalid()",
      "nodeType": "method",
      "name": "isExternalID",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isExternalID",
        "textToLower": "isexternalid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isExternalID_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 33,
      "memberOrder": 33,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isExternalID()",
      "overrideSignature": "public override Boolean isExternalID()",
      "simplifiedSignature": "isExternalID()",
      "datatype": {
        "id": "Schema.describefieldresult.isexternalid.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isexternalid",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is used as an external ID, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isfilterable()": {
      "id": "Schema.describefieldresult.method.isfilterable()",
      "nodeType": "method",
      "name": "isFilterable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isFilterable",
        "textToLower": "isfilterable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isFilterable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 34,
      "memberOrder": 34,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isFilterable()",
      "overrideSignature": "public override Boolean isFilterable()",
      "simplifiedSignature": "isFilterable()",
      "datatype": {
        "id": "Schema.describefieldresult.isfilterable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isfilterable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field can be used as part of the filter criteria of a WHERE statement, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isformulatreatnullnumberaszero()": {
      "id": "Schema.describefieldresult.method.isformulatreatnullnumberaszero()",
      "nodeType": "method",
      "name": "isFormulaTreatNullNumberAsZero",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isFormulaTreatNullNumberAsZero",
        "textToLower": "isformulatreatnullnumberaszero",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isFormulaTreatNullNumberAsZero_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 35,
      "memberOrder": 35,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isFormulaTreatNullNumberAsZero()",
      "overrideSignature": "public override Boolean isFormulaTreatNullNumberAsZero()",
      "simplifiedSignature": "isFormulaTreatNullNumberAsZero()",
      "datatype": {
        "id": "Schema.describefieldresult.isformulatreatnullnumberaszero.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isformulatreatnullnumberaszero",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if null is treated as zero in a formula field, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isgroupable()": {
      "id": "Schema.describefieldresult.method.isgroupable()",
      "nodeType": "method",
      "name": "isGroupable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isGroupable",
        "textToLower": "isgroupable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isGroupable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 36,
      "memberOrder": 36,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isGroupable()",
      "overrideSignature": "public override Boolean isGroupable()",
      "simplifiedSignature": "isGroupable()",
      "datatype": {
        "id": "Schema.describefieldresult.isgroupable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isgroupable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field can be included in the GROUP BY clause of a SOQL query, false otherwise. This method is only available for Apex classes and triggers saved using API version 18.0 and higher.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "ishtmlformatted()": {
      "id": "Schema.describefieldresult.method.ishtmlformatted()",
      "nodeType": "method",
      "name": "isHtmlFormatted",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isHtmlFormatted",
        "textToLower": "ishtmlformatted",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isHtmlFormatted_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 37,
      "memberOrder": 37,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isHtmlFormatted()",
      "overrideSignature": "public override Boolean isHtmlFormatted()",
      "simplifiedSignature": "isHtmlFormatted()",
      "datatype": {
        "id": "Schema.describefieldresult.ishtmlformatted.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.ishtmlformatted",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field has been formatted for HTML and should be encoded for display in HTML, false otherwise. One example of a field that returns true for this method is a hyperlink custom formula field. Another example is a custom formula field that has an IMAGE text function.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isidlookup()": {
      "id": "Schema.describefieldresult.method.isidlookup()",
      "nodeType": "method",
      "name": "isIdLookup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isIdLookup",
        "textToLower": "isidlookup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isIdLookup_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 38,
      "memberOrder": 38,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isIdLookup()",
      "overrideSignature": "public override Boolean isIdLookup()",
      "simplifiedSignature": "isIdLookup()",
      "datatype": {
        "id": "Schema.describefieldresult.isidlookup.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isidlookup",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field can be used to specify a record in an upsert method, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isnamefield()": {
      "id": "Schema.describefieldresult.method.isnamefield()",
      "nodeType": "method",
      "name": "isNameField",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isNameField",
        "textToLower": "isnamefield",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isNameField_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 39,
      "memberOrder": 39,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isNameField()",
      "overrideSignature": "public override Boolean isNameField()",
      "simplifiedSignature": "isNameField()",
      "datatype": {
        "id": "Schema.describefieldresult.isnamefield.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isnamefield",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is a name field, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isnamepointing()": {
      "id": "Schema.describefieldresult.method.isnamepointing()",
      "nodeType": "method",
      "name": "isNamePointing",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isNamePointing",
        "textToLower": "isnamepointing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isNamePointing_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 40,
      "memberOrder": 40,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isNamePointing()",
      "overrideSignature": "public override Boolean isNamePointing()",
      "simplifiedSignature": "isNamePointing()",
      "datatype": {
        "id": "Schema.describefieldresult.isnamepointing.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isnamepointing",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field can have multiple types of objects as parents. For example, a task can have both the Contact/Lead ID (WhoId) field and the Opportunity/Account ID (WhatId) field return true for this method. because either of those objects can be the parent of a particular task record. This method returns false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isnillable()": {
      "id": "Schema.describefieldresult.method.isnillable()",
      "nodeType": "method",
      "name": "isNillable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isNillable",
        "textToLower": "isnillable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isNillable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 41,
      "memberOrder": 41,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isNillable()",
      "overrideSignature": "public override Boolean isNillable()",
      "simplifiedSignature": "isNillable()",
      "datatype": {
        "id": "Schema.describefieldresult.isnillable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isnillable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is nillable, false otherwise. A nillable field can have empty content. A non-nillable field must have a value for the object to be created or saved.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "ispermissionable()": {
      "id": "Schema.describefieldresult.method.ispermissionable()",
      "nodeType": "method",
      "name": "isPermissionable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isPermissionable",
        "textToLower": "ispermissionable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isPermissionable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 42,
      "memberOrder": 42,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isPermissionable()",
      "overrideSignature": "public override Boolean isPermissionable()",
      "simplifiedSignature": "isPermissionable()",
      "datatype": {
        "id": "Schema.describefieldresult.ispermissionable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.ispermissionable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if field permissions can be specified for the field, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isrestricteddelete()": {
      "id": "Schema.describefieldresult.method.isrestricteddelete()",
      "nodeType": "method",
      "name": "isRestrictedDelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isRestrictedDelete",
        "textToLower": "isrestricteddelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isRestrictedDelete_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 43,
      "memberOrder": 43,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isRestrictedDelete()",
      "overrideSignature": "public override Boolean isRestrictedDelete()",
      "simplifiedSignature": "isRestrictedDelete()",
      "datatype": {
        "id": "Schema.describefieldresult.isrestricteddelete.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isrestricteddelete",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the parent object can't be deleted because it is referenced by a child object, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isrestrictedpicklist()": {
      "id": "Schema.describefieldresult.method.isrestrictedpicklist()",
      "nodeType": "method",
      "name": "isRestrictedPicklist",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isRestrictedPicklist",
        "textToLower": "isrestrictedpicklist",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isRestrictedPicklist_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 44,
      "memberOrder": 44,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isRestrictedPicklist()",
      "overrideSignature": "public override Boolean isRestrictedPicklist()",
      "simplifiedSignature": "isRestrictedPicklist()",
      "datatype": {
        "id": "Schema.describefieldresult.isrestrictedpicklist.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isrestrictedpicklist",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field is a restricted picklist, false otherwise",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "issearchprefilterable()": {
      "id": "Schema.describefieldresult.method.issearchprefilterable()",
      "nodeType": "method",
      "name": "isSearchPrefilterable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSearchPrefilterable",
        "textToLower": "issearchprefilterable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSearchPrefilterable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 45,
      "memberOrder": 45,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isSearchPrefilterable()",
      "overrideSignature": "public override Boolean isSearchPrefilterable()",
      "simplifiedSignature": "isSearchPrefilterable()",
      "datatype": {
        "id": "Schema.describefieldresult.issearchprefilterable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.issearchprefilterable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if a foreign key can be included in prefiltering when used in a SOSL WHERE clause, false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "issortable()": {
      "id": "Schema.describefieldresult.method.issortable()",
      "nodeType": "method",
      "name": "isSortable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSortable",
        "textToLower": "issortable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSortable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 46,
      "memberOrder": 46,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isSortable()",
      "overrideSignature": "public override Boolean isSortable()",
      "simplifiedSignature": "isSortable()",
      "datatype": {
        "id": "Schema.describefieldresult.issortable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.issortable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if a query can sort on the field, false otherwise",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isunique()": {
      "id": "Schema.describefieldresult.method.isunique()",
      "nodeType": "method",
      "name": "isUnique",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isUnique",
        "textToLower": "isunique",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isUnique_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 47,
      "memberOrder": 47,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isUnique()",
      "overrideSignature": "public override Boolean isUnique()",
      "simplifiedSignature": "isUnique()",
      "datatype": {
        "id": "Schema.describefieldresult.isunique.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isunique",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the value for the field must be unique, false otherwise",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "isupdateable()": {
      "id": "Schema.describefieldresult.method.isupdateable()",
      "nodeType": "method",
      "name": "isUpdateable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isUpdateable",
        "textToLower": "isupdateable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isUpdateable_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 48,
      "memberOrder": 48,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isUpdateable()",
      "overrideSignature": "public override Boolean isUpdateable()",
      "simplifiedSignature": "isUpdateable()",
      "datatype": {
        "id": "Schema.describefieldresult.isupdateable.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.isupdateable",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the field can be edited by the current user, or child records in a master-detail relationship field on a custom object can be reparented to different parent records; false otherwise.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "iswriterequiresmasterread()": {
      "id": "Schema.describefieldresult.method.iswriterequiresmasterread()",
      "nodeType": "method",
      "name": "isWriteRequiresMasterRead",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isWriteRequiresMasterRead",
        "textToLower": "iswriterequiresmasterread",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isWriteRequiresMasterRead_-1:0"
      },
      "parentId": "Schema.describefieldresult",
      "order": 49,
      "memberOrder": 49,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Boolean isWriteRequiresMasterRead()",
      "overrideSignature": "public override Boolean isWriteRequiresMasterRead()",
      "simplifiedSignature": "isWriteRequiresMasterRead()",
      "datatype": {
        "id": "Schema.describefieldresult.iswriterequiresmasterread.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 14
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:7"
        },
        "parentId": "Schema.describefieldresult.iswriterequiresmasterread",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if writing to the detail object requires read sharing instead of read/write sharing of the parent.",
      "parentName": "DescribeFieldResult",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 49,
  "queries": []
}