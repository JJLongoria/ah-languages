{
  "id": "Schema.describesobjectresult",
  "type": "class",
  "name": "DescribeSObjectResult",
  "namespace": "Schema",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "DescribeSObjectResult",
    "textToLower": "describesobjectresult",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_DescribeSObjectResult_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for describing sObjects.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_sobject_describe.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "fields()": {
      "id": "Schema.describesobjectresult.fields",
      "type": "method",
      "name": "fields",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "fields",
        "textToLower": "fields",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_fields_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public The return value is a special data type. See the example to learn how to use fields. fields()",
      "simplifiedSignature": "fields()",
      "datatype": {
        "id": "Schema.describesobjectresult.fields.The return value is a special data type. See the example to learn how to use fields.",
        "type": "datatype",
        "name": "The return value is a special data type. See the example to learn how to use fields."
      },
      "description": "Follow fields with a field member variable name or with the getMap method.",
      "variables": {}
    },
    "fieldsets()": {
      "id": "Schema.describesobjectresult.fieldsets",
      "type": "method",
      "name": "fieldSets",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "fieldSets",
        "textToLower": "fieldsets",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_fieldSets_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public The return value is a special data type. See the example to learn how to use fieldSets. fieldSets()",
      "simplifiedSignature": "fieldSets()",
      "datatype": {
        "id": "Schema.describesobjectresult.fieldsets.The return value is a special data type. See the example to learn how to use fieldSets.",
        "type": "datatype",
        "name": "The return value is a special data type. See the example to learn how to use fieldSets."
      },
      "description": "Follow fieldSets with a field set name or with the getMap method.",
      "variables": {}
    },
    "getchildrelationships()": {
      "id": "Schema.describesobjectresult.getchildrelationships",
      "type": "method",
      "name": "getChildRelationships",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getChildRelationships",
        "textToLower": "getchildrelationships",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getChildRelationships_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Schema.ChildRelationship> getChildRelationships()",
      "simplifiedSignature": "getChildRelationships()",
      "datatype": {
        "id": "Schema.describesobjectresult.getchildrelationships.List<Schema.ChildRelationship>",
        "type": "datatype",
        "name": "List<Schema.ChildRelationship>"
      },
      "description": "Returns a list of child relationships, which are the names of the sObjects that have a foreign key to the sObject being described.",
      "variables": {}
    },
    "gethassubtypes()": {
      "id": "Schema.describesobjectresult.gethassubtypes",
      "type": "method",
      "name": "getHasSubtypes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getHasSubtypes",
        "textToLower": "gethassubtypes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getHasSubtypes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean getHasSubtypes()",
      "simplifiedSignature": "getHasSubtypes()",
      "datatype": {
        "id": "Schema.describesobjectresult.gethassubtypes.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Indicates whether the object has subtypes. The Account object, which has subtype PersonAccount, is the only object that will return true.",
      "variables": {}
    },
    "getkeyprefix()": {
      "id": "Schema.describesobjectresult.getkeyprefix",
      "type": "method",
      "name": "getKeyPrefix",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getKeyPrefix",
        "textToLower": "getkeyprefix",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getKeyPrefix_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getKeyPrefix()",
      "simplifiedSignature": "getKeyPrefix()",
      "datatype": {
        "id": "Schema.describesobjectresult.getkeyprefix.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the three-character prefix code for the object. Record IDs are prefixed with three-character codes that specify the type of the object (for example, accounts have a prefix of 001 and opportunities have a prefix of 006).",
      "variables": {}
    },
    "getlabel()": {
      "id": "Schema.describesobjectresult.getlabel",
      "type": "method",
      "name": "getLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLabel",
        "textToLower": "getlabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLabel_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getLabel()",
      "simplifiedSignature": "getLabel()",
      "datatype": {
        "id": "Schema.describesobjectresult.getlabel.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the object's label, which may or may not match the object name.",
      "variables": {}
    },
    "getlabelplural()": {
      "id": "Schema.describesobjectresult.getlabelplural",
      "type": "method",
      "name": "getLabelPlural",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLabelPlural",
        "textToLower": "getlabelplural",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLabelPlural_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getLabelPlural()",
      "simplifiedSignature": "getLabelPlural()",
      "datatype": {
        "id": "Schema.describesobjectresult.getlabelplural.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the object's plural label, which may or may not match the object name.",
      "variables": {}
    },
    "getlocalname()": {
      "id": "Schema.describesobjectresult.getlocalname",
      "type": "method",
      "name": "getLocalName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLocalName",
        "textToLower": "getlocalname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLocalName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getLocalName()",
      "simplifiedSignature": "getLocalName()",
      "datatype": {
        "id": "Schema.describesobjectresult.getlocalname.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the name of the object, similar to the getName method. However, if the object is part of the current namespace, the namespace portion of the name is omitted.",
      "variables": {}
    },
    "getname()": {
      "id": "Schema.describesobjectresult.getname",
      "type": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "Schema.describesobjectresult.getname.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the name of the object.",
      "variables": {}
    },
    "getrecordtypeinfos()": {
      "id": "Schema.describesobjectresult.getrecordtypeinfos",
      "type": "method",
      "name": "getRecordTypeInfos",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecordTypeInfos",
        "textToLower": "getrecordtypeinfos",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecordTypeInfos_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Schema.RecordTypeInfo> getRecordTypeInfos()",
      "simplifiedSignature": "getRecordTypeInfos()",
      "datatype": {
        "id": "Schema.describesobjectresult.getrecordtypeinfos.List<Schema.RecordTypeInfo>",
        "type": "datatype",
        "name": "List<Schema.RecordTypeInfo>"
      },
      "description": "Returns a list of the record types supported by this object. The current user is not required to have access to a record type to see it in this list.",
      "variables": {}
    },
    "getrecordtypeinfosbydevelopername()": {
      "id": "Schema.describesobjectresult.getrecordtypeinfosbydevelopername",
      "type": "method",
      "name": "getRecordTypeInfosByDeveloperName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecordTypeInfosByDeveloperName",
        "textToLower": "getrecordtypeinfosbydevelopername",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecordTypeInfosByDeveloperName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Map<String,  Schema.RecordTypeInfo> getRecordTypeInfosByDeveloperName()",
      "simplifiedSignature": "getRecordTypeInfosByDeveloperName()",
      "datatype": {
        "id": "Schema.describesobjectresult.getrecordtypeinfosbydevelopername.Map<String,  Schema.RecordTypeInfo>",
        "type": "datatype",
        "name": "Map<String,  Schema.RecordTypeInfo>"
      },
      "description": "Returns a map that matches developer names to their associated record type. The current user is not required to have access to a record type to see it in this map.",
      "variables": {}
    },
    "getrecordtypeinfosbyid()": {
      "id": "Schema.describesobjectresult.getrecordtypeinfosbyid",
      "type": "method",
      "name": "getRecordTypeInfosById",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecordTypeInfosById",
        "textToLower": "getrecordtypeinfosbyid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecordTypeInfosById_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Map<ID,  Schema.RecordTypeInfo> getRecordTypeInfosById()",
      "simplifiedSignature": "getRecordTypeInfosById()",
      "datatype": {
        "id": "Schema.describesobjectresult.getrecordtypeinfosbyid.Map<ID,  Schema.RecordTypeInfo>",
        "type": "datatype",
        "name": "Map<ID,  Schema.RecordTypeInfo>"
      },
      "description": "Returns a map that matches record IDs to their associated record types. The current user is not required to have access to a record type to see it in this map.",
      "variables": {}
    },
    "getrecordtypeinfosbyname()": {
      "id": "Schema.describesobjectresult.getrecordtypeinfosbyname",
      "type": "method",
      "name": "getRecordTypeInfosByName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecordTypeInfosByName",
        "textToLower": "getrecordtypeinfosbyname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecordTypeInfosByName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Map<String,  Schema.RecordTypeInfo> getRecordTypeInfosByName()",
      "simplifiedSignature": "getRecordTypeInfosByName()",
      "datatype": {
        "id": "Schema.describesobjectresult.getrecordtypeinfosbyname.Map<String,  Schema.RecordTypeInfo>",
        "type": "datatype",
        "name": "Map<String,  Schema.RecordTypeInfo>"
      },
      "description": "Returns a map that matches record labels to their associated record type. The current user is not required to have access to a record type to see it in this map.",
      "variables": {}
    },
    "getsobjecttype()": {
      "id": "Schema.describesobjectresult.getsobjecttype",
      "type": "method",
      "name": "getSobjectType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSobjectType",
        "textToLower": "getsobjecttype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSobjectType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Schema.SObjectType getSobjectType()",
      "simplifiedSignature": "getSobjectType()",
      "datatype": {
        "id": "Schema.describesobjectresult.getsobjecttype.Schema.SObjectType",
        "type": "datatype",
        "name": "Schema.SObjectType"
      },
      "description": "Returns the Schema.SObjectType object for the sObject. You can use this to create a similar sObject.",
      "variables": {}
    },
    "isaccessible()": {
      "id": "Schema.describesobjectresult.isaccessible",
      "type": "method",
      "name": "isAccessible",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAccessible",
        "textToLower": "isaccessible",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAccessible_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAccessible()",
      "simplifiedSignature": "isAccessible()",
      "datatype": {
        "id": "Schema.describesobjectresult.isaccessible.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current user can see this object, false otherwise.",
      "variables": {}
    },
    "iscreateable()": {
      "id": "Schema.describesobjectresult.iscreateable",
      "type": "method",
      "name": "isCreateable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCreateable",
        "textToLower": "iscreateable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCreateable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isCreateable()",
      "simplifiedSignature": "isCreateable()",
      "datatype": {
        "id": "Schema.describesobjectresult.iscreateable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object can be created by the current user, false otherwise.",
      "variables": {}
    },
    "iscustom()": {
      "id": "Schema.describesobjectresult.iscustom",
      "type": "method",
      "name": "isCustom",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCustom",
        "textToLower": "iscustom",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCustom_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isCustom()",
      "simplifiedSignature": "isCustom()",
      "datatype": {
        "id": "Schema.describesobjectresult.iscustom.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object is a custom object, false if it is a standard object.",
      "variables": {}
    },
    "iscustomsetting()": {
      "id": "Schema.describesobjectresult.iscustomsetting",
      "type": "method",
      "name": "isCustomSetting",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCustomSetting",
        "textToLower": "iscustomsetting",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCustomSetting_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isCustomSetting()",
      "simplifiedSignature": "isCustomSetting()",
      "datatype": {
        "id": "Schema.describesobjectresult.iscustomsetting.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object is a custom setting, false otherwise.",
      "variables": {}
    },
    "isdeletable()": {
      "id": "Schema.describesobjectresult.isdeletable",
      "type": "method",
      "name": "isDeletable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDeletable",
        "textToLower": "isdeletable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDeletable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isDeletable()",
      "simplifiedSignature": "isDeletable()",
      "datatype": {
        "id": "Schema.describesobjectresult.isdeletable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object can be deleted by the current user, false otherwise.",
      "variables": {}
    },
    "isdeprecatedandhidden()": {
      "id": "Schema.describesobjectresult.isdeprecatedandhidden",
      "type": "method",
      "name": "isDeprecatedAndHidden",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDeprecatedAndHidden",
        "textToLower": "isdeprecatedandhidden",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDeprecatedAndHidden_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isDeprecatedAndHidden()",
      "simplifiedSignature": "isDeprecatedAndHidden()",
      "datatype": {
        "id": "Schema.describesobjectresult.isdeprecatedandhidden.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Reserved for future use.",
      "variables": {}
    },
    "isfeedenabled()": {
      "id": "Schema.describesobjectresult.isfeedenabled",
      "type": "method",
      "name": "isFeedEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isFeedEnabled",
        "textToLower": "isfeedenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isFeedEnabled_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isFeedEnabled()",
      "simplifiedSignature": "isFeedEnabled()",
      "datatype": {
        "id": "Schema.describesobjectresult.isfeedenabled.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if Chatter feeds are enabled for the object, false otherwise. This method is only available for Apex classes and triggers saved using SalesforceAPI version 19.0 and later.",
      "variables": {}
    },
    "ismergeable()": {
      "id": "Schema.describesobjectresult.ismergeable",
      "type": "method",
      "name": "isMergeable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isMergeable",
        "textToLower": "ismergeable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isMergeable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isMergeable()",
      "simplifiedSignature": "isMergeable()",
      "datatype": {
        "id": "Schema.describesobjectresult.ismergeable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object can be merged with other objects of its type by the current user, false otherwise. true is returned for leads, contacts, and accounts.",
      "variables": {}
    },
    "ismruenabled()": {
      "id": "Schema.describesobjectresult.ismruenabled",
      "type": "method",
      "name": "isMruEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isMruEnabled",
        "textToLower": "ismruenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isMruEnabled_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isMruEnabled()",
      "simplifiedSignature": "isMruEnabled()",
      "datatype": {
        "id": "Schema.describesobjectresult.ismruenabled.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if Most Recently Used (MRU) list functionality is enabled for the object, false otherwise.",
      "variables": {}
    },
    "isqueryable()": {
      "id": "Schema.describesobjectresult.isqueryable",
      "type": "method",
      "name": "isQueryable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isQueryable",
        "textToLower": "isqueryable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isQueryable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isQueryable()",
      "simplifiedSignature": "isQueryable()",
      "datatype": {
        "id": "Schema.describesobjectresult.isqueryable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object can be queried by the current user, false otherwise",
      "variables": {}
    },
    "issearchable()": {
      "id": "Schema.describesobjectresult.issearchable",
      "type": "method",
      "name": "isSearchable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSearchable",
        "textToLower": "issearchable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSearchable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isSearchable()",
      "simplifiedSignature": "isSearchable()",
      "datatype": {
        "id": "Schema.describesobjectresult.issearchable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object can be searched by the current user, false otherwise.",
      "variables": {}
    },
    "isundeletable()": {
      "id": "Schema.describesobjectresult.isundeletable",
      "type": "method",
      "name": "isUndeletable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isUndeletable",
        "textToLower": "isundeletable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isUndeletable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isUndeletable()",
      "simplifiedSignature": "isUndeletable()",
      "datatype": {
        "id": "Schema.describesobjectresult.isundeletable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object can be undeleted by the current user, false otherwise.",
      "variables": {}
    },
    "isupdateable()": {
      "id": "Schema.describesobjectresult.isupdateable",
      "type": "method",
      "name": "isUpdateable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isUpdateable",
        "textToLower": "isupdateable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isUpdateable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isUpdateable()",
      "simplifiedSignature": "isUpdateable()",
      "datatype": {
        "id": "Schema.describesobjectresult.isupdateable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the object can be updated by the current user, false otherwise.",
      "variables": {}
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}