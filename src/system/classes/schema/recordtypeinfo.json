{
  "id": "Schema.recordtypeinfo",
  "type": "class",
  "name": "RecordTypeInfo",
  "namespace": "Schema",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "RecordTypeInfo",
    "textToLower": "recordtypeinfo",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_RecordTypeInfo_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for accessing record type information for an sObject with associated record types.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Schema_RecordTypeInfo.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getdevelopername()": {
      "id": "Schema.recordtypeinfo.getdevelopername",
      "type": "method",
      "name": "getDeveloperName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDeveloperName",
        "textToLower": "getdevelopername",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDeveloperName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getDeveloperName()",
      "simplifiedSignature": "getDeveloperName()",
      "datatype": {
        "id": "Schema.recordtypeinfo.getdevelopername.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the developer name for this record type.",
      "variables": {}
    },
    "getname()": {
      "id": "Schema.recordtypeinfo.getname",
      "type": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "Schema.recordtypeinfo.getname.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the UI label of this record type. The label can be translated into any language that Salesforce supports.",
      "variables": {}
    },
    "getrecordtypeid()": {
      "id": "Schema.recordtypeinfo.getrecordtypeid",
      "type": "method",
      "name": "getRecordTypeId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getRecordTypeId",
        "textToLower": "getrecordtypeid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getRecordTypeId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ID getRecordTypeId()",
      "simplifiedSignature": "getRecordTypeId()",
      "datatype": {
        "id": "Schema.recordtypeinfo.getrecordtypeid.ID",
        "type": "datatype",
        "name": "ID"
      },
      "description": "Returns the ID of this record type.",
      "variables": {}
    },
    "isactive()": {
      "id": "Schema.recordtypeinfo.isactive",
      "type": "method",
      "name": "isActive",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isActive",
        "textToLower": "isactive",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isActive_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isActive()",
      "simplifiedSignature": "isActive()",
      "datatype": {
        "id": "Schema.recordtypeinfo.isactive.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if this record type is active, false otherwise.",
      "variables": {}
    },
    "isavailable()": {
      "id": "Schema.recordtypeinfo.isavailable",
      "type": "method",
      "name": "isAvailable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAvailable",
        "textToLower": "isavailable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAvailable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAvailable()",
      "simplifiedSignature": "isAvailable()",
      "datatype": {
        "id": "Schema.recordtypeinfo.isavailable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if this record type is available to the current user, false otherwise. Use this method to display a list of available record types to the user when he or she is creating a new record.",
      "variables": {}
    },
    "isdefaultrecordtypemapping()": {
      "id": "Schema.recordtypeinfo.isdefaultrecordtypemapping",
      "type": "method",
      "name": "isDefaultRecordTypeMapping",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isDefaultRecordTypeMapping",
        "textToLower": "isdefaultrecordtypemapping",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isDefaultRecordTypeMapping_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isDefaultRecordTypeMapping()",
      "simplifiedSignature": "isDefaultRecordTypeMapping()",
      "datatype": {
        "id": "Schema.recordtypeinfo.isdefaultrecordtypemapping.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if this is the default record type for the user, false otherwise.",
      "variables": {}
    },
    "ismaster()": {
      "id": "Schema.recordtypeinfo.ismaster",
      "type": "method",
      "name": "isMaster",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isMaster",
        "textToLower": "ismaster",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isMaster_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isMaster()",
      "simplifiedSignature": "isMaster()",
      "datatype": {
        "id": "Schema.recordtypeinfo.ismaster.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if this is the master record type and false otherwise. The master record type is the default record type that’s used when a record has no custom record type associated with it.",
      "variables": {}
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}