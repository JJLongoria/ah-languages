{
  "id": "Search.questionsuggestionfilter",
  "nodeType": "class",
  "name": "QuestionSuggestionFilter",
  "namespace": "Search",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "QuestionSuggestionFilter",
    "textToLower": "questionsuggestionfilter",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_QuestionSuggestionFilter_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "The Search.QuestionSuggestionFilter class filters results from a call to System.Search.suggest(searchQuery, sObjectType, options) when the SOSL searchQuery  contains a FeedItem object.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_Search_QuestionSuggestionFilter.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "addgroupid(string)": {
      "id": "Search.questionsuggestionfilter.addgroupid",
      "nodeType": "method",
      "name": "addGroupId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addGroupId",
        "textToLower": "addgroupid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addGroupId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addGroupId(String groupId)",
      "simplifiedSignature": "addGroupId(String)",
      "datatype": {
        "id": "Search.questionsuggestionfilter.addgroupid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Adds a filter to display questions associated with the single specified group whose ID is passed in as an argument. This filter is optional.",
      "params": {
        "groupId": {
          "id": "Search.questionsuggestionfilter.addgroupid.groupid",
          "type": "var",
          "name": "groupId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "groupId",
            "textToLower": "groupid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_groupId_-1:0"
          },
          "signature": "String groupId",
          "datatype": {
            "id": "Search.questionsuggestionfilter.addgroupid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "addnetworkid(string)": {
      "id": "Search.questionsuggestionfilter.addnetworkid",
      "nodeType": "method",
      "name": "addNetworkId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addNetworkId",
        "textToLower": "addnetworkid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addNetworkId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addNetworkId(String networkId)",
      "simplifiedSignature": "addNetworkId(String)",
      "datatype": {
        "id": "Search.questionsuggestionfilter.addnetworkid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Adds a filter to display questions associated with the single specified network whose ID is passed in as an argument. This filter is optional.",
      "params": {
        "networkId": {
          "id": "Search.questionsuggestionfilter.addnetworkid.networkid",
          "type": "var",
          "name": "networkId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "networkId",
            "textToLower": "networkid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_networkId_-1:0"
          },
          "signature": "String networkId",
          "datatype": {
            "id": "Search.questionsuggestionfilter.addnetworkid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "adduserid(string)": {
      "id": "Search.questionsuggestionfilter.adduserid",
      "nodeType": "method",
      "name": "addUserId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addUserId",
        "textToLower": "adduserid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addUserId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addUserId(String userId)",
      "simplifiedSignature": "addUserId(String)",
      "datatype": {
        "id": "Search.questionsuggestionfilter.adduserid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Adds a filter to display questions belonging to the single specified user whose ID is passed in as an argument. This filter is optional.",
      "params": {
        "userId": {
          "id": "Search.questionsuggestionfilter.adduserid.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "Search.questionsuggestionfilter.adduserid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setgroupids(list)": {
      "id": "Search.questionsuggestionfilter.setgroupids",
      "nodeType": "method",
      "name": "setGroupIds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setGroupIds",
        "textToLower": "setgroupids",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setGroupIds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setGroupIds(List <String>)",
      "simplifiedSignature": "setGroupIds(List)",
      "datatype": {
        "id": "Search.questionsuggestionfilter.setgroupids.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets a new list of groups to replace the current list of groups where the group IDs are passed in as an argument. This filter is optional.",
      "params": {
        "<String>": {
          "id": "Search.questionsuggestionfilter.setgroupids.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Search.questionsuggestionfilter.setgroupids.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setnetworkids(list)": {
      "id": "Search.questionsuggestionfilter.setnetworkids",
      "nodeType": "method",
      "name": "setNetworkIds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setNetworkIds",
        "textToLower": "setnetworkids",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setNetworkIds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setNetworkIds(List <String>)",
      "simplifiedSignature": "setNetworkIds(List)",
      "datatype": {
        "id": "Search.questionsuggestionfilter.setnetworkids.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets a new list of networks to replace the current list of networks where the network IDs are passed in as an argument. This filter is optional.",
      "params": {
        "<String>": {
          "id": "Search.questionsuggestionfilter.setnetworkids.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Search.questionsuggestionfilter.setnetworkids.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "settopicid(string)": {
      "id": "Search.questionsuggestionfilter.settopicid",
      "nodeType": "method",
      "name": "setTopicId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setTopicId",
        "textToLower": "settopicid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setTopicId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setTopicId(String topicId)",
      "simplifiedSignature": "setTopicId(String)",
      "datatype": {
        "id": "Search.questionsuggestionfilter.settopicid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets a filter to display questions associated with the single specified topic whose ID is passed in as an argument. This filter is optional.",
      "params": {
        "topicId": {
          "id": "Search.questionsuggestionfilter.settopicid.topicid",
          "type": "var",
          "name": "topicId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "topicId",
            "textToLower": "topicid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_topicId_-1:0"
          },
          "signature": "String topicId",
          "datatype": {
            "id": "Search.questionsuggestionfilter.settopicid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setuserids(list)": {
      "id": "Search.questionsuggestionfilter.setuserids",
      "nodeType": "method",
      "name": "setUserIds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setUserIds",
        "textToLower": "setuserids",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setUserIds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setUserIds(List <String>)",
      "simplifiedSignature": "setUserIds(List)",
      "datatype": {
        "id": "Search.questionsuggestionfilter.setuserids.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets a new list of users to replace the current list of users where the users IDs are passed in as an argument. This filter is optional.",
      "params": {
        "<String>": {
          "id": "Search.questionsuggestionfilter.setuserids.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Search.questionsuggestionfilter.setuserids.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}