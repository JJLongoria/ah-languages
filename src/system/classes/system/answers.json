{
  "id": "System.answers",
  "nodeType": "class",
  "name": "Answers",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Answers",
    "textToLower": "answers",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Answers_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Represents zone answers.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_answers.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "findsimilar(question)": {
      "id": "System.answers.method.findsimilar(question)",
      "nodeType": "method",
      "name": "findSimilar",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "findSimilar",
        "textToLower": "findsimilar",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_findSimilar_-1:0"
      },
      "parentId": "System.answers",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ID[] findSimilar(Question yourQuestion)",
      "overrideSignature": "public static override ID[] findSimilar(Question yourQuestion)",
      "simplifiedSignature": "findSimilar(Question)",
      "datatype": {
        "id": "System.answers.findsimilar.datatype.ID[]",
        "nodeType": "datatype",
        "name": "ID[]",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 16
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:14"
        },
        "parentId": "System.answers.findsimilar",
        "order": 0,
        "memberOrder": 0,
        "type": "ID[]"
      },
      "description": "Returns a list of similar questions based on the title of the specified question.",
      "parentName": "Answers",
      "variables": {},
      "params": {
        "yourquestion": {
          "id": "System.answers.method.findsimilar(question).varParam.yourquestion",
          "nodeType": "variable",
          "name": "yourQuestion",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "yourQuestion",
            "textToLower": "yourquestion",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 40
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_yourQuestion_0:40"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "yourQuestion",
            "textToLower": "yourquestion",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 40
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_yourQuestion_0:40"
          },
          "parentId": "System.answers.method.findsimilar(question)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.answers.findsimilar.datatype.Question",
            "nodeType": "datatype",
            "name": "Question",
            "startToken": {
              "type": "datatype.custom.class",
              "text": "Question",
              "textToLower": "question",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 31
                },
                "end": {
                  "line": 0,
                  "character": 39
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Question_0:31"
            },
            "parentId": "System.answers.findsimilar",
            "order": 0,
            "memberOrder": 0,
            "type": "Question"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setbestreply(string,string)": {
      "id": "System.answers.method.setbestreply(string,string)",
      "nodeType": "method",
      "name": "setBestReply",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setBestReply",
        "textToLower": "setbestreply",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setBestReply_-1:0"
      },
      "parentId": "System.answers",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setBestReply(String questionId, String replyId)",
      "overrideSignature": "public static override Void setBestReply(String questionId, String replyId)",
      "simplifiedSignature": "setBestReply(String,String)",
      "datatype": {
        "id": "System.answers.setbestreply.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.answers.setbestreply",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the specified reply for the specified question as the best reply. Because a question can have multiple replies, setting the best reply helps users quickly identify the reply that contains the most helpful information.",
      "parentName": "Answers",
      "variables": {},
      "params": {
        "questionid": {
          "id": "System.answers.method.setbestreply(string,string).varParam.questionid",
          "nodeType": "variable",
          "name": "questionId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "questionId",
            "textToLower": "questionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 39
              },
              "end": {
                "line": 0,
                "character": 49
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_questionId_0:39"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "questionId",
            "textToLower": "questionid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 39
              },
              "end": {
                "line": 0,
                "character": 49
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_questionId_0:39"
          },
          "parentId": "System.answers.method.setbestreply(string,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.answers.setbestreply.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 32
                },
                "end": {
                  "line": 0,
                  "character": 38
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:32"
            },
            "parentId": "System.answers.setbestreply",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "replyid": {
          "id": "System.answers.method.setbestreply(string,string).varParam.replyid",
          "nodeType": "variable",
          "name": "replyId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "replyId",
            "textToLower": "replyid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_replyId_0:58"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "replyId",
            "textToLower": "replyid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_replyId_0:58"
          },
          "parentId": "System.answers.method.setbestreply(string,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.answers.setbestreply.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 51
                },
                "end": {
                  "line": 0,
                  "character": 57
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:51"
            },
            "parentId": "System.answers.setbestreply",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 2,
  "queries": []
}