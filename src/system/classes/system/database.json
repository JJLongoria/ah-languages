{
  "id": "System.database",
  "nodeType": "class",
  "name": "Database",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Database",
    "textToLower": "database",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Database_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for creating and manipulating data.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_database.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "convertlead(database.leadconvert,boolean)": {
      "id": "System.database.method.convertlead(database.leadconvert,boolean)",
      "nodeType": "method",
      "name": "convertLead",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "convertLead",
        "textToLower": "convertlead",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_convertLead_-1:0"
      },
      "parentId": "System.database",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.LeadConvertResult convertLead(Database.LeadConvert leadToConvert, Boolean allOrNone)",
      "overrideSignature": "public static override Database.LeadConvertResult convertLead(Database.LeadConvert leadToConvert, Boolean allOrNone)",
      "simplifiedSignature": "convertLead(Database.LeadConvert,Boolean)",
      "datatype": {
        "id": "System.database.convertlead.datatype.Database.LeadConvertResult",
        "nodeType": "datatype",
        "name": "Database.LeadConvertResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.convertlead",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.LeadConvertResult"
      },
      "description": "Converts a lead into an account and contact, as well as (optionally) an opportunity.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "leadtoconvert": {
          "id": "System.database.method.convertlead(database.leadconvert,boolean).varParam.leadtoconvert",
          "nodeType": "variable",
          "name": "leadToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadToConvert",
            "textToLower": "leadtoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 87
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_leadToConvert_0:74"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadToConvert",
            "textToLower": "leadtoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 74
              },
              "end": {
                "line": 0,
                "character": 87
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_leadToConvert_0:74"
          },
          "parentId": "System.database.method.convertlead(database.leadconvert,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.convertlead.datatype.Database.LeadConvert",
            "nodeType": "datatype",
            "name": "Database.LeadConvert",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Database",
              "textToLower": "database",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 53
                },
                "end": {
                  "line": 0,
                  "character": 61
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Database_0:53"
            },
            "parentId": "System.database.convertlead",
            "order": 0,
            "memberOrder": 0,
            "type": "Database.LeadConvert"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.convertlead(database.leadconvert,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 97
              },
              "end": {
                "line": 0,
                "character": 106
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:97"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 97
              },
              "end": {
                "line": 0,
                "character": 106
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:97"
          },
          "parentId": "System.database.method.convertlead(database.leadconvert,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.convertlead.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 89
                },
                "end": {
                  "line": 0,
                  "character": 96
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:89"
            },
            "parentId": "System.database.convertlead",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "convertlead(database.leadconvert[],boolean)": {
      "id": "System.database.method.convertlead(database.leadconvert[],boolean)",
      "nodeType": "method",
      "name": "convertLead",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "convertLead",
        "textToLower": "convertlead",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_convertLead_-1:0"
      },
      "parentId": "System.database",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.LeadConvertResult[] convertLead(Database.LeadConvert[] leadsToConvert, Boolean allOrNone)",
      "overrideSignature": "public static override Database.LeadConvertResult[] convertLead(Database.LeadConvert[] leadsToConvert, Boolean allOrNone)",
      "simplifiedSignature": "convertLead(Database.LeadConvert[],Boolean)",
      "datatype": {
        "id": "System.database.convertlead.datatype.Database.LeadConvertResult[]",
        "nodeType": "datatype",
        "name": "Database.LeadConvertResult[]",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.convertlead",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.LeadConvertResult[]"
      },
      "description": "Converts a list of LeadConvert objects into accounts and contacts, as well as (optionally) opportunities.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "leadstoconvert": {
          "id": "System.database.method.convertlead(database.leadconvert[],boolean).varParam.leadstoconvert",
          "nodeType": "variable",
          "name": "leadsToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadsToConvert",
            "textToLower": "leadstoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 78
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_leadsToConvert_0:78"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadsToConvert",
            "textToLower": "leadstoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 78
              },
              "end": {
                "line": 0,
                "character": 92
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_leadsToConvert_0:78"
          },
          "parentId": "System.database.method.convertlead(database.leadconvert[],boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.convertlead.datatype.Database.LeadConvert[]",
            "nodeType": "datatype",
            "name": "Database.LeadConvert[]",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Database",
              "textToLower": "database",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 55
                },
                "end": {
                  "line": 0,
                  "character": 63
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Database_0:55"
            },
            "parentId": "System.database.convertlead",
            "order": 0,
            "memberOrder": 0,
            "type": "Database.LeadConvert[]"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.convertlead(database.leadconvert[],boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 102
              },
              "end": {
                "line": 0,
                "character": 111
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:102"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 102
              },
              "end": {
                "line": 0,
                "character": 111
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:102"
          },
          "parentId": "System.database.method.convertlead(database.leadconvert[],boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.convertlead.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 94
                },
                "end": {
                  "line": 0,
                  "character": 101
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:94"
            },
            "parentId": "System.database.convertlead",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "countquery(string)": {
      "id": "System.database.method.countquery(string)",
      "nodeType": "method",
      "name": "countQuery",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "countQuery",
        "textToLower": "countquery",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_countQuery_-1:0"
      },
      "parentId": "System.database",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Integer countQuery(String query)",
      "overrideSignature": "public static override Integer countQuery(String query)",
      "simplifiedSignature": "countQuery(String)",
      "datatype": {
        "id": "System.database.countquery.datatype.Integer",
        "nodeType": "datatype",
        "name": "Integer",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Integer",
          "textToLower": "integer",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 21
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Integer_0:14"
        },
        "parentId": "System.database.countquery",
        "order": 0,
        "memberOrder": 0,
        "type": "Integer"
      },
      "description": "Returns the number of records that a dynamic SOQL query would return when executed.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "query": {
          "id": "System.database.method.countquery(string).varParam.query",
          "nodeType": "variable",
          "name": "query",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "query",
            "textToLower": "query",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 40
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_query_0:40"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "query",
            "textToLower": "query",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 40
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_query_0:40"
          },
          "parentId": "System.database.method.countquery(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.countquery.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 33
                },
                "end": {
                  "line": 0,
                  "character": 39
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:33"
            },
            "parentId": "System.database.countquery",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "delete(sobject,boolean)": {
      "id": "System.database.method.delete(sobject,boolean)",
      "nodeType": "method",
      "name": "delete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "delete",
        "textToLower": "delete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_delete_-1:0"
      },
      "parentId": "System.database",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DeleteResult delete(SObject recordToDelete, Boolean allOrNone)",
      "overrideSignature": "public static override Database.DeleteResult delete(SObject recordToDelete, Boolean allOrNone)",
      "simplifiedSignature": "delete(SObject,Boolean)",
      "datatype": {
        "id": "System.database.delete.datatype.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.delete",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DeleteResult"
      },
      "description": "Deletes an existing sObject record, such as an individual account or contact, from your organization's data.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordtodelete": {
          "id": "System.database.method.delete(sobject,boolean).varParam.recordtodelete",
          "nodeType": "variable",
          "name": "recordToDelete",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToDelete",
            "textToLower": "recordtodelete",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToDelete_0:51"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToDelete",
            "textToLower": "recordtodelete",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToDelete_0:51"
          },
          "parentId": "System.database.method.delete(sobject,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.delete.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 43
                },
                "end": {
                  "line": 0,
                  "character": 50
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:43"
            },
            "parentId": "System.database.delete",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.delete(sobject,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 75
              },
              "end": {
                "line": 0,
                "character": 84
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:75"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 75
              },
              "end": {
                "line": 0,
                "character": 84
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:75"
          },
          "parentId": "System.database.method.delete(sobject,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.delete.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 67
                },
                "end": {
                  "line": 0,
                  "character": 74
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:67"
            },
            "parentId": "System.database.delete",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "delete()": {
      "id": "System.database.method.delete()",
      "nodeType": "method",
      "name": "delete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "delete",
        "textToLower": "delete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_delete_-1:0"
      },
      "parentId": "System.database",
      "order": 6,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Boolean delete()",
      "overrideSignature": "public static override Boolean delete()",
      "simplifiedSignature": "delete()",
      "datatype": {
        "id": "System.database.delete.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 61
            },
            "end": {
              "line": 0,
              "character": 68
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:61"
        },
        "parentId": "System.database.delete",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Deletes a list of existing sObject records, such as individual accounts or contacts, from your organization’s data.",
      "parentName": "Database",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "delete(id,boolean)": {
      "id": "System.database.method.delete(id,boolean)",
      "nodeType": "method",
      "name": "delete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "delete",
        "textToLower": "delete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_delete_-1:0"
      },
      "parentId": "System.database",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DeleteResult delete(ID recordID, Boolean allOrNone)",
      "overrideSignature": "public static override Database.DeleteResult delete(ID recordID, Boolean allOrNone)",
      "simplifiedSignature": "delete(ID,Boolean)",
      "datatype": {
        "id": "System.database.delete.datatype.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.delete",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DeleteResult"
      },
      "description": "Deletes existing sObject records, such as individual accounts or contacts, from your organization’s data.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordid": {
          "id": "System.database.method.delete(id,boolean).varParam.recordid",
          "nodeType": "variable",
          "name": "recordID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordID",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordID_0:46"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordID",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordID_0:46"
          },
          "parentId": "System.database.method.delete(id,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.delete.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 43
                },
                "end": {
                  "line": 0,
                  "character": 45
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:43"
            },
            "parentId": "System.database.delete",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.delete(id,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:64"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:64"
          },
          "parentId": "System.database.method.delete(id,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.delete.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 56
                },
                "end": {
                  "line": 0,
                  "character": 63
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:56"
            },
            "parentId": "System.database.delete",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleteasync(list<sobject>,datasource.asyncdeletecallback)": {
      "id": "System.database.method.deleteasync(list<sobject>,datasource.asyncdeletecallback)",
      "nodeType": "method",
      "name": "deleteAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteAsync",
        "textToLower": "deleteasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 7,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.DeleteResult> deleteAsync(List<SObject> sobjects, DataSource.AsyncDeleteCallback callback)",
      "overrideSignature": "public static override List<Database.DeleteResult> deleteAsync(List<SObject> sobjects, DataSource.AsyncDeleteCallback callback)",
      "simplifiedSignature": "deleteAsync(List<SObject>,DataSource.AsyncDeleteCallback)",
      "datatype": {
        "id": "System.database.deleteasync.datatype.List<Database.DeleteResult>",
        "nodeType": "datatype",
        "name": "List<Database.DeleteResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.deleteasync",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.deleteasync.datatype.List<Database.DeleteResult>.value.Database.DeleteResult",
          "nodeType": "datatype",
          "name": "Database.DeleteResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.DeleteResult"
        }
      },
      "description": "Initiates requests to delete the external data that corresponds to the specified external object records. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source. Allows referencing a callback class whose processDelete method is called for each record after deletion.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.deleteasync(list<sobject>,datasource.asyncdeletecallback).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 68
              },
              "end": {
                "line": 0,
                "character": 76
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:68"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 68
              },
              "end": {
                "line": 0,
                "character": 76
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:68"
          },
          "parentId": "System.database.method.deleteasync(list<sobject>,datasource.asyncdeletecallback)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.deleteasync.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 54
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:54"
            },
            "parentId": "System.database.deleteasync",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.deleteasync.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 59
                  },
                  "end": {
                    "line": 0,
                    "character": 66
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:59"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "scope": null
        },
        "callback": {
          "id": "System.database.method.deleteasync(list<sobject>,datasource.asyncdeletecallback).varParam.callback",
          "nodeType": "variable",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 109
              },
              "end": {
                "line": 0,
                "character": 117
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:109"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 109
              },
              "end": {
                "line": 0,
                "character": 117
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:109"
          },
          "parentId": "System.database.method.deleteasync(list<sobject>,datasource.asyncdeletecallback)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.deleteasync.datatype.DataSource.AsyncDeleteCallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncDeleteCallback",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "DataSource",
              "textToLower": "datasource",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 78
                },
                "end": {
                  "line": 0,
                  "character": 88
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_DataSource_0:78"
            },
            "parentId": "System.database.deleteasync",
            "order": 0,
            "memberOrder": 0,
            "type": "DataSource.AsyncDeleteCallback"
          },
          "description": "List of external object records to delete. The callback that contains the state in the originating context and an action (the processDelete method) that is executed after the insert operation is completed. Use the action callback to update org data according to the operation’s results. The callback object must extend DataSource.AsyncDeleteCallback.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleteasync(sobject,datasource.asyncdeletecallback)": {
      "id": "System.database.method.deleteasync(sobject,datasource.asyncdeletecallback)",
      "nodeType": "method",
      "name": "deleteAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteAsync",
        "textToLower": "deleteasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 8,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DeleteResult deleteAsync(SObject sobject, DataSource.AsyncDeleteCallback callback)",
      "overrideSignature": "public static override Database.DeleteResult deleteAsync(SObject sobject, DataSource.AsyncDeleteCallback callback)",
      "simplifiedSignature": "deleteAsync(SObject,DataSource.AsyncDeleteCallback)",
      "datatype": {
        "id": "System.database.deleteasync.datatype.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.deleteasync",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DeleteResult"
      },
      "description": "Initiates a request to delete the external data that corresponds to the specified external object record. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source. Allows referencing a callback class whose processDelete method is called after deletion.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.deleteasync(sobject,datasource.asyncdeletecallback).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:56"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:56"
          },
          "parentId": "System.database.method.deleteasync(sobject,datasource.asyncdeletecallback)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.deleteasync.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 48
                },
                "end": {
                  "line": 0,
                  "character": 55
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:48"
            },
            "parentId": "System.database.deleteasync",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "scope": null
        },
        "callback": {
          "id": "System.database.method.deleteasync(sobject,datasource.asyncdeletecallback).varParam.callback",
          "nodeType": "variable",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 96
              },
              "end": {
                "line": 0,
                "character": 104
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:96"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 96
              },
              "end": {
                "line": 0,
                "character": 104
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:96"
          },
          "parentId": "System.database.method.deleteasync(sobject,datasource.asyncdeletecallback)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.deleteasync.datatype.DataSource.AsyncDeleteCallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncDeleteCallback",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "DataSource",
              "textToLower": "datasource",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 75
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_DataSource_0:65"
            },
            "parentId": "System.database.deleteasync",
            "order": 0,
            "memberOrder": 0,
            "type": "DataSource.AsyncDeleteCallback"
          },
          "description": "The external object record to delete. The callback that contains the state in the originating context and an action (the processDelete method) that is executed after the insert operation is completed. Use the action callback to update org data according to the operation’s results. The callback object must extend DataSource.AsyncDeleteCallback.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleteasync(list<sobject>)": {
      "id": "System.database.method.deleteasync(list<sobject>)",
      "nodeType": "method",
      "name": "deleteAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteAsync",
        "textToLower": "deleteasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 9,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.DeleteResult> deleteAsync(List<SObject> sobjects)",
      "overrideSignature": "public static override List<Database.DeleteResult> deleteAsync(List<SObject> sobjects)",
      "simplifiedSignature": "deleteAsync(List<SObject>)",
      "datatype": {
        "id": "System.database.deleteasync.datatype.List<Database.DeleteResult>",
        "nodeType": "datatype",
        "name": "List<Database.DeleteResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.deleteasync",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.deleteasync.datatype.List<Database.DeleteResult>.value.Database.DeleteResult",
          "nodeType": "datatype",
          "name": "Database.DeleteResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.DeleteResult"
        }
      },
      "description": "Initiates requests to delete the external data that corresponds to the specified external object records. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.deleteasync(list<sobject>).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 68
              },
              "end": {
                "line": 0,
                "character": 76
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:68"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 68
              },
              "end": {
                "line": 0,
                "character": 76
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:68"
          },
          "parentId": "System.database.method.deleteasync(list<sobject>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.deleteasync.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 54
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:54"
            },
            "parentId": "System.database.deleteasync",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.deleteasync.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 59
                  },
                  "end": {
                    "line": 0,
                    "character": 66
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:59"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "description": "List of external object records to delete.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleteasync(sobject)": {
      "id": "System.database.method.deleteasync(sobject)",
      "nodeType": "method",
      "name": "deleteAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteAsync",
        "textToLower": "deleteasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 10,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DeleteResult deleteAsync(SObject sobject)",
      "overrideSignature": "public static override Database.DeleteResult deleteAsync(SObject sobject)",
      "simplifiedSignature": "deleteAsync(SObject)",
      "datatype": {
        "id": "System.database.deleteasync.datatype.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.deleteasync",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DeleteResult"
      },
      "description": "Initiates a request to delete the external data that corresponds to the specified external object record. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.deleteasync(sobject).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:56"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:56"
          },
          "parentId": "System.database.method.deleteasync(sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.deleteasync.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 48
                },
                "end": {
                  "line": 0,
                  "character": 55
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:48"
            },
            "parentId": "System.database.deleteasync",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "description": "The external object record to delete.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleteimmediate(list<sobject>)": {
      "id": "System.database.method.deleteimmediate(list<sobject>)",
      "nodeType": "method",
      "name": "deleteImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteImmediate",
        "textToLower": "deleteimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteImmediate_-1:0"
      },
      "parentId": "System.database",
      "order": 11,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.DeleteResult> deleteImmediate(List<SObject> sobjects)",
      "overrideSignature": "public static override List<Database.DeleteResult> deleteImmediate(List<SObject> sobjects)",
      "simplifiedSignature": "deleteImmediate(List<SObject>)",
      "datatype": {
        "id": "System.database.deleteimmediate.datatype.List<Database.DeleteResult>",
        "nodeType": "datatype",
        "name": "List<Database.DeleteResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.deleteimmediate",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.deleteimmediate.datatype.List<Database.DeleteResult>.value.Database.DeleteResult",
          "nodeType": "datatype",
          "name": "Database.DeleteResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.DeleteResult"
        }
      },
      "description": "Initiates requests to delete the external data that corresponds to the specified external object records. The requests are executed synchronously and are sent to the external systems that are defined by the external objects' associated external data sources. If the Apex transaction contains pending changes, the synchronous operations can't be completed and throw exceptions.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.deleteimmediate(list<sobject>).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 80
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:72"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 72
              },
              "end": {
                "line": 0,
                "character": 80
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:72"
          },
          "parentId": "System.database.method.deleteimmediate(list<sobject>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.deleteimmediate.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 58
                },
                "end": {
                  "line": 0,
                  "character": 62
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:58"
            },
            "parentId": "System.database.deleteimmediate",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.deleteimmediate.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 63
                  },
                  "end": {
                    "line": 0,
                    "character": 70
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:63"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "description": "List of external object records to delete.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "deleteimmediate(sobject)": {
      "id": "System.database.method.deleteimmediate(sobject)",
      "nodeType": "method",
      "name": "deleteImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteImmediate",
        "textToLower": "deleteimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteImmediate_-1:0"
      },
      "parentId": "System.database",
      "order": 12,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DeleteResult deleteImmediate(SObject sobject)",
      "overrideSignature": "public static override Database.DeleteResult deleteImmediate(SObject sobject)",
      "simplifiedSignature": "deleteImmediate(SObject)",
      "datatype": {
        "id": "System.database.deleteimmediate.datatype.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.deleteimmediate",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DeleteResult"
      },
      "description": "Initiates a request to delete the external data that corresponds to the specified external object record. The request is executed synchronously and is sent to the external system that's defined by the external object's associated external data source. If the Apex transaction contains pending changes, the synchronous operation can't be completed and throws an exception.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.deleteimmediate(sobject).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 67
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:60"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 67
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:60"
          },
          "parentId": "System.database.method.deleteimmediate(sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.deleteimmediate.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 59
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:52"
            },
            "parentId": "System.database.deleteimmediate",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "description": "The external object record to delete.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "emptyrecyclebin(id[])": {
      "id": "System.database.method.emptyrecyclebin(id[])",
      "nodeType": "method",
      "name": "emptyRecycleBin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "emptyRecycleBin",
        "textToLower": "emptyrecyclebin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_emptyRecycleBin_-1:0"
      },
      "parentId": "System.database",
      "order": 13,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.EmptyRecycleBinResult[] emptyRecycleBin(ID[] recordIds)",
      "overrideSignature": "public static override Database.EmptyRecycleBinResult[] emptyRecycleBin(ID[] recordIds)",
      "simplifiedSignature": "emptyRecycleBin(ID[])",
      "datatype": {
        "id": "System.database.emptyrecyclebin.datatype.Database.EmptyRecycleBinResult[]",
        "nodeType": "datatype",
        "name": "Database.EmptyRecycleBinResult[]",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.emptyrecyclebin",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.EmptyRecycleBinResult[]"
      },
      "description": "Permanently deletes the specified records from the Recycle Bin.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordids": {
          "id": "System.database.method.emptyrecyclebin(id[]).varParam.recordids",
          "nodeType": "variable",
          "name": "recordIds",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordIds",
            "textToLower": "recordids",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordIds_0:69"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordIds",
            "textToLower": "recordids",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordIds_0:69"
          },
          "parentId": "System.database.method.emptyrecyclebin(id[])",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.emptyrecyclebin.datatype.ID[]",
            "nodeType": "datatype",
            "name": "ID[]",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 65
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:63"
            },
            "parentId": "System.database.emptyrecyclebin",
            "order": 0,
            "memberOrder": 0,
            "type": "ID[]"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "emptyrecyclebin(sobject)": {
      "id": "System.database.method.emptyrecyclebin(sobject)",
      "nodeType": "method",
      "name": "emptyRecycleBin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "emptyRecycleBin",
        "textToLower": "emptyrecyclebin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_emptyRecycleBin_-1:0"
      },
      "parentId": "System.database",
      "order": 14,
      "memberOrder": 15,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.EmptyRecycleBinResult emptyRecycleBin(sObject obj)",
      "overrideSignature": "public static override Database.EmptyRecycleBinResult emptyRecycleBin(sObject obj)",
      "simplifiedSignature": "emptyRecycleBin(sObject)",
      "datatype": {
        "id": "System.database.emptyrecyclebin.datatype.Database.EmptyRecycleBinResult",
        "nodeType": "datatype",
        "name": "Database.EmptyRecycleBinResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.emptyrecyclebin",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.EmptyRecycleBinResult"
      },
      "description": "Permanently deletes the specified sObject from the Recycle Bin.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "obj": {
          "id": "System.database.method.emptyrecyclebin(sobject).varParam.obj",
          "nodeType": "variable",
          "name": "obj",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "obj",
            "textToLower": "obj",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_obj_0:69"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "obj",
            "textToLower": "obj",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 69
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_obj_0:69"
          },
          "parentId": "System.database.method.emptyrecyclebin(sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.emptyrecyclebin.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 61
                },
                "end": {
                  "line": 0,
                  "character": 68
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:61"
            },
            "parentId": "System.database.emptyrecyclebin",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "emptyrecyclebin(sobject[])": {
      "id": "System.database.method.emptyrecyclebin(sobject[])",
      "nodeType": "method",
      "name": "emptyRecycleBin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "emptyRecycleBin",
        "textToLower": "emptyrecyclebin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_emptyRecycleBin_-1:0"
      },
      "parentId": "System.database",
      "order": 15,
      "memberOrder": 16,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.EmptyRecycleBinResult[] emptyRecycleBin(sObject[] listOfSObjects)",
      "overrideSignature": "public static override Database.EmptyRecycleBinResult[] emptyRecycleBin(sObject[] listOfSObjects)",
      "simplifiedSignature": "emptyRecycleBin(sObject[])",
      "datatype": {
        "id": "System.database.emptyrecyclebin.datatype.Database.EmptyRecycleBinResult[]",
        "nodeType": "datatype",
        "name": "Database.EmptyRecycleBinResult[]",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.emptyrecyclebin",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.EmptyRecycleBinResult[]"
      },
      "description": "Permanently deletes the specified sObjects from the Recycle Bin.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "listofsobjects": {
          "id": "System.database.method.emptyrecyclebin(sobject[]).varParam.listofsobjects",
          "nodeType": "variable",
          "name": "listOfSObjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "listOfSObjects",
            "textToLower": "listofsobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 87
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_listOfSObjects_0:73"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "listOfSObjects",
            "textToLower": "listofsobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 87
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_listOfSObjects_0:73"
          },
          "parentId": "System.database.method.emptyrecyclebin(sobject[])",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.emptyrecyclebin.datatype.sObject[]",
            "nodeType": "datatype",
            "name": "sObject[]",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 70
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:63"
            },
            "parentId": "System.database.emptyrecyclebin",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject[]"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "executebatch(object)": {
      "id": "System.database.method.executebatch(object)",
      "nodeType": "method",
      "name": "executeBatch",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "executeBatch",
        "textToLower": "executebatch",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_executeBatch_-1:0"
      },
      "parentId": "System.database",
      "order": 16,
      "memberOrder": 17,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ID executeBatch(Object batchClassObject)",
      "overrideSignature": "public static override ID executeBatch(Object batchClassObject)",
      "simplifiedSignature": "executeBatch(Object)",
      "datatype": {
        "id": "System.database.executebatch.datatype.ID",
        "nodeType": "datatype",
        "name": "ID",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 16
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:14"
        },
        "parentId": "System.database.executebatch",
        "order": 0,
        "memberOrder": 0,
        "type": "ID"
      },
      "description": "Submits a batch Apex job for execution corresponding to the specified class.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "batchclassobject": {
          "id": "System.database.method.executebatch(object).varParam.batchclassobject",
          "nodeType": "variable",
          "name": "batchClassObject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "batchClassObject",
            "textToLower": "batchclassobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 53
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_batchClassObject_0:37"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "batchClassObject",
            "textToLower": "batchclassobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 53
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_batchClassObject_0:37"
          },
          "parentId": "System.database.method.executebatch(object)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.executebatch.datatype.Object",
            "nodeType": "datatype",
            "name": "Object",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Object",
              "textToLower": "object",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 30
                },
                "end": {
                  "line": 0,
                  "character": 36
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Object_0:30"
            },
            "parentId": "System.database.executebatch",
            "order": 0,
            "memberOrder": 0,
            "type": "Object"
          },
          "description": "An instance of a class that implements the Database.Batchable interface.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "executebatch(object,integer)": {
      "id": "System.database.method.executebatch(object,integer)",
      "nodeType": "method",
      "name": "executeBatch",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "executeBatch",
        "textToLower": "executebatch",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_executeBatch_-1:0"
      },
      "parentId": "System.database",
      "order": 17,
      "memberOrder": 18,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ID executeBatch(Object batchClassObject, Integer scope)",
      "overrideSignature": "public static override ID executeBatch(Object batchClassObject, Integer scope)",
      "simplifiedSignature": "executeBatch(Object,Integer)",
      "datatype": {
        "id": "System.database.executebatch.datatype.ID",
        "nodeType": "datatype",
        "name": "ID",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 16
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:14"
        },
        "parentId": "System.database.executebatch",
        "order": 0,
        "memberOrder": 0,
        "type": "ID"
      },
      "description": "Submits a batch Apex job for execution using the specified class and scope.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "batchclassobject": {
          "id": "System.database.method.executebatch(object,integer).varParam.batchclassobject",
          "nodeType": "variable",
          "name": "batchClassObject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "batchClassObject",
            "textToLower": "batchclassobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 53
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_batchClassObject_0:37"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "batchClassObject",
            "textToLower": "batchclassobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 53
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_batchClassObject_0:37"
          },
          "parentId": "System.database.method.executebatch(object,integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.executebatch.datatype.Object",
            "nodeType": "datatype",
            "name": "Object",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Object",
              "textToLower": "object",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 30
                },
                "end": {
                  "line": 0,
                  "character": 36
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Object_0:30"
            },
            "parentId": "System.database.executebatch",
            "order": 0,
            "memberOrder": 0,
            "type": "Object"
          },
          "scope": null
        },
        "scope": {
          "id": "System.database.method.executebatch(object,integer).varParam.scope",
          "nodeType": "variable",
          "name": "scope",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scope",
            "textToLower": "scope",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 63
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scope_0:63"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "scope",
            "textToLower": "scope",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 63
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_scope_0:63"
          },
          "parentId": "System.database.method.executebatch(object,integer)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.executebatch.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 55
                },
                "end": {
                  "line": 0,
                  "character": 62
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:55"
            },
            "parentId": "System.database.executebatch",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "An instance of a class that implements the Database.Batchable interface. Number of records to be passed into the execute method for batch processing.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getasyncdeleteresult(database.deleteresult)": {
      "id": "System.database.method.getasyncdeleteresult(database.deleteresult)",
      "nodeType": "method",
      "name": "getAsyncDeleteResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncDeleteResult",
        "textToLower": "getasyncdeleteresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncDeleteResult_-1:0"
      },
      "parentId": "System.database",
      "order": 18,
      "memberOrder": 19,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DeleteResult getAsyncDeleteResult(Database.DeleteResult deleteResult)",
      "overrideSignature": "public static override Database.DeleteResult getAsyncDeleteResult(Database.DeleteResult deleteResult)",
      "simplifiedSignature": "getAsyncDeleteResult(Database.DeleteResult)",
      "datatype": {
        "id": "System.database.getasyncdeleteresult.datatype.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getasyncdeleteresult",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DeleteResult"
      },
      "description": "Retrieves the status of an asynchronous delete operation that’s identified by a Database.DeleteResult object.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "deleteresult": {
          "id": "System.database.method.getasyncdeleteresult(database.deleteresult).varParam.deleteresult",
          "nodeType": "variable",
          "name": "deleteResult",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "deleteResult",
            "textToLower": "deleteresult",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 91
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_deleteResult_0:79"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "deleteResult",
            "textToLower": "deleteresult",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 79
              },
              "end": {
                "line": 0,
                "character": 91
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_deleteResult_0:79"
          },
          "parentId": "System.database.method.getasyncdeleteresult(database.deleteresult)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getasyncdeleteresult.datatype.Database.DeleteResult",
            "nodeType": "datatype",
            "name": "Database.DeleteResult",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Database",
              "textToLower": "database",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 57
                },
                "end": {
                  "line": 0,
                  "character": 65
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Database_0:57"
            },
            "parentId": "System.database.getasyncdeleteresult",
            "order": 0,
            "memberOrder": 0,
            "type": "Database.DeleteResult"
          },
          "description": "The result record for the delete operation being retrieved.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getasyncdeleteresult(string)": {
      "id": "System.database.method.getasyncdeleteresult(string)",
      "nodeType": "method",
      "name": "getAsyncDeleteResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncDeleteResult",
        "textToLower": "getasyncdeleteresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncDeleteResult_-1:0"
      },
      "parentId": "System.database",
      "order": 19,
      "memberOrder": 20,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DeleteResult getAsyncDeleteResult(String asyncLocator)",
      "overrideSignature": "public static override Database.DeleteResult getAsyncDeleteResult(String asyncLocator)",
      "simplifiedSignature": "getAsyncDeleteResult(String)",
      "datatype": {
        "id": "System.database.getasyncdeleteresult.datatype.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getasyncdeleteresult",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DeleteResult"
      },
      "description": "Retrieves the result of an asynchronous delete operation based on the result’s unique identifier.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "asynclocator": {
          "id": "System.database.method.getasyncdeleteresult(string).varParam.asynclocator",
          "nodeType": "variable",
          "name": "asyncLocator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "asyncLocator",
            "textToLower": "asynclocator",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 76
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_asyncLocator_0:64"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "asyncLocator",
            "textToLower": "asynclocator",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 76
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_asyncLocator_0:64"
          },
          "parentId": "System.database.method.getasyncdeleteresult(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getasyncdeleteresult.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 57
                },
                "end": {
                  "line": 0,
                  "character": 63
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:57"
            },
            "parentId": "System.database.getasyncdeleteresult",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The unique identifier associated with the result of an asynchronous operation.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getasynclocator(object)": {
      "id": "System.database.method.getasynclocator(object)",
      "nodeType": "method",
      "name": "getAsyncLocator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncLocator",
        "textToLower": "getasynclocator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncLocator_-1:0"
      },
      "parentId": "System.database",
      "order": 20,
      "memberOrder": 21,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static String getAsyncLocator(Object result)",
      "overrideSignature": "public static override String getAsyncLocator(Object result)",
      "simplifiedSignature": "getAsyncLocator(Object)",
      "datatype": {
        "id": "System.database.getasynclocator.datatype.String",
        "nodeType": "datatype",
        "name": "String",
        "startToken": {
          "type": "datatype.primitive",
          "text": "String",
          "textToLower": "string",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_String_0:14"
        },
        "parentId": "System.database.getasynclocator",
        "order": 0,
        "memberOrder": 0,
        "type": "String"
      },
      "description": "Returns the asyncLocator associated with the result of a specified asynchronous insert, update, or delete operation.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "result": {
          "id": "System.database.method.getasynclocator(object).varParam.result",
          "nodeType": "variable",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 44
              },
              "end": {
                "line": 0,
                "character": 50
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:44"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 44
              },
              "end": {
                "line": 0,
                "character": 50
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_result_0:44"
          },
          "parentId": "System.database.method.getasynclocator(object)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getasynclocator.datatype.Object",
            "nodeType": "datatype",
            "name": "Object",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Object",
              "textToLower": "object",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 37
                },
                "end": {
                  "line": 0,
                  "character": 43
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Object_0:37"
            },
            "parentId": "System.database.getasynclocator",
            "order": 0,
            "memberOrder": 0,
            "type": "Object"
          },
          "description": "The saved result of an asynchronous insert, update, or delete operation. The result object can be of type Database.SaveResult or Database.DeleteResult.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getasyncsaveresult(database.saveresult)": {
      "id": "System.database.method.getasyncsaveresult(database.saveresult)",
      "nodeType": "method",
      "name": "getAsyncSaveResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncSaveResult",
        "textToLower": "getasyncsaveresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncSaveResult_-1:0"
      },
      "parentId": "System.database",
      "order": 21,
      "memberOrder": 22,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult getAsyncSaveResult(Database.SaveResult saveResult)",
      "overrideSignature": "public static override Database.SaveResult getAsyncSaveResult(Database.SaveResult saveResult)",
      "simplifiedSignature": "getAsyncSaveResult(Database.SaveResult)",
      "datatype": {
        "id": "System.database.getasyncsaveresult.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getasyncsaveresult",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Returns the status of an asynchronous insert or update operation that’s identified by a Database.SaveResult object.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "saveresult": {
          "id": "System.database.method.getasyncsaveresult(database.saveresult).varParam.saveresult",
          "nodeType": "variable",
          "name": "saveResult",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "saveResult",
            "textToLower": "saveresult",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_saveResult_0:73"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "saveResult",
            "textToLower": "saveresult",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 83
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_saveResult_0:73"
          },
          "parentId": "System.database.method.getasyncsaveresult(database.saveresult)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getasyncsaveresult.datatype.Database.SaveResult",
            "nodeType": "datatype",
            "name": "Database.SaveResult",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Database",
              "textToLower": "database",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 53
                },
                "end": {
                  "line": 0,
                  "character": 61
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Database_0:53"
            },
            "parentId": "System.database.getasyncsaveresult",
            "order": 0,
            "memberOrder": 0,
            "type": "Database.SaveResult"
          },
          "description": "The result record for the insert or update operation being retrieved.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getasyncsaveresult(string)": {
      "id": "System.database.method.getasyncsaveresult(string)",
      "nodeType": "method",
      "name": "getAsyncSaveResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncSaveResult",
        "textToLower": "getasyncsaveresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncSaveResult_-1:0"
      },
      "parentId": "System.database",
      "order": 22,
      "memberOrder": 23,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult getAsyncSaveResult(String asyncLocator)",
      "overrideSignature": "public static override Database.SaveResult getAsyncSaveResult(String asyncLocator)",
      "simplifiedSignature": "getAsyncSaveResult(String)",
      "datatype": {
        "id": "System.database.getasyncsaveresult.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getasyncsaveresult",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Returns the status of an asynchronous insert or update operation based on the unique identifier associated with each modification.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "asynclocator": {
          "id": "System.database.method.getasyncsaveresult(string).varParam.asynclocator",
          "nodeType": "variable",
          "name": "asyncLocator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "asyncLocator",
            "textToLower": "asynclocator",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_asyncLocator_0:60"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "asyncLocator",
            "textToLower": "asynclocator",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 60
              },
              "end": {
                "line": 0,
                "character": 72
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_asyncLocator_0:60"
          },
          "parentId": "System.database.method.getasyncsaveresult(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getasyncsaveresult.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 53
                },
                "end": {
                  "line": 0,
                  "character": 59
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:53"
            },
            "parentId": "System.database.getasyncsaveresult",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The unique identifier associated with the result of an asynchronous operation.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getdeleted(string,datetime,datetime)": {
      "id": "System.database.method.getdeleted(string,datetime,datetime)",
      "nodeType": "method",
      "name": "getDeleted",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDeleted",
        "textToLower": "getdeleted",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDeleted_-1:0"
      },
      "parentId": "System.database",
      "order": 23,
      "memberOrder": 24,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.GetDeletedResult getDeleted(String sObjectType, Datetime startDate, Datetime endDate)",
      "overrideSignature": "public static override Database.GetDeletedResult getDeleted(String sObjectType, Datetime startDate, Datetime endDate)",
      "simplifiedSignature": "getDeleted(String,Datetime,Datetime)",
      "datatype": {
        "id": "System.database.getdeleted.datatype.Database.GetDeletedResult",
        "nodeType": "datatype",
        "name": "Database.GetDeletedResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getdeleted",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.GetDeletedResult"
      },
      "description": "Returns the list of individual records that have been deleted for an sObject type within the specified start and end dates and times and that are still in the Recycle Bin.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjecttype": {
          "id": "System.database.method.getdeleted(string,datetime,datetime).varParam.sobjecttype",
          "nodeType": "variable",
          "name": "sObjectType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sObjectType",
            "textToLower": "sobjecttype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sObjectType_0:58"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sObjectType",
            "textToLower": "sobjecttype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sObjectType_0:58"
          },
          "parentId": "System.database.method.getdeleted(string,datetime,datetime)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getdeleted.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 51
                },
                "end": {
                  "line": 0,
                  "character": 57
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:51"
            },
            "parentId": "System.database.getdeleted",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "startdate": {
          "id": "System.database.method.getdeleted(string,datetime,datetime).varParam.startdate",
          "nodeType": "variable",
          "name": "startDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startDate",
            "textToLower": "startdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 80
              },
              "end": {
                "line": 0,
                "character": 89
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startDate_0:80"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startDate",
            "textToLower": "startdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 80
              },
              "end": {
                "line": 0,
                "character": 89
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startDate_0:80"
          },
          "parentId": "System.database.method.getdeleted(string,datetime,datetime)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.getdeleted.datatype.Datetime",
            "nodeType": "datatype",
            "name": "Datetime",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Datetime",
              "textToLower": "datetime",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 71
                },
                "end": {
                  "line": 0,
                  "character": 79
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Datetime_0:71"
            },
            "parentId": "System.database.getdeleted",
            "order": 0,
            "memberOrder": 0,
            "type": "Datetime"
          },
          "scope": null
        },
        "enddate": {
          "id": "System.database.method.getdeleted(string,datetime,datetime).varParam.enddate",
          "nodeType": "variable",
          "name": "endDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endDate",
            "textToLower": "enddate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 100
              },
              "end": {
                "line": 0,
                "character": 107
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_endDate_0:100"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "endDate",
            "textToLower": "enddate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 100
              },
              "end": {
                "line": 0,
                "character": 107
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_endDate_0:100"
          },
          "parentId": "System.database.method.getdeleted(string,datetime,datetime)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "System.database.getdeleted.datatype.Datetime",
            "nodeType": "datatype",
            "name": "Datetime",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Datetime",
              "textToLower": "datetime",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 91
                },
                "end": {
                  "line": 0,
                  "character": 99
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Datetime_0:91"
            },
            "parentId": "System.database.getdeleted",
            "order": 0,
            "memberOrder": 0,
            "type": "Datetime"
          },
          "description": "The sObjectType argument is the sObject type name for which to get the deleted records, such as account or merchandise__c. Start date and time of the deleted records time window. End date and time of the deleted records time window.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getquerylocator(sobject[])": {
      "id": "System.database.method.getquerylocator(sobject[])",
      "nodeType": "method",
      "name": "getQueryLocator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getQueryLocator",
        "textToLower": "getquerylocator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getQueryLocator_-1:0"
      },
      "parentId": "System.database",
      "order": 24,
      "memberOrder": 25,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.QueryLocator getQueryLocator(sObject[] listOfQueries)",
      "overrideSignature": "public static override Database.QueryLocator getQueryLocator(sObject[] listOfQueries)",
      "simplifiedSignature": "getQueryLocator(sObject[])",
      "datatype": {
        "id": "System.database.getquerylocator.datatype.Database.QueryLocator",
        "nodeType": "datatype",
        "name": "Database.QueryLocator",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getquerylocator",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.QueryLocator"
      },
      "description": "Creates a QueryLocator object used in batch Apex or Visualforce.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "listofqueries": {
          "id": "System.database.method.getquerylocator(sobject[]).varParam.listofqueries",
          "nodeType": "variable",
          "name": "listOfQueries",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "listOfQueries",
            "textToLower": "listofqueries",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_listOfQueries_0:64"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "listOfQueries",
            "textToLower": "listofqueries",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 64
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_listOfQueries_0:64"
          },
          "parentId": "System.database.method.getquerylocator(sobject[])",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getquerylocator.datatype.sObject[]",
            "nodeType": "datatype",
            "name": "sObject[]",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 53
                },
                "end": {
                  "line": 0,
                  "character": 60
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:53"
            },
            "parentId": "System.database.getquerylocator",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject[]"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getquerylocator(string)": {
      "id": "System.database.method.getquerylocator(string)",
      "nodeType": "method",
      "name": "getQueryLocator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getQueryLocator",
        "textToLower": "getquerylocator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getQueryLocator_-1:0"
      },
      "parentId": "System.database",
      "order": 25,
      "memberOrder": 26,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.QueryLocator getQueryLocator(String query)",
      "overrideSignature": "public static override Database.QueryLocator getQueryLocator(String query)",
      "simplifiedSignature": "getQueryLocator(String)",
      "datatype": {
        "id": "System.database.getquerylocator.datatype.Database.QueryLocator",
        "nodeType": "datatype",
        "name": "Database.QueryLocator",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getquerylocator",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.QueryLocator"
      },
      "description": "Creates a QueryLocator object used in batch Apex or Visualforce.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "query": {
          "id": "System.database.method.getquerylocator(string).varParam.query",
          "nodeType": "variable",
          "name": "query",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "query",
            "textToLower": "query",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 64
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_query_0:59"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "query",
            "textToLower": "query",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 59
              },
              "end": {
                "line": 0,
                "character": 64
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_query_0:59"
          },
          "parentId": "System.database.method.getquerylocator(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getquerylocator.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 58
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:52"
            },
            "parentId": "System.database.getquerylocator",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getupdated(string,datetime,datetime)": {
      "id": "System.database.method.getupdated(string,datetime,datetime)",
      "nodeType": "method",
      "name": "getUpdated",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUpdated",
        "textToLower": "getupdated",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUpdated_-1:0"
      },
      "parentId": "System.database",
      "order": 26,
      "memberOrder": 27,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.GetUpdatedResult getUpdated(String sobjectType, Datetime startDate, Datetime endDate)",
      "overrideSignature": "public static override Database.GetUpdatedResult getUpdated(String sobjectType, Datetime startDate, Datetime endDate)",
      "simplifiedSignature": "getUpdated(String,Datetime,Datetime)",
      "datatype": {
        "id": "System.database.getupdated.datatype.Database.GetUpdatedResult",
        "nodeType": "datatype",
        "name": "Database.GetUpdatedResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.getupdated",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.GetUpdatedResult"
      },
      "description": "Returns the list of individual records that have been updated for an sObject type within the specified start and end dates and times.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjecttype": {
          "id": "System.database.method.getupdated(string,datetime,datetime).varParam.sobjecttype",
          "nodeType": "variable",
          "name": "sobjectType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjectType",
            "textToLower": "sobjecttype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjectType_0:58"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjectType",
            "textToLower": "sobjecttype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjectType_0:58"
          },
          "parentId": "System.database.method.getupdated(string,datetime,datetime)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.getupdated.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 51
                },
                "end": {
                  "line": 0,
                  "character": 57
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:51"
            },
            "parentId": "System.database.getupdated",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "startdate": {
          "id": "System.database.method.getupdated(string,datetime,datetime).varParam.startdate",
          "nodeType": "variable",
          "name": "startDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startDate",
            "textToLower": "startdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 80
              },
              "end": {
                "line": 0,
                "character": 89
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startDate_0:80"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "startDate",
            "textToLower": "startdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 80
              },
              "end": {
                "line": 0,
                "character": 89
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_startDate_0:80"
          },
          "parentId": "System.database.method.getupdated(string,datetime,datetime)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.getupdated.datatype.Datetime",
            "nodeType": "datatype",
            "name": "Datetime",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Datetime",
              "textToLower": "datetime",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 71
                },
                "end": {
                  "line": 0,
                  "character": 79
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Datetime_0:71"
            },
            "parentId": "System.database.getupdated",
            "order": 0,
            "memberOrder": 0,
            "type": "Datetime"
          },
          "scope": null
        },
        "enddate": {
          "id": "System.database.method.getupdated(string,datetime,datetime).varParam.enddate",
          "nodeType": "variable",
          "name": "endDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endDate",
            "textToLower": "enddate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 100
              },
              "end": {
                "line": 0,
                "character": 107
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_endDate_0:100"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "endDate",
            "textToLower": "enddate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 100
              },
              "end": {
                "line": 0,
                "character": 107
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_endDate_0:100"
          },
          "parentId": "System.database.method.getupdated(string,datetime,datetime)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "System.database.getupdated.datatype.Datetime",
            "nodeType": "datatype",
            "name": "Datetime",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Datetime",
              "textToLower": "datetime",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 91
                },
                "end": {
                  "line": 0,
                  "character": 99
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Datetime_0:91"
            },
            "parentId": "System.database.getupdated",
            "order": 0,
            "memberOrder": 0,
            "type": "Datetime"
          },
          "description": "The sObjectType argument is the sObject type name for which to get the updated records, such as account or merchandise__c.  The startDate argument is the start date and time of the updated records time window. The endDate argument is the end date and time of the updated records time window.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insert(sobject,boolean)": {
      "id": "System.database.method.insert(sobject,boolean)",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "parentId": "System.database",
      "order": 27,
      "memberOrder": 28,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult insert(sObject recordToInsert, Boolean allOrNone)",
      "overrideSignature": "public static override Database.SaveResult insert(sObject recordToInsert, Boolean allOrNone)",
      "simplifiedSignature": "insert(sObject,Boolean)",
      "datatype": {
        "id": "System.database.insert.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.insert",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Adds an sObject, such as an individual account or contact, to your organization's data.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordtoinsert": {
          "id": "System.database.method.insert(sobject,boolean).varParam.recordtoinsert",
          "nodeType": "variable",
          "name": "recordToInsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToInsert",
            "textToLower": "recordtoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToInsert_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToInsert",
            "textToLower": "recordtoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToInsert_0:49"
          },
          "parentId": "System.database.method.insert(sobject,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insert.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.insert",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.insert(sobject,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:73"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:73"
          },
          "parentId": "System.database.method.insert(sobject,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.insert.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 72
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:65"
            },
            "parentId": "System.database.insert",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insert()": {
      "id": "System.database.method.insert()",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "parentId": "System.database",
      "order": 28,
      "memberOrder": 29,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Boolean insert()",
      "overrideSignature": "public static override Boolean insert()",
      "simplifiedSignature": "insert()",
      "datatype": {
        "id": "System.database.insert.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 70
            },
            "end": {
              "line": 0,
              "character": 77
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:70"
        },
        "parentId": "System.database.insert",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Adds one or more sObjects, such as individual accounts or contacts, to your organization’s data.",
      "parentName": "Database",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "insert(sobject,database.dmloptions)": {
      "id": "System.database.method.insert(sobject,database.dmloptions)",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "parentId": "System.database",
      "order": 29,
      "memberOrder": 30,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult insert(sObject recordToInsert, Database.DMLOptions dmlOptions)",
      "overrideSignature": "public static override Database.SaveResult insert(sObject recordToInsert, Database.DMLOptions dmlOptions)",
      "simplifiedSignature": "insert(sObject,Database.DMLOptions)",
      "datatype": {
        "id": "System.database.insert.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.insert",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Adds an sObject, such as an individual account or contact, to your organization's data.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordtoinsert": {
          "id": "System.database.method.insert(sobject,database.dmloptions).varParam.recordtoinsert",
          "nodeType": "variable",
          "name": "recordToInsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToInsert",
            "textToLower": "recordtoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToInsert_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToInsert",
            "textToLower": "recordtoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToInsert_0:49"
          },
          "parentId": "System.database.method.insert(sobject,database.dmloptions)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insert.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.insert",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "dmloptions": {
          "id": "System.database.method.insert(sobject,database.dmloptions).varParam.dmloptions",
          "nodeType": "variable",
          "name": "dmlOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 85
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_dmlOptions_0:85"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 85
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_dmlOptions_0:85"
          },
          "parentId": "System.database.method.insert(sobject,database.dmloptions)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.insert.datatype.Database.DMLOptions",
            "nodeType": "datatype",
            "name": "Database.DMLOptions",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Database",
              "textToLower": "database",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Database_0:65"
            },
            "parentId": "System.database.insert",
            "order": 0,
            "memberOrder": 0,
            "type": "Database.DMLOptions"
          },
          "description": "The optional dmlOptions parameter specifies additional data for the transaction, such as assignment rule information or rollback behavior when errors occur during record insertions.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insert(sobject[],database.dmloptions)": {
      "id": "System.database.method.insert(sobject[],database.dmloptions)",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "parentId": "System.database",
      "order": 30,
      "memberOrder": 31,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult insert(sObject[] recordsToInsert, Database.DMLOptions dmlOptions)",
      "overrideSignature": "public static override Database.SaveResult insert(sObject[] recordsToInsert, Database.DMLOptions dmlOptions)",
      "simplifiedSignature": "insert(sObject[],Database.DMLOptions)",
      "datatype": {
        "id": "System.database.insert.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.insert",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Adds one or more sObjects, such as individual accounts or contacts, to your organization's data.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordstoinsert": {
          "id": "System.database.method.insert(sobject[],database.dmloptions).varParam.recordstoinsert",
          "nodeType": "variable",
          "name": "recordsToInsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToInsert",
            "textToLower": "recordstoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 66
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordsToInsert_0:51"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToInsert",
            "textToLower": "recordstoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 66
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordsToInsert_0:51"
          },
          "parentId": "System.database.method.insert(sobject[],database.dmloptions)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insert.datatype.sObject[]",
            "nodeType": "datatype",
            "name": "sObject[]",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.insert",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject[]"
          },
          "scope": null
        },
        "dmloptions": {
          "id": "System.database.method.insert(sobject[],database.dmloptions).varParam.dmloptions",
          "nodeType": "variable",
          "name": "dmlOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 98
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_dmlOptions_0:88"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 88
              },
              "end": {
                "line": 0,
                "character": 98
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_dmlOptions_0:88"
          },
          "parentId": "System.database.method.insert(sobject[],database.dmloptions)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.insert.datatype.Database.DMLOptions",
            "nodeType": "datatype",
            "name": "Database.DMLOptions",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Database",
              "textToLower": "database",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 68
                },
                "end": {
                  "line": 0,
                  "character": 76
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Database_0:68"
            },
            "parentId": "System.database.insert",
            "order": 0,
            "memberOrder": 0,
            "type": "Database.DMLOptions"
          },
          "description": "The optional dmlOptions parameter specifies additional data for the transaction, such as assignment rule information or rollback behavior when errors occur during record insertions.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insertasync(list<sobject>,datasource.asyncsavecallback)": {
      "id": "System.database.method.insertasync(list<sobject>,datasource.asyncsavecallback)",
      "nodeType": "method",
      "name": "insertAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertAsync",
        "textToLower": "insertasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 31,
      "memberOrder": 32,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.SaveResult> insertAsync(List<SObject> sobjects, DataSource.AsyncSaveCallback callback)",
      "overrideSignature": "public static override List<Database.SaveResult> insertAsync(List<SObject> sobjects, DataSource.AsyncSaveCallback callback)",
      "simplifiedSignature": "insertAsync(List<SObject>,DataSource.AsyncSaveCallback)",
      "datatype": {
        "id": "System.database.insertasync.datatype.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.insertasync",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.insertasync.datatype.List<Database.SaveResult>.value.Database.SaveResult",
          "nodeType": "datatype",
          "name": "Database.SaveResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.SaveResult"
        }
      },
      "description": "Initiates requests to add external object data to the relevant external systems. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources. Allows referencing a callback class whose processSave method is called for each record after the remote operations are completed.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.insertasync(list<sobject>,datasource.asyncsavecallback).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "parentId": "System.database.method.insertasync(list<sobject>,datasource.asyncsavecallback)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insertasync.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 56
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:52"
            },
            "parentId": "System.database.insertasync",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.insertasync.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 57
                  },
                  "end": {
                    "line": 0,
                    "character": 64
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:57"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "scope": null
        },
        "callback": {
          "id": "System.database.method.insertasync(list<sobject>,datasource.asyncsavecallback).varParam.callback",
          "nodeType": "variable",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 113
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:105"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 113
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:105"
          },
          "parentId": "System.database.method.insertasync(list<sobject>,datasource.asyncsavecallback)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.insertasync.datatype.DataSource.AsyncSaveCallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncSaveCallback",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "DataSource",
              "textToLower": "datasource",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 86
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_DataSource_0:76"
            },
            "parentId": "System.database.insertasync",
            "order": 0,
            "memberOrder": 0,
            "type": "DataSource.AsyncSaveCallback"
          },
          "description": "List of external object records to insert. The callback object that contains the state in the originating context and an action (the processSave method) that executes after the insert operation is completed. Use the action callback to update org data according to the operation’s results. The callback object must extend DataSource.AsyncSaveCallback.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insertasync(sobject,datasource.asyncsavecallback)": {
      "id": "System.database.method.insertasync(sobject,datasource.asyncsavecallback)",
      "nodeType": "method",
      "name": "insertAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertAsync",
        "textToLower": "insertasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 32,
      "memberOrder": 33,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult insertAsync(SObject sobject, DataSource.AsyncSaveCallback callback)",
      "overrideSignature": "public static override Database.SaveResult insertAsync(SObject sobject, DataSource.AsyncSaveCallback callback)",
      "simplifiedSignature": "insertAsync(SObject,DataSource.AsyncSaveCallback)",
      "datatype": {
        "id": "System.database.insertasync.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.insertasync",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Initiates a request to add external object data to the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source. Allows referencing a callback class whose processSave method is called after the remote operation is completed.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.insertasync(sobject,datasource.asyncsavecallback).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "parentId": "System.database.method.insertasync(sobject,datasource.asyncsavecallback)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insertasync.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 53
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:46"
            },
            "parentId": "System.database.insertasync",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "scope": null
        },
        "callback": {
          "id": "System.database.method.insertasync(sobject,datasource.asyncsavecallback).varParam.callback",
          "nodeType": "variable",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 92
              },
              "end": {
                "line": 0,
                "character": 100
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:92"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 92
              },
              "end": {
                "line": 0,
                "character": 100
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:92"
          },
          "parentId": "System.database.method.insertasync(sobject,datasource.asyncsavecallback)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.insertasync.datatype.DataSource.AsyncSaveCallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncSaveCallback",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "DataSource",
              "textToLower": "datasource",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_DataSource_0:63"
            },
            "parentId": "System.database.insertasync",
            "order": 0,
            "memberOrder": 0,
            "type": "DataSource.AsyncSaveCallback"
          },
          "description": "The external object record to insert. The callback object that contains the state in the originating context and an action (the processSave method) that executes after the insert operation is completed. Use the action callback to update org data according to the operation’s results. The callback object must extend DataSource.AsyncSaveCallback.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insertasync(list<sobject>)": {
      "id": "System.database.method.insertasync(list<sobject>)",
      "nodeType": "method",
      "name": "insertAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertAsync",
        "textToLower": "insertasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 33,
      "memberOrder": 34,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.SaveResult> insertAsync(List<SObject> sobjects)",
      "overrideSignature": "public static override List<Database.SaveResult> insertAsync(List<SObject> sobjects)",
      "simplifiedSignature": "insertAsync(List<SObject>)",
      "datatype": {
        "id": "System.database.insertasync.datatype.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.insertasync",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.insertasync.datatype.List<Database.SaveResult>.value.Database.SaveResult",
          "nodeType": "datatype",
          "name": "Database.SaveResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.SaveResult"
        }
      },
      "description": "Initiates requests to add external object data to the relevant external systems. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.insertasync(list<sobject>).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "parentId": "System.database.method.insertasync(list<sobject>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insertasync.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 56
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:52"
            },
            "parentId": "System.database.insertasync",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.insertasync.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 57
                  },
                  "end": {
                    "line": 0,
                    "character": 64
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:57"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "description": "List of external object records to insert.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insertasync(sobject)": {
      "id": "System.database.method.insertasync(sobject)",
      "nodeType": "method",
      "name": "insertAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertAsync",
        "textToLower": "insertasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 34,
      "memberOrder": 35,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult insertAsync(SObject sobject)",
      "overrideSignature": "public static override Database.SaveResult insertAsync(SObject sobject)",
      "simplifiedSignature": "insertAsync(SObject)",
      "datatype": {
        "id": "System.database.insertasync.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.insertasync",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Initiates a request to add external object data to the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.insertasync(sobject).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "parentId": "System.database.method.insertasync(sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insertasync.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 53
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:46"
            },
            "parentId": "System.database.insertasync",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "description": "The external object record to insert.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insertimmediate(list<sobject>)": {
      "id": "System.database.method.insertimmediate(list<sobject>)",
      "nodeType": "method",
      "name": "insertImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertImmediate",
        "textToLower": "insertimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertImmediate_-1:0"
      },
      "parentId": "System.database",
      "order": 35,
      "memberOrder": 36,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.SaveResult> insertImmediate(List<SObject> sobjects)",
      "overrideSignature": "public static override List<Database.SaveResult> insertImmediate(List<SObject> sobjects)",
      "simplifiedSignature": "insertImmediate(List<SObject>)",
      "datatype": {
        "id": "System.database.insertimmediate.datatype.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.insertimmediate",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.insertimmediate.datatype.List<Database.SaveResult>.value.Database.SaveResult",
          "nodeType": "datatype",
          "name": "Database.SaveResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.SaveResult"
        }
      },
      "description": "Initiates requests to add external object data to the relevant external systems. The requests are executed synchronously and are sent to the external systems that are defined by the external objects' associated external data sources. If the Apex transaction contains pending changes, the synchronous operations can't be completed and throw exceptions.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.insertimmediate(list<sobject>).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:70"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:70"
          },
          "parentId": "System.database.method.insertimmediate(list<sobject>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insertimmediate.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 56
                },
                "end": {
                  "line": 0,
                  "character": 60
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:56"
            },
            "parentId": "System.database.insertimmediate",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.insertimmediate.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 61
                  },
                  "end": {
                    "line": 0,
                    "character": 68
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:61"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "description": "List of external object records to insert.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "insertimmediate(sobject)": {
      "id": "System.database.method.insertimmediate(sobject)",
      "nodeType": "method",
      "name": "insertImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertImmediate",
        "textToLower": "insertimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertImmediate_-1:0"
      },
      "parentId": "System.database",
      "order": 36,
      "memberOrder": 37,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult insertImmediate(SObject sobject)",
      "overrideSignature": "public static override Database.SaveResult insertImmediate(SObject sobject)",
      "simplifiedSignature": "insertImmediate(SObject)",
      "datatype": {
        "id": "System.database.insertimmediate.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.insertimmediate",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Initiates a request to add external object data to the relevant external system. The request is executed synchronously and is sent to the external system that's defined by the external object's associated external data source. If the Apex transaction contains pending changes, the synchronous operation can't be completed and throws an exception.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.insertimmediate(sobject).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:58"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:58"
          },
          "parentId": "System.database.method.insertimmediate(sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.insertimmediate.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 50
                },
                "end": {
                  "line": 0,
                  "character": 57
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:50"
            },
            "parentId": "System.database.insertimmediate",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "description": "The external object record to insert.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "merge(sobject,id)": {
      "id": "System.database.method.merge(sobject,id)",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "parentId": "System.database",
      "order": 37,
      "memberOrder": 38,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, Id duplicateId)",
      "overrideSignature": "public static override Database.MergeResult merge(sObject masterRecord, Id duplicateId)",
      "simplifiedSignature": "merge(sObject,Id)",
      "datatype": {
        "id": "System.database.merge.datatype.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.merge",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate record into the master sObject record of the same type, deleting the duplicate, and reparenting any related records. Merges only accounts, contacts, or leads.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "masterrecord": {
          "id": "System.database.method.merge(sobject,id).varParam.masterrecord",
          "nodeType": "variable",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "parentId": "System.database.method.merge(sobject,id)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.merge.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "duplicateid": {
          "id": "System.database.method.merge(sobject,id).varParam.duplicateid",
          "nodeType": "variable",
          "name": "duplicateId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateId",
            "textToLower": "duplicateid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateId_0:66"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateId",
            "textToLower": "duplicateid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateId_0:66"
          },
          "parentId": "System.database.method.merge(sobject,id)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.merge.datatype.Id",
            "nodeType": "datatype",
            "name": "Id",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Id",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 65
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Id_0:63"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "Id"
          },
          "description": "The master sObject record the duplicate record is merged into. The ID of the record to merge with the master. This record must be of the same sObject type as the master.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "merge(sobject,sobject)": {
      "id": "System.database.method.merge(sobject,sobject)",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "parentId": "System.database",
      "order": 38,
      "memberOrder": 39,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, sObject duplicateRecord)",
      "overrideSignature": "public static override Database.MergeResult merge(sObject masterRecord, sObject duplicateRecord)",
      "simplifiedSignature": "merge(sObject,sObject)",
      "datatype": {
        "id": "System.database.merge.datatype.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.merge",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate sObject record into the master sObject of the same type, deleting the duplicate, and reparenting any related records.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "masterrecord": {
          "id": "System.database.method.merge(sobject,sobject).varParam.masterrecord",
          "nodeType": "variable",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "parentId": "System.database.method.merge(sobject,sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.merge.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "duplicaterecord": {
          "id": "System.database.method.merge(sobject,sobject).varParam.duplicaterecord",
          "nodeType": "variable",
          "name": "duplicateRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateRecord",
            "textToLower": "duplicaterecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 86
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateRecord_0:71"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateRecord",
            "textToLower": "duplicaterecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 86
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateRecord_0:71"
          },
          "parentId": "System.database.method.merge(sobject,sobject)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.merge.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 70
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:63"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "description": "The master sObject record the duplicate record is merged into. The sObject record to merge with the master. This sObject must be of the same type as the master.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "merge()": {
      "id": "System.database.method.merge()",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "parentId": "System.database",
      "order": 41,
      "memberOrder": 45,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Boolean merge()",
      "overrideSignature": "public static override Boolean merge()",
      "simplifiedSignature": "merge()",
      "datatype": {
        "id": "System.database.merge.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 101
            },
            "end": {
              "line": 0,
              "character": 108
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:101"
        },
        "parentId": "System.database.merge",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Merges up to two records of the same object type into the master sObject record, optionally returning errors, if any, deleting the duplicates, and reparenting any related records.",
      "parentName": "Database",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "merge(sobject,id,boolean)": {
      "id": "System.database.method.merge(sobject,id,boolean)",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "parentId": "System.database",
      "order": 40,
      "memberOrder": 42,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, Id duplicateId, Boolean allOrNone)",
      "overrideSignature": "public static override Database.MergeResult merge(sObject masterRecord, Id duplicateId, Boolean allOrNone)",
      "simplifiedSignature": "merge(sObject,Id,Boolean)",
      "datatype": {
        "id": "System.database.merge.datatype.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.merge",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate record into the master sObject record of the same type, optionally returning errors, if any, deleting the duplicate, and reparenting any related records. Merges only accounts, contacts, or leads.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "masterrecord": {
          "id": "System.database.method.merge(sobject,id,boolean).varParam.masterrecord",
          "nodeType": "variable",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "parentId": "System.database.method.merge(sobject,id,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.merge.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "duplicateid": {
          "id": "System.database.method.merge(sobject,id,boolean).varParam.duplicateid",
          "nodeType": "variable",
          "name": "duplicateId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateId",
            "textToLower": "duplicateid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateId_0:66"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateId",
            "textToLower": "duplicateid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateId_0:66"
          },
          "parentId": "System.database.method.merge(sobject,id,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.merge.datatype.Id",
            "nodeType": "datatype",
            "name": "Id",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Id",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 65
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Id_0:63"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "Id"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.merge(sobject,id,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 87
              },
              "end": {
                "line": 0,
                "character": 96
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:87"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 87
              },
              "end": {
                "line": 0,
                "character": 96
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:87"
          },
          "parentId": "System.database.method.merge(sobject,id,boolean)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "System.database.merge.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 79
                },
                "end": {
                  "line": 0,
                  "character": 86
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:79"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The master sObject record the duplicate record is merged into. The ID of the record to merge with the master. This record must be of the same sObject type as the master. Set to false to return any errors encountered in this operation as part of the returned result. If set to true, this method throws an exception if the operation fails. The default is true.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "merge(sobject,sobject,boolean)": {
      "id": "System.database.method.merge(sobject,sobject,boolean)",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "parentId": "System.database",
      "order": 41,
      "memberOrder": 43,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, sObject duplicateRecord, Boolean allOrNone)",
      "overrideSignature": "public static override Database.MergeResult merge(sObject masterRecord, sObject duplicateRecord, Boolean allOrNone)",
      "simplifiedSignature": "merge(sObject,sObject,Boolean)",
      "datatype": {
        "id": "System.database.merge.datatype.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.merge",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate sObject record into the master sObject of the same type, optionally returning errors, if any, deleting the duplicate, and reparenting any related records.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "masterrecord": {
          "id": "System.database.method.merge(sobject,sobject,boolean).varParam.masterrecord",
          "nodeType": "variable",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_masterRecord_0:49"
          },
          "parentId": "System.database.method.merge(sobject,sobject,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.merge.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "duplicaterecord": {
          "id": "System.database.method.merge(sobject,sobject,boolean).varParam.duplicaterecord",
          "nodeType": "variable",
          "name": "duplicateRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateRecord",
            "textToLower": "duplicaterecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 86
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateRecord_0:71"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateRecord",
            "textToLower": "duplicaterecord",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 71
              },
              "end": {
                "line": 0,
                "character": 86
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_duplicateRecord_0:71"
          },
          "parentId": "System.database.method.merge(sobject,sobject,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.merge.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 70
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:63"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.merge(sobject,sobject,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 96
              },
              "end": {
                "line": 0,
                "character": 105
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:96"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 96
              },
              "end": {
                "line": 0,
                "character": 105
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:96"
          },
          "parentId": "System.database.method.merge(sobject,sobject,boolean)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "System.database.merge.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 88
                },
                "end": {
                  "line": 0,
                  "character": 95
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:88"
            },
            "parentId": "System.database.merge",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The master sObject record the duplicate record is merged into. The sObject record to merge with the master. This sObject must be of the same type as the master. Set to false to return any errors encountered in this operation as part of the returned result. If set to true, this method throws an exception if the operation fails. The default is true.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "query(string)": {
      "id": "System.database.method.query(string)",
      "nodeType": "method",
      "name": "query",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "query",
        "textToLower": "query",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_query_-1:0"
      },
      "parentId": "System.database",
      "order": 42,
      "memberOrder": 46,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static sObject[] query(String queryString)",
      "overrideSignature": "public static override sObject[] query(String queryString)",
      "simplifiedSignature": "query(String)",
      "datatype": {
        "id": "System.database.query.datatype.sObject[]",
        "nodeType": "datatype",
        "name": "sObject[]",
        "startToken": {
          "type": "datatype.support.class",
          "text": "sObject",
          "textToLower": "sobject",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 21
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_sObject_0:14"
        },
        "parentId": "System.database.query",
        "order": 0,
        "memberOrder": 0,
        "type": "sObject[]"
      },
      "description": "Creates a dynamic SOQL query at runtime.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "querystring": {
          "id": "System.database.method.query(string).varParam.querystring",
          "nodeType": "variable",
          "name": "queryString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryString",
            "textToLower": "querystring",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 48
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_queryString_0:37"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryString",
            "textToLower": "querystring",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 48
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_queryString_0:37"
          },
          "parentId": "System.database.method.query(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.query.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 30
                },
                "end": {
                  "line": 0,
                  "character": 36
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:30"
            },
            "parentId": "System.database.query",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "rollback(system.savepoint)": {
      "id": "System.database.method.rollback(system.savepoint)",
      "nodeType": "method",
      "name": "rollback",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rollback",
        "textToLower": "rollback",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rollback_-1:0"
      },
      "parentId": "System.database",
      "order": 43,
      "memberOrder": 47,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void rollback(System.Savepoint databaseSavepoint)",
      "overrideSignature": "public static override Void rollback(System.Savepoint databaseSavepoint)",
      "simplifiedSignature": "rollback(System.Savepoint)",
      "datatype": {
        "id": "System.database.rollback.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.database.rollback",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Restores the database to the state specified by the savepoint variable. Any emails submitted since the last savepoint are also rolled back and not sent.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "databasesavepoint": {
          "id": "System.database.method.rollback(system.savepoint).varParam.databasesavepoint",
          "nodeType": "variable",
          "name": "databaseSavepoint",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "databaseSavepoint",
            "textToLower": "databasesavepoint",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 45
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_databaseSavepoint_0:45"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "databaseSavepoint",
            "textToLower": "databasesavepoint",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 45
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_databaseSavepoint_0:45"
          },
          "parentId": "System.database.method.rollback(system.savepoint)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.rollback.datatype.System.Savepoint",
            "nodeType": "datatype",
            "name": "System.Savepoint",
            "startToken": {
              "type": "datatype.support.class",
              "text": "System",
              "textToLower": "system",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 28
                },
                "end": {
                  "line": 0,
                  "character": 34
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_System_0:28"
            },
            "parentId": "System.database.rollback",
            "order": 0,
            "memberOrder": 0,
            "type": "System.Savepoint"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setsavepoint()": {
      "id": "System.database.method.setsavepoint()",
      "nodeType": "method",
      "name": "setSavepoint",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setSavepoint",
        "textToLower": "setsavepoint",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setSavepoint_-1:0"
      },
      "parentId": "System.database",
      "order": 44,
      "memberOrder": 48,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static System.Savepoint setSavepoint()",
      "overrideSignature": "public static override System.Savepoint setSavepoint()",
      "simplifiedSignature": "setSavepoint()",
      "datatype": {
        "id": "System.database.setsavepoint.datatype.System.Savepoint",
        "nodeType": "datatype",
        "name": "System.Savepoint",
        "startToken": {
          "type": "datatype.support.class",
          "text": "System",
          "textToLower": "system",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_System_0:14"
        },
        "parentId": "System.database.setsavepoint",
        "order": 0,
        "memberOrder": 0,
        "type": "System.Savepoint"
      },
      "description": "Returns a savepoint variable that can be stored as a local variable, then used with the rollback method to restore the database to that point.",
      "parentName": "Database",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "undelete(sobject,boolean)": {
      "id": "System.database.method.undelete(sobject,boolean)",
      "nodeType": "method",
      "name": "undelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "undelete",
        "textToLower": "undelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_undelete_-1:0"
      },
      "parentId": "System.database",
      "order": 45,
      "memberOrder": 49,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.UndeleteResult undelete(sObject recordToUndelete, Boolean allOrNone)",
      "overrideSignature": "public static override Database.UndeleteResult undelete(sObject recordToUndelete, Boolean allOrNone)",
      "simplifiedSignature": "undelete(sObject,Boolean)",
      "datatype": {
        "id": "System.database.undelete.datatype.Database.UndeleteResult",
        "nodeType": "datatype",
        "name": "Database.UndeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.undelete",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.UndeleteResult"
      },
      "description": "Restores an existing sObject record, such as an individual account or contact, from your organization's Recycle Bin.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordtoundelete": {
          "id": "System.database.method.undelete(sobject,boolean).varParam.recordtoundelete",
          "nodeType": "variable",
          "name": "recordToUndelete",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUndelete",
            "textToLower": "recordtoundelete",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 55
              },
              "end": {
                "line": 0,
                "character": 71
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUndelete_0:55"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUndelete",
            "textToLower": "recordtoundelete",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 55
              },
              "end": {
                "line": 0,
                "character": 71
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUndelete_0:55"
          },
          "parentId": "System.database.method.undelete(sobject,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.undelete.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 47
                },
                "end": {
                  "line": 0,
                  "character": 54
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:47"
            },
            "parentId": "System.database.undelete",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.undelete(sobject,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 90
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:81"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 81
              },
              "end": {
                "line": 0,
                "character": 90
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:81"
          },
          "parentId": "System.database.method.undelete(sobject,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.undelete.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 73
                },
                "end": {
                  "line": 0,
                  "character": 80
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:73"
            },
            "parentId": "System.database.undelete",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "undelete()": {
      "id": "System.database.method.undelete()",
      "nodeType": "method",
      "name": "undelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "undelete",
        "textToLower": "undelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_undelete_-1:0"
      },
      "parentId": "System.database",
      "order": 47,
      "memberOrder": 52,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Boolean undelete()",
      "overrideSignature": "public static override Boolean undelete()",
      "simplifiedSignature": "undelete()",
      "datatype": {
        "id": "System.database.undelete.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 65
            },
            "end": {
              "line": 0,
              "character": 72
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:65"
        },
        "parentId": "System.database.undelete",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Restores one or more existing sObject records, such as individual accounts or contacts, from your organization’s Recycle Bin.",
      "parentName": "Database",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "undelete(id,boolean)": {
      "id": "System.database.method.undelete(id,boolean)",
      "nodeType": "method",
      "name": "undelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "undelete",
        "textToLower": "undelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_undelete_-1:0"
      },
      "parentId": "System.database",
      "order": 47,
      "memberOrder": 51,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.UndeleteResult undelete(ID recordID, Boolean allOrNone)",
      "overrideSignature": "public static override Database.UndeleteResult undelete(ID recordID, Boolean allOrNone)",
      "simplifiedSignature": "undelete(ID,Boolean)",
      "datatype": {
        "id": "System.database.undelete.datatype.Database.UndeleteResult",
        "nodeType": "datatype",
        "name": "Database.UndeleteResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.undelete",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.UndeleteResult"
      },
      "description": "Restores an existing sObject record, such as an individual account or contact, from your organization's Recycle Bin.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordid": {
          "id": "System.database.method.undelete(id,boolean).varParam.recordid",
          "nodeType": "variable",
          "name": "recordID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordID",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 58
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordID_0:50"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordID",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 58
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordID_0:50"
          },
          "parentId": "System.database.method.undelete(id,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.undelete.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 47
                },
                "end": {
                  "line": 0,
                  "character": 49
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:47"
            },
            "parentId": "System.database.undelete",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.undelete(id,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 68
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:68"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 68
              },
              "end": {
                "line": 0,
                "character": 77
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:68"
          },
          "parentId": "System.database.method.undelete(id,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.undelete.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 60
                },
                "end": {
                  "line": 0,
                  "character": 67
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:60"
            },
            "parentId": "System.database.undelete",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "update(sobject,boolean)": {
      "id": "System.database.method.update(sobject,boolean)",
      "nodeType": "method",
      "name": "update",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "update",
        "textToLower": "update",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_update_-1:0"
      },
      "parentId": "System.database",
      "order": 48,
      "memberOrder": 53,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult update(sObject recordToUpdate, Boolean allOrNone)",
      "overrideSignature": "public static override Database.SaveResult update(sObject recordToUpdate, Boolean allOrNone)",
      "simplifiedSignature": "update(sObject,Boolean)",
      "datatype": {
        "id": "System.database.update.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.update",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Modifies an existing sObject record, such as an individual account or contact, in your organization's data.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordtoupdate": {
          "id": "System.database.method.update(sobject,boolean).varParam.recordtoupdate",
          "nodeType": "variable",
          "name": "recordToUpdate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpdate",
            "textToLower": "recordtoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUpdate_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpdate",
            "textToLower": "recordtoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUpdate_0:49"
          },
          "parentId": "System.database.method.update(sobject,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.update.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.update",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.update(sobject,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:73"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 73
              },
              "end": {
                "line": 0,
                "character": 82
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:73"
          },
          "parentId": "System.database.method.update(sobject,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.update.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 72
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:65"
            },
            "parentId": "System.database.update",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "update()": {
      "id": "System.database.method.update()",
      "nodeType": "method",
      "name": "update",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "update",
        "textToLower": "update",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_update_-1:0"
      },
      "parentId": "System.database",
      "order": 50,
      "memberOrder": 56,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.DMLOptions update()",
      "overrideSignature": "public static override Database.DMLOptions update()",
      "simplifiedSignature": "update()",
      "datatype": {
        "id": "System.database.update.datatype.Database.DMLOptions",
        "nodeType": "datatype",
        "name": "Database.DMLOptions",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 70
            },
            "end": {
              "line": 0,
              "character": 78
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:70"
        },
        "parentId": "System.database.update",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.DMLOptions"
      },
      "description": "Modifies one or more existing sObject records, such as individual accounts or contactsinvoice statements, in your organization’s data.",
      "parentName": "Database",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "update(sobject,database.dmloptions)": {
      "id": "System.database.method.update(sobject,database.dmloptions)",
      "nodeType": "method",
      "name": "update",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "update",
        "textToLower": "update",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_update_-1:0"
      },
      "parentId": "System.database",
      "order": 50,
      "memberOrder": 55,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult update(sObject recordToUpdate, Database.DmlOptions dmlOptions)",
      "overrideSignature": "public static override Database.SaveResult update(sObject recordToUpdate, Database.DmlOptions dmlOptions)",
      "simplifiedSignature": "update(sObject,Database.DmlOptions)",
      "datatype": {
        "id": "System.database.update.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.update",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Modifies an existing sObject record, such as an individual account or contact, in your organization's data.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordtoupdate": {
          "id": "System.database.method.update(sobject,database.dmloptions).varParam.recordtoupdate",
          "nodeType": "variable",
          "name": "recordToUpdate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpdate",
            "textToLower": "recordtoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUpdate_0:49"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpdate",
            "textToLower": "recordtoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 49
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUpdate_0:49"
          },
          "parentId": "System.database.method.update(sobject,database.dmloptions)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.update.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 48
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:41"
            },
            "parentId": "System.database.update",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "dmloptions": {
          "id": "System.database.method.update(sobject,database.dmloptions).varParam.dmloptions",
          "nodeType": "variable",
          "name": "dmlOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 85
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_dmlOptions_0:85"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 85
              },
              "end": {
                "line": 0,
                "character": 95
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_dmlOptions_0:85"
          },
          "parentId": "System.database.method.update(sobject,database.dmloptions)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.update.datatype.Database.DmlOptions",
            "nodeType": "datatype",
            "name": "Database.DmlOptions",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Database",
              "textToLower": "database",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Database_0:65"
            },
            "parentId": "System.database.update",
            "order": 0,
            "memberOrder": 0,
            "type": "Database.DmlOptions"
          },
          "description": "The optional dmlOptions parameter specifies additional data for the transaction, such as assignment rule information or rollback behavior when errors occur during record insertions.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "upsert(sobject,schema.sobjectfield,boolean)": {
      "id": "System.database.method.upsert(sobject,schema.sobjectfield,boolean)",
      "nodeType": "method",
      "name": "upsert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "upsert",
        "textToLower": "upsert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_upsert_-1:0"
      },
      "parentId": "System.database",
      "order": 51,
      "memberOrder": 57,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.UpsertResult upsert(sObject recordToUpsert, Schema.SObjectField externalIDField, Boolean allOrNone)",
      "overrideSignature": "public static override Database.UpsertResult upsert(sObject recordToUpsert, Schema.SObjectField externalIDField, Boolean allOrNone)",
      "simplifiedSignature": "upsert(sObject,Schema.SObjectField,Boolean)",
      "datatype": {
        "id": "System.database.upsert.datatype.Database.UpsertResult",
        "nodeType": "datatype",
        "name": "Database.UpsertResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.upsert",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.UpsertResult"
      },
      "description": "Creates a new sObject record or updates an existing sObject record within a single statement, using a specified field to determine the presence of existing objects, or the ID field if no field is specified.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "recordtoupsert": {
          "id": "System.database.method.upsert(sobject,schema.sobjectfield,boolean).varParam.recordtoupsert",
          "nodeType": "variable",
          "name": "recordToUpsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpsert",
            "textToLower": "recordtoupsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUpsert_0:51"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpsert",
            "textToLower": "recordtoupsert",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 51
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordToUpsert_0:51"
          },
          "parentId": "System.database.method.upsert(sobject,schema.sobjectfield,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.upsert.datatype.sObject",
            "nodeType": "datatype",
            "name": "sObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "sObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 43
                },
                "end": {
                  "line": 0,
                  "character": 50
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_sObject_0:43"
            },
            "parentId": "System.database.upsert",
            "order": 0,
            "memberOrder": 0,
            "type": "sObject"
          },
          "scope": null
        },
        "externalidfield": {
          "id": "System.database.method.upsert(sobject,schema.sobjectfield,boolean).varParam.externalidfield",
          "nodeType": "variable",
          "name": "externalIDField",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "externalIDField",
            "textToLower": "externalidfield",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 87
              },
              "end": {
                "line": 0,
                "character": 102
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_externalIDField_0:87"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "externalIDField",
            "textToLower": "externalidfield",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 87
              },
              "end": {
                "line": 0,
                "character": 102
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_externalIDField_0:87"
          },
          "parentId": "System.database.method.upsert(sobject,schema.sobjectfield,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.upsert.datatype.Schema.SObjectField",
            "nodeType": "datatype",
            "name": "Schema.SObjectField",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Schema",
              "textToLower": "schema",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 67
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Schema_0:67"
            },
            "parentId": "System.database.upsert",
            "order": 0,
            "memberOrder": 0,
            "type": "Schema.SObjectField"
          },
          "scope": null
        },
        "allornone": {
          "id": "System.database.method.upsert(sobject,schema.sobjectfield,boolean).varParam.allornone",
          "nodeType": "variable",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 112
              },
              "end": {
                "line": 0,
                "character": 121
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:112"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 112
              },
              "end": {
                "line": 0,
                "character": 121
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_allOrNone_0:112"
          },
          "parentId": "System.database.method.upsert(sobject,schema.sobjectfield,boolean)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "System.database.upsert.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 104
                },
                "end": {
                  "line": 0,
                  "character": 111
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:104"
            },
            "parentId": "System.database.upsert",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The externalIdField is of type Schema.SObjectField, that is, a field token. Find the token for the field by using the fields special method. For example, Schema.SObjectField f = Account.Fields.MyExternalId. The externalIdField parameter is the field that upsert() uses to match sObjects with existing records. This field can be a custom field marked as external ID, or a standard field with the idLookup attribute. The optional allOrNone parameter specifies whether the operation allows partial success. If you specify false for this parameter and a record fails, the remainder of the DML operation can still succeed. This method returns a result object that can be used to verify which records succeeded, which failed, and why. If the parameter is not set or is set true, an exception is thrown if the method is not successful.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "upsert()": {
      "id": "System.database.method.upsert()",
      "nodeType": "method",
      "name": "upsert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "upsert",
        "textToLower": "upsert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_upsert_-1:0"
      },
      "parentId": "System.database",
      "order": 52,
      "memberOrder": 58,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Boolean upsert()",
      "overrideSignature": "public static override Boolean upsert()",
      "simplifiedSignature": "upsert()",
      "datatype": {
        "id": "System.database.upsert.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 109
            },
            "end": {
              "line": 0,
              "character": 116
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:109"
        },
        "parentId": "System.database.upsert",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Creates new sObject records or updates existing sObject records within a single statement, using a specified field to determine the presence of existing objects, or the ID field if no field is specified.",
      "parentName": "Database",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "updateasync(list<sobject>,datasource.asyncsavecallback)": {
      "id": "System.database.method.updateasync(list<sobject>,datasource.asyncsavecallback)",
      "nodeType": "method",
      "name": "updateAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateAsync",
        "textToLower": "updateasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 53,
      "memberOrder": 59,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.SaveResult> updateAsync(List<SObject> sobjects, DataSource.AsyncSaveCallback callback)",
      "overrideSignature": "public static override List<Database.SaveResult> updateAsync(List<SObject> sobjects, DataSource.AsyncSaveCallback callback)",
      "simplifiedSignature": "updateAsync(List<SObject>,DataSource.AsyncSaveCallback)",
      "datatype": {
        "id": "System.database.updateasync.datatype.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.updateasync",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.updateasync.datatype.List<Database.SaveResult>.value.Database.SaveResult",
          "nodeType": "datatype",
          "name": "Database.SaveResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.SaveResult"
        }
      },
      "description": "Initiates requests to update external object data on the relevant external systems. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources. Allows referencing a callback class whose processSave method is called for each record after the remote operations are completed.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.updateasync(list<sobject>,datasource.asyncsavecallback).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "parentId": "System.database.method.updateasync(list<sobject>,datasource.asyncsavecallback)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.updateasync.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 56
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:52"
            },
            "parentId": "System.database.updateasync",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.updateasync.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 57
                  },
                  "end": {
                    "line": 0,
                    "character": 64
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:57"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "scope": null
        },
        "callback": {
          "id": "System.database.method.updateasync(list<sobject>,datasource.asyncsavecallback).varParam.callback",
          "nodeType": "variable",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 113
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:105"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 105
              },
              "end": {
                "line": 0,
                "character": 113
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:105"
          },
          "parentId": "System.database.method.updateasync(list<sobject>,datasource.asyncsavecallback)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.updateasync.datatype.DataSource.AsyncSaveCallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncSaveCallback",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "DataSource",
              "textToLower": "datasource",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 76
                },
                "end": {
                  "line": 0,
                  "character": 86
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_DataSource_0:76"
            },
            "parentId": "System.database.updateasync",
            "order": 0,
            "memberOrder": 0,
            "type": "DataSource.AsyncSaveCallback"
          },
          "description": "List of external object records to modify. The callback object that contains the state in the originating context and an action (the processSave method) that executes after the insert operation is completed. Use the action callback to update org data according to the operation’s results. The callback object must extend DataSource.AsyncSaveCallback.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updateasync(sobject,datasource.asyncsavecallback)": {
      "id": "System.database.method.updateasync(sobject,datasource.asyncsavecallback)",
      "nodeType": "method",
      "name": "updateAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateAsync",
        "textToLower": "updateasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 54,
      "memberOrder": 60,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult updateAsync(SObject sobject, DataSource.AsyncSaveCallback callback)",
      "overrideSignature": "public static override Database.SaveResult updateAsync(SObject sobject, DataSource.AsyncSaveCallback callback)",
      "simplifiedSignature": "updateAsync(SObject,DataSource.AsyncSaveCallback)",
      "datatype": {
        "id": "System.database.updateasync.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.updateasync",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Initiates a request to update external object data on the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source. Allows referencing a callback class whose processSave method is called after the remote operation is completed.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.updateasync(sobject,datasource.asyncsavecallback).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "parentId": "System.database.method.updateasync(sobject,datasource.asyncsavecallback)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.updateasync.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 53
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:46"
            },
            "parentId": "System.database.updateasync",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "scope": null
        },
        "callback": {
          "id": "System.database.method.updateasync(sobject,datasource.asyncsavecallback).varParam.callback",
          "nodeType": "variable",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 92
              },
              "end": {
                "line": 0,
                "character": 100
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:92"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 92
              },
              "end": {
                "line": 0,
                "character": 100
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_callback_0:92"
          },
          "parentId": "System.database.method.updateasync(sobject,datasource.asyncsavecallback)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.database.updateasync.datatype.DataSource.AsyncSaveCallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncSaveCallback",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "DataSource",
              "textToLower": "datasource",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 63
                },
                "end": {
                  "line": 0,
                  "character": 73
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_DataSource_0:63"
            },
            "parentId": "System.database.updateasync",
            "order": 0,
            "memberOrder": 0,
            "type": "DataSource.AsyncSaveCallback"
          },
          "description": "External object record to modify. The callback object that contains the state in the originating context and an action (the processSave method) that executes after the insert operation is completed. Use the action callback to update org data according to the operation’s results. The callback object must extend DataSource.AsyncSaveCallback.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updateasync(list<sobject>)": {
      "id": "System.database.method.updateasync(list<sobject>)",
      "nodeType": "method",
      "name": "updateAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateAsync",
        "textToLower": "updateasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 55,
      "memberOrder": 61,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.SaveResult> updateAsync(List<SObject> sobjects)",
      "overrideSignature": "public static override List<Database.SaveResult> updateAsync(List<SObject> sobjects)",
      "simplifiedSignature": "updateAsync(List<SObject>)",
      "datatype": {
        "id": "System.database.updateasync.datatype.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.updateasync",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.updateasync.datatype.List<Database.SaveResult>.value.Database.SaveResult",
          "nodeType": "datatype",
          "name": "Database.SaveResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.SaveResult"
        }
      },
      "description": "Initiates requests to update external object data on the relevant external systems. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.updateasync(list<sobject>).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 66
              },
              "end": {
                "line": 0,
                "character": 74
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:66"
          },
          "parentId": "System.database.method.updateasync(list<sobject>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.updateasync.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 52
                },
                "end": {
                  "line": 0,
                  "character": 56
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:52"
            },
            "parentId": "System.database.updateasync",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.updateasync.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 57
                  },
                  "end": {
                    "line": 0,
                    "character": 64
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:57"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "description": "List of external object records to modify.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updateasync(sobject)": {
      "id": "System.database.method.updateasync(sobject)",
      "nodeType": "method",
      "name": "updateAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateAsync",
        "textToLower": "updateasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateAsync_-1:0"
      },
      "parentId": "System.database",
      "order": 56,
      "memberOrder": 62,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult updateAsync(SObject sobject)",
      "overrideSignature": "public static override Database.SaveResult updateAsync(SObject sobject)",
      "simplifiedSignature": "updateAsync(SObject)",
      "datatype": {
        "id": "System.database.updateasync.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.updateasync",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Initiates a request to update external object data on the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.updateasync(sobject).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:54"
          },
          "parentId": "System.database.method.updateasync(sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.updateasync.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 53
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:46"
            },
            "parentId": "System.database.updateasync",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "description": "External object record to modify.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updateimmediate(list<sobject>)": {
      "id": "System.database.method.updateimmediate(list<sobject>)",
      "nodeType": "method",
      "name": "updateImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateImmediate",
        "textToLower": "updateimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateImmediate_-1:0"
      },
      "parentId": "System.database",
      "order": 57,
      "memberOrder": 63,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Database.SaveResult> updateImmediate(List<SObject> sobjects)",
      "overrideSignature": "public static override List<Database.SaveResult> updateImmediate(List<SObject> sobjects)",
      "simplifiedSignature": "updateImmediate(List<SObject>)",
      "datatype": {
        "id": "System.database.updateimmediate.datatype.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.database.updateimmediate",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.database.updateimmediate.datatype.List<Database.SaveResult>.value.Database.SaveResult",
          "nodeType": "datatype",
          "name": "Database.SaveResult",
          "startToken": {
            "type": "datatype.support.namespace",
            "text": "Database",
            "textToLower": "database",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 27
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Database_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Database.SaveResult"
        }
      },
      "description": "Initiates requests to update external object data on the relevant external systems. The requests are executed synchronously and are sent to the external systems that are defined by the external objects' associated external data sources. If the Apex transaction contains pending changes, the synchronous operations can't be completed and throw exceptions.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobjects": {
          "id": "System.database.method.updateimmediate(list<sobject>).varParam.sobjects",
          "nodeType": "variable",
          "name": "sobjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:70"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjects",
            "textToLower": "sobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 70
              },
              "end": {
                "line": 0,
                "character": 78
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobjects_0:70"
          },
          "parentId": "System.database.method.updateimmediate(list<sobject>)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.updateimmediate.datatype.List<SObject>",
            "nodeType": "datatype",
            "name": "List<SObject>",
            "startToken": {
              "type": "datatype.collection",
              "text": "List",
              "textToLower": "list",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 56
                },
                "end": {
                  "line": 0,
                  "character": 60
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_List_0:56"
            },
            "parentId": "System.database.updateimmediate",
            "order": 0,
            "memberOrder": 0,
            "type": "List",
            "value": {
              "id": "System.database.updateimmediate.datatype.List<SObject>.value.SObject",
              "nodeType": "datatype",
              "name": "SObject",
              "startToken": {
                "type": "datatype.support.class",
                "text": "SObject",
                "textToLower": "sobject",
                "isAux": false,
                "range": {
                  "start": {
                    "line": 0,
                    "character": 61
                  },
                  "end": {
                    "line": 0,
                    "character": 68
                  },
                  "isEmpty": false,
                  "isSingleLine": true
                },
                "id": "token.type.identifier_SObject_0:61"
              },
              "order": 0,
              "memberOrder": 0,
              "type": "SObject"
            }
          },
          "description": "List of external object records to modify.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "updateimmediate(sobject)": {
      "id": "System.database.method.updateimmediate(sobject)",
      "nodeType": "method",
      "name": "updateImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateImmediate",
        "textToLower": "updateimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateImmediate_-1:0"
      },
      "parentId": "System.database",
      "order": 58,
      "memberOrder": 64,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Database.SaveResult updateImmediate(SObject sobject)",
      "overrideSignature": "public static override Database.SaveResult updateImmediate(SObject sobject)",
      "simplifiedSignature": "updateImmediate(SObject)",
      "datatype": {
        "id": "System.database.updateimmediate.datatype.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Database",
          "textToLower": "database",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Database_0:14"
        },
        "parentId": "System.database.updateimmediate",
        "order": 0,
        "memberOrder": 0,
        "type": "Database.SaveResult"
      },
      "description": "Initiates a request to update external object data on the relevant external system. The request is executed synchronously and is sent to the external system that's defined by the external object's associated external data source. If the Apex transaction contains pending changes, the synchronous operation can't be completed and throws an exception.",
      "parentName": "Database",
      "variables": {},
      "params": {
        "sobject": {
          "id": "System.database.method.updateimmediate(sobject).varParam.sobject",
          "nodeType": "variable",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:58"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 58
              },
              "end": {
                "line": 0,
                "character": 65
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sobject_0:58"
          },
          "parentId": "System.database.method.updateimmediate(sobject)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.database.updateimmediate.datatype.SObject",
            "nodeType": "datatype",
            "name": "SObject",
            "startToken": {
              "type": "datatype.support.class",
              "text": "SObject",
              "textToLower": "sobject",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 50
                },
                "end": {
                  "line": 0,
                  "character": 57
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_SObject_0:50"
            },
            "parentId": "System.database.updateimmediate",
            "order": 0,
            "memberOrder": 0,
            "type": "SObject"
          },
          "description": "External object record to modify.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 64,
  "queries": []
}