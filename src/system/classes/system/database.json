{
  "id": "System.database",
  "nodeType": "class",
  "name": "Database",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Database",
    "textToLower": "database",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Database_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for creating and manipulating data.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_database.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "convertlead(database.leadconvert,boolean)": {
      "id": "System.database.convertlead",
      "nodeType": "method",
      "name": "convertLead",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "convertLead",
        "textToLower": "convertlead",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_convertLead_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.LeadConvertResult convertLead(Database.LeadConvert leadToConvert, Boolean allOrNone)",
      "simplifiedSignature": "convertLead(Database.LeadConvert,Boolean)",
      "datatype": {
        "id": "System.database.convertlead.Database.LeadConvertResult",
        "nodeType": "datatype",
        "name": "Database.LeadConvertResult"
      },
      "description": "Converts a lead into an account and contact, as well as (optionally) an opportunity.",
      "params": {
        "leadToConvert": {
          "id": "System.database.convertlead.leadtoconvert",
          "type": "var",
          "name": "leadToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadToConvert",
            "textToLower": "leadtoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_leadToConvert_-1:0"
          },
          "signature": "Database.LeadConvert leadToConvert",
          "datatype": {
            "id": "System.database.convertlead.database.leadconvert",
            "nodeType": "datatype",
            "name": "Database.LeadConvert"
          }
        },
        "allOrNone": {
          "id": "System.database.convertlead.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.convertlead.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "convertlead(database.leadconvert[],boolean)": {
      "id": "System.database.convertlead",
      "nodeType": "method",
      "name": "convertLead",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "convertLead",
        "textToLower": "convertlead",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_convertLead_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.LeadConvertResult[] convertLead(Database.LeadConvert[] leadsToConvert, Boolean allOrNone)",
      "simplifiedSignature": "convertLead(Database.LeadConvert[],Boolean)",
      "datatype": {
        "id": "System.database.convertlead.Database.LeadConvertResult[]",
        "nodeType": "datatype",
        "name": "Database.LeadConvertResult[]"
      },
      "description": "Converts a list of LeadConvert objects into accounts and contacts, as well as (optionally) opportunities.",
      "params": {
        "leadsToConvert": {
          "id": "System.database.convertlead.leadstoconvert",
          "type": "var",
          "name": "leadsToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "leadsToConvert",
            "textToLower": "leadstoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_leadsToConvert_-1:0"
          },
          "signature": "Database.LeadConvert[] leadsToConvert",
          "datatype": {
            "id": "System.database.convertlead.database.leadconvert[]",
            "nodeType": "datatype",
            "name": "Database.LeadConvert[]"
          }
        },
        "allOrNone": {
          "id": "System.database.convertlead.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.convertlead.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "countquery(string)": {
      "id": "System.database.countquery",
      "nodeType": "method",
      "name": "countQuery",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "countQuery",
        "textToLower": "countquery",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_countQuery_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Integer countQuery(String query)",
      "simplifiedSignature": "countQuery(String)",
      "datatype": {
        "id": "System.database.countquery.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of records that a dynamic SOQL query would return when executed.",
      "params": {
        "query": {
          "id": "System.database.countquery.query",
          "type": "var",
          "name": "query",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "query",
            "textToLower": "query",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_query_-1:0"
          },
          "signature": "String query",
          "datatype": {
            "id": "System.database.countquery.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "delete(sobject,boolean)": {
      "id": "System.database.delete",
      "nodeType": "method",
      "name": "delete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "delete",
        "textToLower": "delete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_delete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult delete(SObject recordToDelete, Boolean allOrNone)",
      "simplifiedSignature": "delete(SObject,Boolean)",
      "datatype": {
        "id": "System.database.delete.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult"
      },
      "description": "Deletes an existing sObject record, such as an individual account or contact, from your organization's data.",
      "params": {
        "recordToDelete": {
          "id": "System.database.delete.recordtodelete",
          "type": "var",
          "name": "recordToDelete",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToDelete",
            "textToLower": "recordtodelete",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordToDelete_-1:0"
          },
          "signature": "SObject recordToDelete",
          "datatype": {
            "id": "System.database.delete.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "allOrNone": {
          "id": "System.database.delete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.delete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "delete(sobject[],boolean)": {
      "id": "System.database.delete",
      "nodeType": "method",
      "name": "delete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "delete",
        "textToLower": "delete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_delete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult[] delete(SObject[] recordsToDelete, Boolean allOrNone)",
      "simplifiedSignature": "delete(SObject[],Boolean)",
      "datatype": {
        "id": "System.database.delete.Database.DeleteResult[]",
        "nodeType": "datatype",
        "name": "Database.DeleteResult[]"
      },
      "description": "Deletes a list of existing sObject records, such as individual accounts or contacts, from your organization’s data.",
      "params": {
        "recordsToDelete": {
          "id": "System.database.delete.recordstodelete",
          "type": "var",
          "name": "recordsToDelete",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToDelete",
            "textToLower": "recordstodelete",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordsToDelete_-1:0"
          },
          "signature": "SObject[] recordsToDelete",
          "datatype": {
            "id": "System.database.delete.sobject[]",
            "nodeType": "datatype",
            "name": "SObject[]"
          }
        },
        "allOrNone": {
          "id": "System.database.delete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.delete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "delete(id,boolean)": {
      "id": "System.database.delete",
      "nodeType": "method",
      "name": "delete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "delete",
        "textToLower": "delete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_delete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult delete(ID recordID, Boolean allOrNone)",
      "simplifiedSignature": "delete(ID,Boolean)",
      "datatype": {
        "id": "System.database.delete.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult"
      },
      "description": "Deletes existing sObject records, such as individual accounts or contacts, from your organization’s data.",
      "params": {
        "recordID": {
          "id": "System.database.delete.recordid",
          "type": "var",
          "name": "recordID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordID",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordID_-1:0"
          },
          "signature": "ID recordID",
          "datatype": {
            "id": "System.database.delete.id",
            "nodeType": "datatype",
            "name": "ID"
          }
        },
        "allOrNone": {
          "id": "System.database.delete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.delete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "delete(id[],boolean)": {
      "id": "System.database.delete",
      "nodeType": "method",
      "name": "delete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "delete",
        "textToLower": "delete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_delete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult[] delete(ID[] recordIDs, Boolean allOrNone)",
      "simplifiedSignature": "delete(ID[],Boolean)",
      "datatype": {
        "id": "System.database.delete.Database.DeleteResult[]",
        "nodeType": "datatype",
        "name": "Database.DeleteResult[]"
      },
      "description": "Deletes a list of existing sObject records, such as individual accounts or contacts, from your organization’s data.",
      "params": {
        "recordIDs": {
          "id": "System.database.delete.recordids",
          "type": "var",
          "name": "recordIDs",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordIDs",
            "textToLower": "recordids",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordIDs_-1:0"
          },
          "signature": "ID[] recordIDs",
          "datatype": {
            "id": "System.database.delete.id[]",
            "nodeType": "datatype",
            "name": "ID[]"
          }
        },
        "allOrNone": {
          "id": "System.database.delete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.delete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "deleteasync(list)": {
      "id": "System.database.deleteasync",
      "nodeType": "method",
      "name": "deleteAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteAsync",
        "textToLower": "deleteasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Database.DeleteResult> deleteAsync(List <SObject>)",
      "simplifiedSignature": "deleteAsync(List)",
      "datatype": {
        "id": "System.database.deleteasync.List<Database.DeleteResult>",
        "nodeType": "datatype",
        "name": "List<Database.DeleteResult>"
      },
      "description": "Initiates requests to delete the external data that corresponds to the specified external object records. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources.",
      "params": {
        "<SObject>": {
          "id": "System.database.deleteasync.<sobject>",
          "type": "var",
          "name": "<SObject>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<SObject>",
            "textToLower": "<sobject>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<SObject>_-1:0"
          },
          "signature": "List <SObject>",
          "datatype": {
            "id": "System.database.deleteasync.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "deleteasync(sobject,datasource.asyncdeletecallback)": {
      "id": "System.database.deleteasync",
      "nodeType": "method",
      "name": "deleteAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteAsync",
        "textToLower": "deleteasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult deleteAsync(SObject sobject, DataSource.AsyncDeleteCallback callback)",
      "simplifiedSignature": "deleteAsync(SObject,DataSource.AsyncDeleteCallback)",
      "datatype": {
        "id": "System.database.deleteasync.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult"
      },
      "description": "Initiates a request to delete the external data that corresponds to the specified external object record. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source. Allows referencing a callback class whose processDelete method is called after deletion.",
      "params": {
        "sobject": {
          "id": "System.database.deleteasync.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.deleteasync.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "callback": {
          "id": "System.database.deleteasync.callback",
          "type": "var",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_callback_-1:0"
          },
          "signature": "DataSource.AsyncDeleteCallback callback",
          "datatype": {
            "id": "System.database.deleteasync.datasource.asyncdeletecallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncDeleteCallback"
          }
        }
      }
    },
    "deleteasync(sobject)": {
      "id": "System.database.deleteasync",
      "nodeType": "method",
      "name": "deleteAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteAsync",
        "textToLower": "deleteasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult deleteAsync(SObject sobject)",
      "simplifiedSignature": "deleteAsync(SObject)",
      "datatype": {
        "id": "System.database.deleteasync.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult"
      },
      "description": "Initiates a request to delete the external data that corresponds to the specified external object record. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source.",
      "params": {
        "sobject": {
          "id": "System.database.deleteasync.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.deleteasync.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    },
    "deleteimmediate(list)": {
      "id": "System.database.deleteimmediate",
      "nodeType": "method",
      "name": "deleteImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteImmediate",
        "textToLower": "deleteimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteImmediate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Database.DeleteResult> deleteImmediate(List <SObject>)",
      "simplifiedSignature": "deleteImmediate(List)",
      "datatype": {
        "id": "System.database.deleteimmediate.List<Database.DeleteResult>",
        "nodeType": "datatype",
        "name": "List<Database.DeleteResult>"
      },
      "description": "Initiates requests to delete the external data that corresponds to the specified external object records. The requests are executed synchronously and are sent to the external systems that are defined by the external objects' associated external data sources. If the Apex transaction contains pending changes, the synchronous operations can't be completed and throw exceptions.",
      "params": {
        "<SObject>": {
          "id": "System.database.deleteimmediate.<sobject>",
          "type": "var",
          "name": "<SObject>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<SObject>",
            "textToLower": "<sobject>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<SObject>_-1:0"
          },
          "signature": "List <SObject>",
          "datatype": {
            "id": "System.database.deleteimmediate.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "deleteimmediate(sobject)": {
      "id": "System.database.deleteimmediate",
      "nodeType": "method",
      "name": "deleteImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteImmediate",
        "textToLower": "deleteimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteImmediate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult deleteImmediate(SObject sobject)",
      "simplifiedSignature": "deleteImmediate(SObject)",
      "datatype": {
        "id": "System.database.deleteimmediate.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult"
      },
      "description": "Initiates a request to delete the external data that corresponds to the specified external object record. The request is executed synchronously and is sent to the external system that's defined by the external object's associated external data source. If the Apex transaction contains pending changes, the synchronous operation can't be completed and throws an exception.",
      "params": {
        "sobject": {
          "id": "System.database.deleteimmediate.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.deleteimmediate.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    },
    "emptyrecyclebin(id[])": {
      "id": "System.database.emptyrecyclebin",
      "nodeType": "method",
      "name": "emptyRecycleBin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "emptyRecycleBin",
        "textToLower": "emptyrecyclebin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_emptyRecycleBin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.EmptyRecycleBinResult[] emptyRecycleBin(Id[] recordIds)",
      "simplifiedSignature": "emptyRecycleBin(Id[])",
      "datatype": {
        "id": "System.database.emptyrecyclebin.Database.EmptyRecycleBinResult[]",
        "nodeType": "datatype",
        "name": "Database.EmptyRecycleBinResult[]"
      },
      "description": "Permanently deletes the specified records from the Recycle Bin.",
      "params": {
        "recordIds": {
          "id": "System.database.emptyrecyclebin.recordids",
          "type": "var",
          "name": "recordIds",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordIds",
            "textToLower": "recordids",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordIds_-1:0"
          },
          "signature": "Id[] recordIds",
          "datatype": {
            "id": "System.database.emptyrecyclebin.id[]",
            "nodeType": "datatype",
            "name": "Id[]"
          }
        }
      }
    },
    "emptyrecyclebin(sobject)": {
      "id": "System.database.emptyrecyclebin",
      "nodeType": "method",
      "name": "emptyRecycleBin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "emptyRecycleBin",
        "textToLower": "emptyrecyclebin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_emptyRecycleBin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.EmptyRecycleBinResult emptyRecycleBin(sObject obj)",
      "simplifiedSignature": "emptyRecycleBin(sObject)",
      "datatype": {
        "id": "System.database.emptyrecyclebin.Database.EmptyRecycleBinResult",
        "nodeType": "datatype",
        "name": "Database.EmptyRecycleBinResult"
      },
      "description": "Permanently deletes the specified sObject from the Recycle Bin.",
      "params": {
        "obj": {
          "id": "System.database.emptyrecyclebin.obj",
          "type": "var",
          "name": "obj",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "obj",
            "textToLower": "obj",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_obj_-1:0"
          },
          "signature": "sObject obj",
          "datatype": {
            "id": "System.database.emptyrecyclebin.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        }
      }
    },
    "emptyrecyclebin(sobject[])": {
      "id": "System.database.emptyrecyclebin",
      "nodeType": "method",
      "name": "emptyRecycleBin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "emptyRecycleBin",
        "textToLower": "emptyrecyclebin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_emptyRecycleBin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.EmptyRecycleBinResult[] emptyRecycleBin(sObject[] listOfSObjects)",
      "simplifiedSignature": "emptyRecycleBin(sObject[])",
      "datatype": {
        "id": "System.database.emptyrecyclebin.Database.EmptyRecycleBinResult[]",
        "nodeType": "datatype",
        "name": "Database.EmptyRecycleBinResult[]"
      },
      "description": "Permanently deletes the specified sObjects from the Recycle Bin.",
      "params": {
        "listOfSObjects": {
          "id": "System.database.emptyrecyclebin.listofsobjects",
          "type": "var",
          "name": "listOfSObjects",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "listOfSObjects",
            "textToLower": "listofsobjects",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_listOfSObjects_-1:0"
          },
          "signature": "sObject[] listOfSObjects",
          "datatype": {
            "id": "System.database.emptyrecyclebin.sobject[]",
            "nodeType": "datatype",
            "name": "sObject[]"
          }
        }
      }
    },
    "executebatch(object)": {
      "id": "System.database.executebatch",
      "nodeType": "method",
      "name": "executeBatch",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "executeBatch",
        "textToLower": "executebatch",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_executeBatch_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID executeBatch(Object batchClassObject)",
      "simplifiedSignature": "executeBatch(Object)",
      "datatype": {
        "id": "System.database.executebatch.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Submits a batch Apex job for execution corresponding to the specified class.",
      "params": {
        "batchClassObject": {
          "id": "System.database.executebatch.batchclassobject",
          "type": "var",
          "name": "batchClassObject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "batchClassObject",
            "textToLower": "batchclassobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_batchClassObject_-1:0"
          },
          "signature": "Object batchClassObject",
          "datatype": {
            "id": "System.database.executebatch.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "executebatch(object,integer)": {
      "id": "System.database.executebatch",
      "nodeType": "method",
      "name": "executeBatch",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "executeBatch",
        "textToLower": "executebatch",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_executeBatch_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID executeBatch(Object batchClassObject, Integer scope)",
      "simplifiedSignature": "executeBatch(Object,Integer)",
      "datatype": {
        "id": "System.database.executebatch.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Submits a batch Apex job for execution using the specified class and scope.",
      "params": {
        "batchClassObject": {
          "id": "System.database.executebatch.batchclassobject",
          "type": "var",
          "name": "batchClassObject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "batchClassObject",
            "textToLower": "batchclassobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_batchClassObject_-1:0"
          },
          "signature": "Object batchClassObject",
          "datatype": {
            "id": "System.database.executebatch.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        },
        "scope": {
          "id": "System.database.executebatch.scope",
          "type": "var",
          "name": "scope",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scope",
            "textToLower": "scope",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_scope_-1:0"
          },
          "signature": "Integer scope",
          "datatype": {
            "id": "System.database.executebatch.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getasyncdeleteresult(database.deleteresult)": {
      "id": "System.database.getasyncdeleteresult",
      "nodeType": "method",
      "name": "getAsyncDeleteResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncDeleteResult",
        "textToLower": "getasyncdeleteresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncDeleteResult_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult getAsyncDeleteResult(Database.DeleteResult deleteResult)",
      "simplifiedSignature": "getAsyncDeleteResult(Database.DeleteResult)",
      "datatype": {
        "id": "System.database.getasyncdeleteresult.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult"
      },
      "description": "Retrieves the status of an asynchronous delete operation that’s identified by a Database.DeleteResult object.",
      "params": {
        "deleteResult": {
          "id": "System.database.getasyncdeleteresult.deleteresult",
          "type": "var",
          "name": "deleteResult",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "deleteResult",
            "textToLower": "deleteresult",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_deleteResult_-1:0"
          },
          "signature": "Database.DeleteResult deleteResult",
          "datatype": {
            "id": "System.database.getasyncdeleteresult.database.deleteresult",
            "nodeType": "datatype",
            "name": "Database.DeleteResult"
          }
        }
      }
    },
    "getasyncdeleteresult(string)": {
      "id": "System.database.getasyncdeleteresult",
      "nodeType": "method",
      "name": "getAsyncDeleteResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncDeleteResult",
        "textToLower": "getasyncdeleteresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncDeleteResult_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.DeleteResult getAsyncDeleteResult(String asyncLocator)",
      "simplifiedSignature": "getAsyncDeleteResult(String)",
      "datatype": {
        "id": "System.database.getasyncdeleteresult.Database.DeleteResult",
        "nodeType": "datatype",
        "name": "Database.DeleteResult"
      },
      "description": "Retrieves the result of an asynchronous delete operation based on the result’s unique identifier.",
      "params": {
        "asyncLocator": {
          "id": "System.database.getasyncdeleteresult.asynclocator",
          "type": "var",
          "name": "asyncLocator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "asyncLocator",
            "textToLower": "asynclocator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_asyncLocator_-1:0"
          },
          "signature": "String asyncLocator",
          "datatype": {
            "id": "System.database.getasyncdeleteresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getasynclocator(object)": {
      "id": "System.database.getasynclocator",
      "nodeType": "method",
      "name": "getAsyncLocator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncLocator",
        "textToLower": "getasynclocator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncLocator_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getAsyncLocator(Object result)",
      "simplifiedSignature": "getAsyncLocator(Object)",
      "datatype": {
        "id": "System.database.getasynclocator.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the asyncLocator associated with the result of a specified asynchronous insert, update, or delete operation.",
      "params": {
        "result": {
          "id": "System.database.getasynclocator.result",
          "type": "var",
          "name": "result",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "result",
            "textToLower": "result",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_result_-1:0"
          },
          "signature": "Object result",
          "datatype": {
            "id": "System.database.getasynclocator.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "getasyncsaveresult(database.saveresult)": {
      "id": "System.database.getasyncsaveresult",
      "nodeType": "method",
      "name": "getAsyncSaveResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncSaveResult",
        "textToLower": "getasyncsaveresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncSaveResult_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void getAsyncSaveResult(Database.SaveResult saveResult)",
      "simplifiedSignature": "getAsyncSaveResult(Database.SaveResult)",
      "datatype": {
        "id": "System.database.getasyncsaveresult.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Returns the status of an asynchronous insert or update operation that’s identified by a Database.SaveResult object.",
      "params": {
        "saveResult": {
          "id": "System.database.getasyncsaveresult.saveresult",
          "type": "var",
          "name": "saveResult",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "saveResult",
            "textToLower": "saveresult",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_saveResult_-1:0"
          },
          "signature": "Database.SaveResult saveResult",
          "datatype": {
            "id": "System.database.getasyncsaveresult.database.saveresult",
            "nodeType": "datatype",
            "name": "Database.SaveResult"
          }
        }
      }
    },
    "getasyncsaveresult(string)": {
      "id": "System.database.getasyncsaveresult",
      "nodeType": "method",
      "name": "getAsyncSaveResult",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAsyncSaveResult",
        "textToLower": "getasyncsaveresult",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAsyncSaveResult_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void getAsyncSaveResult(String asyncLocator)",
      "simplifiedSignature": "getAsyncSaveResult(String)",
      "datatype": {
        "id": "System.database.getasyncsaveresult.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Returns the status of an asynchronous insert or update operation based on the unique identifier associated with each modification.",
      "params": {
        "asyncLocator": {
          "id": "System.database.getasyncsaveresult.asynclocator",
          "type": "var",
          "name": "asyncLocator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "asyncLocator",
            "textToLower": "asynclocator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_asyncLocator_-1:0"
          },
          "signature": "String asyncLocator",
          "datatype": {
            "id": "System.database.getasyncsaveresult.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getdeleted(string,datetime,datetime)": {
      "id": "System.database.getdeleted",
      "nodeType": "method",
      "name": "getDeleted",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDeleted",
        "textToLower": "getdeleted",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDeleted_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.GetDeletedResult getDeleted(String sObjectType, Datetime startDate, Datetime endDate)",
      "simplifiedSignature": "getDeleted(String,Datetime,Datetime)",
      "datatype": {
        "id": "System.database.getdeleted.Database.GetDeletedResult",
        "nodeType": "datatype",
        "name": "Database.GetDeletedResult"
      },
      "description": "Returns the list of individual records that have been deleted for an sObject type within the specified start and end dates and times and that are still in the Recycle Bin.",
      "params": {
        "sObjectType": {
          "id": "System.database.getdeleted.sobjecttype",
          "type": "var",
          "name": "sObjectType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sObjectType",
            "textToLower": "sobjecttype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sObjectType_-1:0"
          },
          "signature": "String sObjectType",
          "datatype": {
            "id": "System.database.getdeleted.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "startDate": {
          "id": "System.database.getdeleted.startdate",
          "type": "var",
          "name": "startDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startDate",
            "textToLower": "startdate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startDate_-1:0"
          },
          "signature": "Datetime startDate",
          "datatype": {
            "id": "System.database.getdeleted.datetime",
            "nodeType": "datatype",
            "name": "Datetime"
          }
        },
        "endDate": {
          "id": "System.database.getdeleted.enddate",
          "type": "var",
          "name": "endDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endDate",
            "textToLower": "enddate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endDate_-1:0"
          },
          "signature": "Datetime endDate",
          "datatype": {
            "id": "System.database.getdeleted.datetime",
            "nodeType": "datatype",
            "name": "Datetime"
          }
        }
      }
    },
    "getquerylocator(sobject[])": {
      "id": "System.database.getquerylocator",
      "nodeType": "method",
      "name": "getQueryLocator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getQueryLocator",
        "textToLower": "getquerylocator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getQueryLocator_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.QueryLocator getQueryLocator(SObject[] listOfQueries)",
      "simplifiedSignature": "getQueryLocator(SObject[])",
      "datatype": {
        "id": "System.database.getquerylocator.Database.QueryLocator",
        "nodeType": "datatype",
        "name": "Database.QueryLocator"
      },
      "description": "Creates a QueryLocator object used in batch Apex or Visualforce.",
      "params": {
        "listOfQueries": {
          "id": "System.database.getquerylocator.listofqueries",
          "type": "var",
          "name": "listOfQueries",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "listOfQueries",
            "textToLower": "listofqueries",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_listOfQueries_-1:0"
          },
          "signature": "SObject[] listOfQueries",
          "datatype": {
            "id": "System.database.getquerylocator.sobject[]",
            "nodeType": "datatype",
            "name": "SObject[]"
          }
        }
      }
    },
    "getquerylocator(string)": {
      "id": "System.database.getquerylocator",
      "nodeType": "method",
      "name": "getQueryLocator",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getQueryLocator",
        "textToLower": "getquerylocator",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getQueryLocator_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.QueryLocator getQueryLocator(String query)",
      "simplifiedSignature": "getQueryLocator(String)",
      "datatype": {
        "id": "System.database.getquerylocator.Database.QueryLocator",
        "nodeType": "datatype",
        "name": "Database.QueryLocator"
      },
      "description": "Creates a QueryLocator object used in batch Apex or Visualforce.",
      "params": {
        "query": {
          "id": "System.database.getquerylocator.query",
          "type": "var",
          "name": "query",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "query",
            "textToLower": "query",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_query_-1:0"
          },
          "signature": "String query",
          "datatype": {
            "id": "System.database.getquerylocator.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getupdated(string,datetime,datetime)": {
      "id": "System.database.getupdated",
      "nodeType": "method",
      "name": "getUpdated",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUpdated",
        "textToLower": "getupdated",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUpdated_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.GetUpdatedResult getUpdated(String sobjectType, Datetime startDate, Datetime endDate)",
      "simplifiedSignature": "getUpdated(String,Datetime,Datetime)",
      "datatype": {
        "id": "System.database.getupdated.Database.GetUpdatedResult",
        "nodeType": "datatype",
        "name": "Database.GetUpdatedResult"
      },
      "description": "Returns the list of individual records that have been updated for an sObject type within the specified start and end dates and times.",
      "params": {
        "sobjectType": {
          "id": "System.database.getupdated.sobjecttype",
          "type": "var",
          "name": "sobjectType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobjectType",
            "textToLower": "sobjecttype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobjectType_-1:0"
          },
          "signature": "String sobjectType",
          "datatype": {
            "id": "System.database.getupdated.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "startDate": {
          "id": "System.database.getupdated.startdate",
          "type": "var",
          "name": "startDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startDate",
            "textToLower": "startdate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startDate_-1:0"
          },
          "signature": "Datetime startDate",
          "datatype": {
            "id": "System.database.getupdated.datetime",
            "nodeType": "datatype",
            "name": "Datetime"
          }
        },
        "endDate": {
          "id": "System.database.getupdated.enddate",
          "type": "var",
          "name": "endDate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endDate",
            "textToLower": "enddate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endDate_-1:0"
          },
          "signature": "Datetime endDate",
          "datatype": {
            "id": "System.database.getupdated.datetime",
            "nodeType": "datatype",
            "name": "Datetime"
          }
        }
      }
    },
    "insert(sobject,boolean)": {
      "id": "System.database.insert",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult insert(sObject recordToInsert, Boolean allOrNone)",
      "simplifiedSignature": "insert(sObject,Boolean)",
      "datatype": {
        "id": "System.database.insert.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Adds an sObject, such as an individual account or contact, to your organization's data.",
      "params": {
        "recordToInsert": {
          "id": "System.database.insert.recordtoinsert",
          "type": "var",
          "name": "recordToInsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToInsert",
            "textToLower": "recordtoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordToInsert_-1:0"
          },
          "signature": "sObject recordToInsert",
          "datatype": {
            "id": "System.database.insert.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "allOrNone": {
          "id": "System.database.insert.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.insert.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "insert(sobject[],boolean)": {
      "id": "System.database.insert",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult[] insert(sObject[] recordsToInsert, Boolean allOrNone)",
      "simplifiedSignature": "insert(sObject[],Boolean)",
      "datatype": {
        "id": "System.database.insert.Database.SaveResult[]",
        "nodeType": "datatype",
        "name": "Database.SaveResult[]"
      },
      "description": "Adds one or more sObjects, such as individual accounts or contacts, to your organization’s data.",
      "params": {
        "recordsToInsert": {
          "id": "System.database.insert.recordstoinsert",
          "type": "var",
          "name": "recordsToInsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToInsert",
            "textToLower": "recordstoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordsToInsert_-1:0"
          },
          "signature": "sObject[] recordsToInsert",
          "datatype": {
            "id": "System.database.insert.sobject[]",
            "nodeType": "datatype",
            "name": "sObject[]"
          }
        },
        "allOrNone": {
          "id": "System.database.insert.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.insert.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "insert(sobject,database.dmloptions)": {
      "id": "System.database.insert",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult insert(sObject recordToInsert, Database.DMLOptions dmlOptions)",
      "simplifiedSignature": "insert(sObject,Database.DMLOptions)",
      "datatype": {
        "id": "System.database.insert.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Adds an sObject, such as an individual account or contact, to your organization's data.",
      "params": {
        "recordToInsert": {
          "id": "System.database.insert.recordtoinsert",
          "type": "var",
          "name": "recordToInsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToInsert",
            "textToLower": "recordtoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordToInsert_-1:0"
          },
          "signature": "sObject recordToInsert",
          "datatype": {
            "id": "System.database.insert.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "dmlOptions": {
          "id": "System.database.insert.dmloptions",
          "type": "var",
          "name": "dmlOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dmlOptions_-1:0"
          },
          "signature": "Database.DMLOptions dmlOptions",
          "datatype": {
            "id": "System.database.insert.database.dmloptions",
            "nodeType": "datatype",
            "name": "Database.DMLOptions"
          }
        }
      }
    },
    "insert(sobject[],database.dmloptions)": {
      "id": "System.database.insert",
      "nodeType": "method",
      "name": "insert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insert",
        "textToLower": "insert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insert_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult[] insert(sObject[] recordsToInsert, Database.DMLOptions dmlOptions)",
      "simplifiedSignature": "insert(sObject[],Database.DMLOptions)",
      "datatype": {
        "id": "System.database.insert.Database.SaveResult[]",
        "nodeType": "datatype",
        "name": "Database.SaveResult[]"
      },
      "description": "Adds one or more sObjects, such as individual accounts or contacts, to your organization's data.",
      "params": {
        "recordsToInsert": {
          "id": "System.database.insert.recordstoinsert",
          "type": "var",
          "name": "recordsToInsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToInsert",
            "textToLower": "recordstoinsert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordsToInsert_-1:0"
          },
          "signature": "sObject[] recordsToInsert",
          "datatype": {
            "id": "System.database.insert.sobject[]",
            "nodeType": "datatype",
            "name": "sObject[]"
          }
        },
        "dmlOptions": {
          "id": "System.database.insert.dmloptions",
          "type": "var",
          "name": "dmlOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dmlOptions_-1:0"
          },
          "signature": "Database.DMLOptions dmlOptions",
          "datatype": {
            "id": "System.database.insert.database.dmloptions",
            "nodeType": "datatype",
            "name": "Database.DMLOptions"
          }
        }
      }
    },
    "insertasync(list)": {
      "id": "System.database.insertasync",
      "nodeType": "method",
      "name": "insertAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertAsync",
        "textToLower": "insertasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Database.SaveResult> insertAsync(List <SObject>)",
      "simplifiedSignature": "insertAsync(List)",
      "datatype": {
        "id": "System.database.insertasync.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>"
      },
      "description": "Initiates requests to add external object data to the relevant external systems. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources.",
      "params": {
        "<SObject>": {
          "id": "System.database.insertasync.<sobject>",
          "type": "var",
          "name": "<SObject>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<SObject>",
            "textToLower": "<sobject>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<SObject>_-1:0"
          },
          "signature": "List <SObject>",
          "datatype": {
            "id": "System.database.insertasync.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "insertasync(sobject,datasource.asyncsavecallback)": {
      "id": "System.database.insertasync",
      "nodeType": "method",
      "name": "insertAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertAsync",
        "textToLower": "insertasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult insertAsync(SObject sobject, DataSource.AsyncSaveCallback callback)",
      "simplifiedSignature": "insertAsync(SObject,DataSource.AsyncSaveCallback)",
      "datatype": {
        "id": "System.database.insertasync.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Initiates a request to add external object data to the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source. Allows referencing a callback class whose processSave method is called after the remote operation is completed.",
      "params": {
        "sobject": {
          "id": "System.database.insertasync.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.insertasync.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "callback": {
          "id": "System.database.insertasync.callback",
          "type": "var",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_callback_-1:0"
          },
          "signature": "DataSource.AsyncSaveCallback callback",
          "datatype": {
            "id": "System.database.insertasync.datasource.asyncsavecallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncSaveCallback"
          }
        }
      }
    },
    "insertasync(sobject)": {
      "id": "System.database.insertasync",
      "nodeType": "method",
      "name": "insertAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertAsync",
        "textToLower": "insertasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult insertAsync(SObject sobject)",
      "simplifiedSignature": "insertAsync(SObject)",
      "datatype": {
        "id": "System.database.insertasync.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Initiates a request to add external object data to the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source.",
      "params": {
        "sobject": {
          "id": "System.database.insertasync.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.insertasync.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    },
    "insertimmediate(list)": {
      "id": "System.database.insertimmediate",
      "nodeType": "method",
      "name": "insertImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertImmediate",
        "textToLower": "insertimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertImmediate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Database.SaveResult> insertImmediate(List <SObject>)",
      "simplifiedSignature": "insertImmediate(List)",
      "datatype": {
        "id": "System.database.insertimmediate.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>"
      },
      "description": "Initiates requests to add external object data to the relevant external systems. The requests are executed synchronously and are sent to the external systems that are defined by the external objects' associated external data sources. If the Apex transaction contains pending changes, the synchronous operations can't be completed and throw exceptions.",
      "params": {
        "<SObject>": {
          "id": "System.database.insertimmediate.<sobject>",
          "type": "var",
          "name": "<SObject>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<SObject>",
            "textToLower": "<sobject>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<SObject>_-1:0"
          },
          "signature": "List <SObject>",
          "datatype": {
            "id": "System.database.insertimmediate.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "insertimmediate(sobject)": {
      "id": "System.database.insertimmediate",
      "nodeType": "method",
      "name": "insertImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "insertImmediate",
        "textToLower": "insertimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_insertImmediate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult insertImmediate(SObject sobject)",
      "simplifiedSignature": "insertImmediate(SObject)",
      "datatype": {
        "id": "System.database.insertimmediate.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Initiates a request to add external object data to the relevant external system. The request is executed synchronously and is sent to the external system that's defined by the external object's associated external data source. If the Apex transaction contains pending changes, the synchronous operation can't be completed and throws an exception.",
      "params": {
        "sobject": {
          "id": "System.database.insertimmediate.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.insertimmediate.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    },
    "merge(sobject,id)": {
      "id": "System.database.merge",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, Id duplicateId)",
      "simplifiedSignature": "merge(sObject,Id)",
      "datatype": {
        "id": "System.database.merge.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate record into the master sObject record of the same type, deleting the duplicate, and reparenting any related records. Merges only accounts, contacts, or leads.",
      "params": {
        "masterRecord": {
          "id": "System.database.merge.masterrecord",
          "type": "var",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_masterRecord_-1:0"
          },
          "signature": "sObject masterRecord",
          "datatype": {
            "id": "System.database.merge.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "duplicateId": {
          "id": "System.database.merge.duplicateid",
          "type": "var",
          "name": "duplicateId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateId",
            "textToLower": "duplicateid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_duplicateId_-1:0"
          },
          "signature": "Id duplicateId",
          "datatype": {
            "id": "System.database.merge.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        }
      }
    },
    "merge(sobject,sobject)": {
      "id": "System.database.merge",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, sObject duplicateRecord)",
      "simplifiedSignature": "merge(sObject,sObject)",
      "datatype": {
        "id": "System.database.merge.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate sObject record into the master sObject of the same type, deleting the duplicate, and reparenting any related records.",
      "params": {
        "masterRecord": {
          "id": "System.database.merge.masterrecord",
          "type": "var",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_masterRecord_-1:0"
          },
          "signature": "sObject masterRecord",
          "datatype": {
            "id": "System.database.merge.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "duplicateRecord": {
          "id": "System.database.merge.duplicaterecord",
          "type": "var",
          "name": "duplicateRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateRecord",
            "textToLower": "duplicaterecord",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_duplicateRecord_-1:0"
          },
          "signature": "sObject duplicateRecord",
          "datatype": {
            "id": "System.database.merge.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        }
      }
    },
    "merge(sobject,list)": {
      "id": "System.database.merge",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Database.MergeResult> merge(sObject masterRecord, List <SObject>)",
      "simplifiedSignature": "merge(sObject,List)",
      "datatype": {
        "id": "System.database.merge.List<Database.MergeResult>",
        "nodeType": "datatype",
        "name": "List<Database.MergeResult>"
      },
      "description": "Merges up to two records of the same object type into the master sObject record, optionally returning errors, if any, deleting the duplicates, and reparenting any related records.",
      "params": {
        "masterRecord": {
          "id": "System.database.merge.masterrecord",
          "type": "var",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_masterRecord_-1:0"
          },
          "signature": "sObject masterRecord",
          "datatype": {
            "id": "System.database.merge.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "<SObject>": {
          "id": "System.database.merge.<sobject>",
          "type": "var",
          "name": "<SObject>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<SObject>",
            "textToLower": "<sobject>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<SObject>_-1:0"
          },
          "signature": "List <SObject>",
          "datatype": {
            "id": "System.database.merge.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "merge(sobject,id,boolean)": {
      "id": "System.database.merge",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, Id duplicateId, Boolean allOrNone)",
      "simplifiedSignature": "merge(sObject,Id,Boolean)",
      "datatype": {
        "id": "System.database.merge.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate record into the master sObject record of the same type, optionally returning errors, if any, deleting the duplicate, and reparenting any related records. Merges only accounts, contacts, or leads.",
      "params": {
        "masterRecord": {
          "id": "System.database.merge.masterrecord",
          "type": "var",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_masterRecord_-1:0"
          },
          "signature": "sObject masterRecord",
          "datatype": {
            "id": "System.database.merge.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "duplicateId": {
          "id": "System.database.merge.duplicateid",
          "type": "var",
          "name": "duplicateId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateId",
            "textToLower": "duplicateid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_duplicateId_-1:0"
          },
          "signature": "Id duplicateId",
          "datatype": {
            "id": "System.database.merge.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "allOrNone": {
          "id": "System.database.merge.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.merge.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "merge(sobject,sobject,boolean)": {
      "id": "System.database.merge",
      "nodeType": "method",
      "name": "merge",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "merge",
        "textToLower": "merge",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_merge_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.MergeResult merge(sObject masterRecord, sObject duplicateRecord, Boolean allOrNone)",
      "simplifiedSignature": "merge(sObject,sObject,Boolean)",
      "datatype": {
        "id": "System.database.merge.Database.MergeResult",
        "nodeType": "datatype",
        "name": "Database.MergeResult"
      },
      "description": "Merges the specified duplicate sObject record into the master sObject of the same type, optionally returning errors, if any, deleting the duplicate, and reparenting any related records.",
      "params": {
        "masterRecord": {
          "id": "System.database.merge.masterrecord",
          "type": "var",
          "name": "masterRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "masterRecord",
            "textToLower": "masterrecord",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_masterRecord_-1:0"
          },
          "signature": "sObject masterRecord",
          "datatype": {
            "id": "System.database.merge.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "duplicateRecord": {
          "id": "System.database.merge.duplicaterecord",
          "type": "var",
          "name": "duplicateRecord",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "duplicateRecord",
            "textToLower": "duplicaterecord",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_duplicateRecord_-1:0"
          },
          "signature": "sObject duplicateRecord",
          "datatype": {
            "id": "System.database.merge.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "allOrNone": {
          "id": "System.database.merge.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.merge.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "query(string)": {
      "id": "System.database.query",
      "nodeType": "method",
      "name": "query",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "query",
        "textToLower": "query",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_query_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static sObject[] query(String queryString)",
      "simplifiedSignature": "query(String)",
      "datatype": {
        "id": "System.database.query.sObject[]",
        "nodeType": "datatype",
        "name": "sObject[]"
      },
      "description": "Creates a dynamic SOQL query at runtime.",
      "params": {
        "queryString": {
          "id": "System.database.query.querystring",
          "type": "var",
          "name": "queryString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "queryString",
            "textToLower": "querystring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_queryString_-1:0"
          },
          "signature": "String queryString",
          "datatype": {
            "id": "System.database.query.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "rollback(system.savepoint)": {
      "id": "System.database.rollback",
      "nodeType": "method",
      "name": "rollback",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rollback",
        "textToLower": "rollback",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rollback_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void rollback(System.Savepoint databaseSavepoint)",
      "simplifiedSignature": "rollback(System.Savepoint)",
      "datatype": {
        "id": "System.database.rollback.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Restores the database to the state specified by the savepoint variable. Any emails submitted since the last savepoint are also rolled back and not sent.",
      "params": {
        "databaseSavepoint": {
          "id": "System.database.rollback.databasesavepoint",
          "type": "var",
          "name": "databaseSavepoint",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "databaseSavepoint",
            "textToLower": "databasesavepoint",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_databaseSavepoint_-1:0"
          },
          "signature": "System.Savepoint databaseSavepoint",
          "datatype": {
            "id": "System.database.rollback.system.savepoint",
            "nodeType": "datatype",
            "name": "System.Savepoint"
          }
        }
      }
    },
    "setsavepoint()": {
      "id": "System.database.setsavepoint",
      "nodeType": "method",
      "name": "setSavepoint",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setSavepoint",
        "textToLower": "setsavepoint",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setSavepoint_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static System.Savepoint setSavepoint()",
      "simplifiedSignature": "setSavepoint()",
      "datatype": {
        "id": "System.database.setsavepoint.System.Savepoint",
        "nodeType": "datatype",
        "name": "System.Savepoint"
      },
      "description": "Returns a savepoint variable that can be stored as a local variable, then used with the rollback method to restore the database to that point.",
      "params": {}
    },
    "undelete(sobject,boolean)": {
      "id": "System.database.undelete",
      "nodeType": "method",
      "name": "undelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "undelete",
        "textToLower": "undelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_undelete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.UndeleteResult undelete(sObject recordToUndelete, Boolean allOrNone)",
      "simplifiedSignature": "undelete(sObject,Boolean)",
      "datatype": {
        "id": "System.database.undelete.Database.UndeleteResult",
        "nodeType": "datatype",
        "name": "Database.UndeleteResult"
      },
      "description": "Restores an existing sObject record, such as an individual account or contact, from your organization's Recycle Bin.",
      "params": {
        "recordToUndelete": {
          "id": "System.database.undelete.recordtoundelete",
          "type": "var",
          "name": "recordToUndelete",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUndelete",
            "textToLower": "recordtoundelete",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordToUndelete_-1:0"
          },
          "signature": "sObject recordToUndelete",
          "datatype": {
            "id": "System.database.undelete.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "allOrNone": {
          "id": "System.database.undelete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.undelete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "undelete(sobject[],boolean)": {
      "id": "System.database.undelete",
      "nodeType": "method",
      "name": "undelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "undelete",
        "textToLower": "undelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_undelete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.UndeleteResult[] undelete(sObject[] recordsToUndelete, Boolean allOrNone)",
      "simplifiedSignature": "undelete(sObject[],Boolean)",
      "datatype": {
        "id": "System.database.undelete.Database.UndeleteResult[]",
        "nodeType": "datatype",
        "name": "Database.UndeleteResult[]"
      },
      "description": "Restores one or more existing sObject records, such as individual accounts or contacts, from your organization’s Recycle Bin.",
      "params": {
        "recordsToUndelete": {
          "id": "System.database.undelete.recordstoundelete",
          "type": "var",
          "name": "recordsToUndelete",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToUndelete",
            "textToLower": "recordstoundelete",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordsToUndelete_-1:0"
          },
          "signature": "sObject[] recordsToUndelete",
          "datatype": {
            "id": "System.database.undelete.sobject[]",
            "nodeType": "datatype",
            "name": "sObject[]"
          }
        },
        "allOrNone": {
          "id": "System.database.undelete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.undelete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "undelete(id,boolean)": {
      "id": "System.database.undelete",
      "nodeType": "method",
      "name": "undelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "undelete",
        "textToLower": "undelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_undelete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.UndeleteResult undelete(ID recordID, Boolean allOrNone)",
      "simplifiedSignature": "undelete(ID,Boolean)",
      "datatype": {
        "id": "System.database.undelete.Database.UndeleteResult",
        "nodeType": "datatype",
        "name": "Database.UndeleteResult"
      },
      "description": "Restores an existing sObject record, such as an individual account or contact, from your organization's Recycle Bin.",
      "params": {
        "recordID": {
          "id": "System.database.undelete.recordid",
          "type": "var",
          "name": "recordID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordID",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordID_-1:0"
          },
          "signature": "ID recordID",
          "datatype": {
            "id": "System.database.undelete.id",
            "nodeType": "datatype",
            "name": "ID"
          }
        },
        "allOrNone": {
          "id": "System.database.undelete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.undelete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "undelete(id[],boolean)": {
      "id": "System.database.undelete",
      "nodeType": "method",
      "name": "undelete",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "undelete",
        "textToLower": "undelete",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_undelete_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.UndeleteResult[] undelete(ID[] recordIDs, Boolean allOrNone)",
      "simplifiedSignature": "undelete(ID[],Boolean)",
      "datatype": {
        "id": "System.database.undelete.Database.UndeleteResult[]",
        "nodeType": "datatype",
        "name": "Database.UndeleteResult[]"
      },
      "description": "Restores one or more existing sObject records, such as individual accounts or contacts, from your organization’s Recycle Bin.",
      "params": {
        "recordIDs": {
          "id": "System.database.undelete.recordids",
          "type": "var",
          "name": "recordIDs",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordIDs",
            "textToLower": "recordids",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordIDs_-1:0"
          },
          "signature": "ID[] recordIDs",
          "datatype": {
            "id": "System.database.undelete.id[]",
            "nodeType": "datatype",
            "name": "ID[]"
          }
        },
        "allOrNone": {
          "id": "System.database.undelete.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.undelete.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "update(sobject,boolean)": {
      "id": "System.database.update",
      "nodeType": "method",
      "name": "update",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "update",
        "textToLower": "update",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_update_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult update(sObject recordToUpdate, Boolean allOrNone)",
      "simplifiedSignature": "update(sObject,Boolean)",
      "datatype": {
        "id": "System.database.update.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Modifies an existing sObject record, such as an individual account or contact, in your organization's data.",
      "params": {
        "recordToUpdate": {
          "id": "System.database.update.recordtoupdate",
          "type": "var",
          "name": "recordToUpdate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpdate",
            "textToLower": "recordtoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordToUpdate_-1:0"
          },
          "signature": "sObject recordToUpdate",
          "datatype": {
            "id": "System.database.update.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "allOrNone": {
          "id": "System.database.update.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.update.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "update(sobject[],boolean)": {
      "id": "System.database.update",
      "nodeType": "method",
      "name": "update",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "update",
        "textToLower": "update",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_update_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult[] update(sObject[] recordsToUpdate, Boolean allOrNone)",
      "simplifiedSignature": "update(sObject[],Boolean)",
      "datatype": {
        "id": "System.database.update.Database.SaveResult[]",
        "nodeType": "datatype",
        "name": "Database.SaveResult[]"
      },
      "description": "Modifies one or more existing sObject records, such as individual accounts or contactsinvoice statements, in your organization’s data.",
      "params": {
        "recordsToUpdate": {
          "id": "System.database.update.recordstoupdate",
          "type": "var",
          "name": "recordsToUpdate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToUpdate",
            "textToLower": "recordstoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordsToUpdate_-1:0"
          },
          "signature": "sObject[] recordsToUpdate",
          "datatype": {
            "id": "System.database.update.sobject[]",
            "nodeType": "datatype",
            "name": "sObject[]"
          }
        },
        "allOrNone": {
          "id": "System.database.update.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.update.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "update(sobject,database.dmloptions)": {
      "id": "System.database.update",
      "nodeType": "method",
      "name": "update",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "update",
        "textToLower": "update",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_update_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult update(sObject recordToUpdate, Database.DmlOptions dmlOptions)",
      "simplifiedSignature": "update(sObject,Database.DmlOptions)",
      "datatype": {
        "id": "System.database.update.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Modifies an existing sObject record, such as an individual account or contact, in your organization's data.",
      "params": {
        "recordToUpdate": {
          "id": "System.database.update.recordtoupdate",
          "type": "var",
          "name": "recordToUpdate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpdate",
            "textToLower": "recordtoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordToUpdate_-1:0"
          },
          "signature": "sObject recordToUpdate",
          "datatype": {
            "id": "System.database.update.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "dmlOptions": {
          "id": "System.database.update.dmloptions",
          "type": "var",
          "name": "dmlOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dmlOptions_-1:0"
          },
          "signature": "Database.DmlOptions dmlOptions",
          "datatype": {
            "id": "System.database.update.database.dmloptions",
            "nodeType": "datatype",
            "name": "Database.DmlOptions"
          }
        }
      }
    },
    "update(sobject[],database.dmloptions)": {
      "id": "System.database.update",
      "nodeType": "method",
      "name": "update",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "update",
        "textToLower": "update",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_update_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult[] update(sObject[] recordsToUpdate, Database.DMLOptions dmlOptions)",
      "simplifiedSignature": "update(sObject[],Database.DMLOptions)",
      "datatype": {
        "id": "System.database.update.Database.SaveResult[]",
        "nodeType": "datatype",
        "name": "Database.SaveResult[]"
      },
      "description": "Modifies one or more existing sObject records, such as individual accounts or contactsinvoice statements, in your organization’s data.",
      "params": {
        "recordsToUpdate": {
          "id": "System.database.update.recordstoupdate",
          "type": "var",
          "name": "recordsToUpdate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToUpdate",
            "textToLower": "recordstoupdate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordsToUpdate_-1:0"
          },
          "signature": "sObject[] recordsToUpdate",
          "datatype": {
            "id": "System.database.update.sobject[]",
            "nodeType": "datatype",
            "name": "sObject[]"
          }
        },
        "dmlOptions": {
          "id": "System.database.update.dmloptions",
          "type": "var",
          "name": "dmlOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dmlOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dmlOptions_-1:0"
          },
          "signature": "Database.DMLOptions dmlOptions",
          "datatype": {
            "id": "System.database.update.database.dmloptions",
            "nodeType": "datatype",
            "name": "Database.DMLOptions"
          }
        }
      }
    },
    "upsert(sobject,schema.sobjectfield,boolean)": {
      "id": "System.database.upsert",
      "nodeType": "method",
      "name": "upsert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "upsert",
        "textToLower": "upsert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_upsert_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.UpsertResult upsert(sObject recordToUpsert, Schema.SObjectField externalIDField, Boolean allOrNone)",
      "simplifiedSignature": "upsert(sObject,Schema.SObjectField,Boolean)",
      "datatype": {
        "id": "System.database.upsert.Database.UpsertResult",
        "nodeType": "datatype",
        "name": "Database.UpsertResult"
      },
      "description": "Creates a new sObject record or updates an existing sObject record within a single statement, using a specified field to determine the presence of existing objects, or the ID field if no field is specified.",
      "params": {
        "recordToUpsert": {
          "id": "System.database.upsert.recordtoupsert",
          "type": "var",
          "name": "recordToUpsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordToUpsert",
            "textToLower": "recordtoupsert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordToUpsert_-1:0"
          },
          "signature": "sObject recordToUpsert",
          "datatype": {
            "id": "System.database.upsert.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "externalIDField": {
          "id": "System.database.upsert.externalidfield",
          "type": "var",
          "name": "externalIDField",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "externalIDField",
            "textToLower": "externalidfield",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_externalIDField_-1:0"
          },
          "signature": "Schema.SObjectField externalIDField",
          "datatype": {
            "id": "System.database.upsert.schema.sobjectfield",
            "nodeType": "datatype",
            "name": "Schema.SObjectField"
          }
        },
        "allOrNone": {
          "id": "System.database.upsert.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.upsert.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "upsert(sobject[],schema.sobjectfield,boolean)": {
      "id": "System.database.upsert",
      "nodeType": "method",
      "name": "upsert",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "upsert",
        "textToLower": "upsert",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_upsert_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.UpsertResult[] upsert(sObject[] recordsToUpsert, Schema.SObjectField externalIdField, Boolean allOrNone)",
      "simplifiedSignature": "upsert(sObject[],Schema.SObjectField,Boolean)",
      "datatype": {
        "id": "System.database.upsert.Database.UpsertResult[]",
        "nodeType": "datatype",
        "name": "Database.UpsertResult[]"
      },
      "description": "Creates new sObject records or updates existing sObject records within a single statement, using a specified field to determine the presence of existing objects, or the ID field if no field is specified.",
      "params": {
        "recordsToUpsert": {
          "id": "System.database.upsert.recordstoupsert",
          "type": "var",
          "name": "recordsToUpsert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordsToUpsert",
            "textToLower": "recordstoupsert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordsToUpsert_-1:0"
          },
          "signature": "sObject[] recordsToUpsert",
          "datatype": {
            "id": "System.database.upsert.sobject[]",
            "nodeType": "datatype",
            "name": "sObject[]"
          }
        },
        "externalIdField": {
          "id": "System.database.upsert.externalidfield",
          "type": "var",
          "name": "externalIdField",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "externalIdField",
            "textToLower": "externalidfield",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_externalIdField_-1:0"
          },
          "signature": "Schema.SObjectField externalIdField",
          "datatype": {
            "id": "System.database.upsert.schema.sobjectfield",
            "nodeType": "datatype",
            "name": "Schema.SObjectField"
          }
        },
        "allOrNone": {
          "id": "System.database.upsert.allornone",
          "type": "var",
          "name": "allOrNone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "allOrNone",
            "textToLower": "allornone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_allOrNone_-1:0"
          },
          "signature": "Boolean allOrNone",
          "datatype": {
            "id": "System.database.upsert.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "updateasync(list)": {
      "id": "System.database.updateasync",
      "nodeType": "method",
      "name": "updateAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateAsync",
        "textToLower": "updateasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Database.SaveResult> updateAsync(List <SObject>)",
      "simplifiedSignature": "updateAsync(List)",
      "datatype": {
        "id": "System.database.updateasync.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>"
      },
      "description": "Initiates requests to update external object data on the relevant external systems. The requests are executed asynchronously, as background operations, and are sent to the external systems that are defined by the external objects' associated external data sources.",
      "params": {
        "<SObject>": {
          "id": "System.database.updateasync.<sobject>",
          "type": "var",
          "name": "<SObject>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<SObject>",
            "textToLower": "<sobject>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<SObject>_-1:0"
          },
          "signature": "List <SObject>",
          "datatype": {
            "id": "System.database.updateasync.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "updateasync(sobject,datasource.asyncsavecallback)": {
      "id": "System.database.updateasync",
      "nodeType": "method",
      "name": "updateAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateAsync",
        "textToLower": "updateasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult updateAsync(SObject sobject, DataSource.AsyncSaveCallback callback)",
      "simplifiedSignature": "updateAsync(SObject,DataSource.AsyncSaveCallback)",
      "datatype": {
        "id": "System.database.updateasync.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Initiates a request to update external object data on the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source. Allows referencing a callback class whose processSave method is called after the remote operation is completed.",
      "params": {
        "sobject": {
          "id": "System.database.updateasync.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.updateasync.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "callback": {
          "id": "System.database.updateasync.callback",
          "type": "var",
          "name": "callback",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "callback",
            "textToLower": "callback",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_callback_-1:0"
          },
          "signature": "DataSource.AsyncSaveCallback callback",
          "datatype": {
            "id": "System.database.updateasync.datasource.asyncsavecallback",
            "nodeType": "datatype",
            "name": "DataSource.AsyncSaveCallback"
          }
        }
      }
    },
    "updateasync(sobject)": {
      "id": "System.database.updateasync",
      "nodeType": "method",
      "name": "updateAsync",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateAsync",
        "textToLower": "updateasync",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateAsync_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult updateAsync(SObject sobject)",
      "simplifiedSignature": "updateAsync(SObject)",
      "datatype": {
        "id": "System.database.updateasync.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Initiates a request to update external object data on the relevant external system. The request is executed asynchronously, as a background operation, and is sent to the external system that's defined by the external object's associated external data source.",
      "params": {
        "sobject": {
          "id": "System.database.updateasync.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.updateasync.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    },
    "updateimmediate(list)": {
      "id": "System.database.updateimmediate",
      "nodeType": "method",
      "name": "updateImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateImmediate",
        "textToLower": "updateimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateImmediate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static List<Database.SaveResult> updateImmediate(List <SObject>)",
      "simplifiedSignature": "updateImmediate(List)",
      "datatype": {
        "id": "System.database.updateimmediate.List<Database.SaveResult>",
        "nodeType": "datatype",
        "name": "List<Database.SaveResult>"
      },
      "description": "Initiates requests to update external object data on the relevant external systems. The requests are executed synchronously and are sent to the external systems that are defined by the external objects' associated external data sources. If the Apex transaction contains pending changes, the synchronous operations can't be completed and throw exceptions.",
      "params": {
        "<SObject>": {
          "id": "System.database.updateimmediate.<sobject>",
          "type": "var",
          "name": "<SObject>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<SObject>",
            "textToLower": "<sobject>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<SObject>_-1:0"
          },
          "signature": "List <SObject>",
          "datatype": {
            "id": "System.database.updateimmediate.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "updateimmediate(sobject)": {
      "id": "System.database.updateimmediate",
      "nodeType": "method",
      "name": "updateImmediate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "updateImmediate",
        "textToLower": "updateimmediate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_updateImmediate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Database.SaveResult updateImmediate(SObject sobject)",
      "simplifiedSignature": "updateImmediate(SObject)",
      "datatype": {
        "id": "System.database.updateimmediate.Database.SaveResult",
        "nodeType": "datatype",
        "name": "Database.SaveResult"
      },
      "description": "Initiates a request to update external object data on the relevant external system. The request is executed synchronously and is sent to the external system that's defined by the external object's associated external data source. If the Apex transaction contains pending changes, the synchronous operation can't be completed and throws an exception.",
      "params": {
        "sobject": {
          "id": "System.database.updateimmediate.sobject",
          "type": "var",
          "name": "sobject",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sobject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sobject_-1:0"
          },
          "signature": "SObject sobject",
          "datatype": {
            "id": "System.database.updateimmediate.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}