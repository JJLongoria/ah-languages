{
  "id": "System.decimal",
  "nodeType": "class",
  "name": "Decimal",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Decimal",
    "textToLower": "decimal",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Decimal_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for the Decimal primitive data type.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_decimal.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "abs()": {
      "id": "System.decimal.abs",
      "nodeType": "method",
      "name": "abs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "abs",
        "textToLower": "abs",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_abs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal abs()",
      "simplifiedSignature": "abs()",
      "datatype": {
        "id": "System.decimal.abs.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the absolute value of the Decimal.",
      "params": {}
    },
    "divide(decimal,integer)": {
      "id": "System.decimal.divide",
      "nodeType": "method",
      "name": "divide",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "divide",
        "textToLower": "divide",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_divide_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal divide(Decimal divisor, Integer scale)",
      "simplifiedSignature": "divide(Decimal,Integer)",
      "datatype": {
        "id": "System.decimal.divide.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Divides this Decimal by the specified divisor, and sets the scale, that is, the number of decimal places, of the result using the specified scale.",
      "params": {
        "divisor": {
          "id": "System.decimal.divide.divisor",
          "type": "var",
          "name": "divisor",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "divisor",
            "textToLower": "divisor",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_divisor_-1:0"
          },
          "signature": "Decimal divisor",
          "datatype": {
            "id": "System.decimal.divide.decimal",
            "nodeType": "datatype",
            "name": "Decimal"
          }
        },
        "scale": {
          "id": "System.decimal.divide.scale",
          "type": "var",
          "name": "scale",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scale",
            "textToLower": "scale",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_scale_-1:0"
          },
          "signature": "Integer scale",
          "datatype": {
            "id": "System.decimal.divide.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "divide(decimal,integer,system.roundingmode)": {
      "id": "System.decimal.divide",
      "nodeType": "method",
      "name": "divide",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "divide",
        "textToLower": "divide",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_divide_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal divide(Decimal divisor, Integer scale, System.RoundingMode roundingMode)",
      "simplifiedSignature": "divide(Decimal,Integer,System.RoundingMode)",
      "datatype": {
        "id": "System.decimal.divide.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Divides this Decimal by the specified divisor, sets the scale, that is, the number of decimal places, of the result using the specified scale, and if necessary, rounds the value using the rounding mode.",
      "params": {
        "divisor": {
          "id": "System.decimal.divide.divisor",
          "type": "var",
          "name": "divisor",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "divisor",
            "textToLower": "divisor",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_divisor_-1:0"
          },
          "signature": "Decimal divisor",
          "datatype": {
            "id": "System.decimal.divide.decimal",
            "nodeType": "datatype",
            "name": "Decimal"
          }
        },
        "scale": {
          "id": "System.decimal.divide.scale",
          "type": "var",
          "name": "scale",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scale",
            "textToLower": "scale",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_scale_-1:0"
          },
          "signature": "Integer scale",
          "datatype": {
            "id": "System.decimal.divide.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        },
        "roundingMode": {
          "id": "System.decimal.divide.roundingmode",
          "type": "var",
          "name": "roundingMode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "roundingMode",
            "textToLower": "roundingmode",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_roundingMode_-1:0"
          },
          "signature": "System.RoundingMode roundingMode",
          "datatype": {
            "id": "System.decimal.divide.system.roundingmode",
            "nodeType": "datatype",
            "name": "System.RoundingMode"
          }
        }
      }
    },
    "doublevalue()": {
      "id": "System.decimal.doublevalue",
      "nodeType": "method",
      "name": "doubleValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "doubleValue",
        "textToLower": "doublevalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_doubleValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Double doubleValue()",
      "simplifiedSignature": "doubleValue()",
      "datatype": {
        "id": "System.decimal.doublevalue.Double",
        "nodeType": "datatype",
        "name": "Double"
      },
      "description": "Returns the Double value of this Decimal.",
      "params": {}
    },
    "format()": {
      "id": "System.decimal.format",
      "nodeType": "method",
      "name": "format",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "format",
        "textToLower": "format",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_format_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String format()",
      "simplifiedSignature": "format()",
      "datatype": {
        "id": "System.decimal.format.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the String value of this Decimal using the locale of the context user.",
      "params": {}
    },
    "intvalue()": {
      "id": "System.decimal.intvalue",
      "nodeType": "method",
      "name": "intValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "intValue",
        "textToLower": "intvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_intValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer intValue()",
      "simplifiedSignature": "intValue()",
      "datatype": {
        "id": "System.decimal.intvalue.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the Integer value of this Decimal.",
      "params": {}
    },
    "longvalue()": {
      "id": "System.decimal.longvalue",
      "nodeType": "method",
      "name": "longValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "longValue",
        "textToLower": "longvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_longValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long longValue()",
      "simplifiedSignature": "longValue()",
      "datatype": {
        "id": "System.decimal.longvalue.Long",
        "nodeType": "datatype",
        "name": "Long"
      },
      "description": "Returns the Long value of this Decimal.",
      "params": {}
    },
    "pow(integer)": {
      "id": "System.decimal.pow",
      "nodeType": "method",
      "name": "pow",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "pow",
        "textToLower": "pow",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_pow_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal pow(Integer exponent)",
      "simplifiedSignature": "pow(Integer)",
      "datatype": {
        "id": "System.decimal.pow.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the value of this decimal raised to the power of the specified exponent.",
      "params": {
        "exponent": {
          "id": "System.decimal.pow.exponent",
          "type": "var",
          "name": "exponent",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exponent",
            "textToLower": "exponent",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exponent_-1:0"
          },
          "signature": "Integer exponent",
          "datatype": {
            "id": "System.decimal.pow.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "precision()": {
      "id": "System.decimal.precision",
      "nodeType": "method",
      "name": "precision",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "precision",
        "textToLower": "precision",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_precision_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer precision()",
      "simplifiedSignature": "precision()",
      "datatype": {
        "id": "System.decimal.precision.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the total number of digits for the Decimal.",
      "params": {}
    },
    "round()": {
      "id": "System.decimal.round",
      "nodeType": "method",
      "name": "round",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "round",
        "textToLower": "round",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_round_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long round()",
      "simplifiedSignature": "round()",
      "datatype": {
        "id": "System.decimal.round.Long",
        "nodeType": "datatype",
        "name": "Long"
      },
      "description": "Returns the rounded approximation of this Decimal. The number  is rounded to zero decimal places using half-even rounding mode, that  is, it rounds towards the “nearest neighbor” unless both neighbors are equidistant, in which case, this mode rounds towards the even neighbor.",
      "params": {}
    },
    "round(system.roundingmode)": {
      "id": "System.decimal.round",
      "nodeType": "method",
      "name": "round",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "round",
        "textToLower": "round",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_round_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long round(System.RoundingMode roundingMode)",
      "simplifiedSignature": "round(System.RoundingMode)",
      "datatype": {
        "id": "System.decimal.round.Long",
        "nodeType": "datatype",
        "name": "Long"
      },
      "description": "Returns the rounded approximation of this Decimal. The number  is rounded to zero decimal places using the rounding mode specified by the rounding mode.",
      "params": {
        "roundingMode": {
          "id": "System.decimal.round.roundingmode",
          "type": "var",
          "name": "roundingMode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "roundingMode",
            "textToLower": "roundingmode",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_roundingMode_-1:0"
          },
          "signature": "System.RoundingMode roundingMode",
          "datatype": {
            "id": "System.decimal.round.system.roundingmode",
            "nodeType": "datatype",
            "name": "System.RoundingMode"
          }
        }
      }
    },
    "scale()": {
      "id": "System.decimal.scale",
      "nodeType": "method",
      "name": "scale",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "scale",
        "textToLower": "scale",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_scale_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer scale()",
      "simplifiedSignature": "scale()",
      "datatype": {
        "id": "System.decimal.scale.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the scale of the Decimal, that is, the number of decimal  places.",
      "params": {}
    },
    "setscale(integer)": {
      "id": "System.decimal.setscale",
      "nodeType": "method",
      "name": "setScale",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setScale",
        "textToLower": "setscale",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setScale_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal setScale(Integer scale)",
      "simplifiedSignature": "setScale(Integer)",
      "datatype": {
        "id": "System.decimal.setscale.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the Decimal scaled to the specified number of decimal places, using half-even rounding, if necessary. Half-even rounding mode rounds toward the “nearest neighbor.” If both neighbors are equidistant, the number is rounded toward the even neighbor.",
      "params": {
        "scale": {
          "id": "System.decimal.setscale.scale",
          "type": "var",
          "name": "scale",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scale",
            "textToLower": "scale",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_scale_-1:0"
          },
          "signature": "Integer scale",
          "datatype": {
            "id": "System.decimal.setscale.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "setscale(integer,system.roundingmode)": {
      "id": "System.decimal.setscale",
      "nodeType": "method",
      "name": "setScale",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setScale",
        "textToLower": "setscale",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setScale_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal setScale(Integer scale, System.RoundingMode roundingMode)",
      "simplifiedSignature": "setScale(Integer,System.RoundingMode)",
      "datatype": {
        "id": "System.decimal.setscale.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the Decimal scaled to the specified number of decimal places, using the specified rounding mode, if necessary.",
      "params": {
        "scale": {
          "id": "System.decimal.setscale.scale",
          "type": "var",
          "name": "scale",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "scale",
            "textToLower": "scale",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_scale_-1:0"
          },
          "signature": "Integer scale",
          "datatype": {
            "id": "System.decimal.setscale.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        },
        "roundingMode": {
          "id": "System.decimal.setscale.roundingmode",
          "type": "var",
          "name": "roundingMode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "roundingMode",
            "textToLower": "roundingmode",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_roundingMode_-1:0"
          },
          "signature": "System.RoundingMode roundingMode",
          "datatype": {
            "id": "System.decimal.setscale.system.roundingmode",
            "nodeType": "datatype",
            "name": "System.RoundingMode"
          }
        }
      }
    },
    "striptrailingzeros()": {
      "id": "System.decimal.striptrailingzeros",
      "nodeType": "method",
      "name": "stripTrailingZeros",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "stripTrailingZeros",
        "textToLower": "striptrailingzeros",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_stripTrailingZeros_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal stripTrailingZeros()",
      "simplifiedSignature": "stripTrailingZeros()",
      "datatype": {
        "id": "System.decimal.striptrailingzeros.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the Decimal with any trailing zeros removed.",
      "params": {}
    },
    "toplainstring()": {
      "id": "System.decimal.toplainstring",
      "nodeType": "method",
      "name": "toPlainString",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toPlainString",
        "textToLower": "toplainstring",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toPlainString_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toPlainString()",
      "simplifiedSignature": "toPlainString()",
      "datatype": {
        "id": "System.decimal.toplainstring.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the String value of this Decimal, without using scientific notation.",
      "params": {}
    },
    "valueof(double)": {
      "id": "System.decimal.valueof",
      "nodeType": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal valueOf(Double doubleToDecimal)",
      "simplifiedSignature": "valueOf(Double)",
      "datatype": {
        "id": "System.decimal.valueof.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns a Decimal that contains the value of the specified Double.",
      "params": {
        "doubleToDecimal": {
          "id": "System.decimal.valueof.doubletodecimal",
          "type": "var",
          "name": "doubleToDecimal",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleToDecimal",
            "textToLower": "doubletodecimal",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleToDecimal_-1:0"
          },
          "signature": "Double doubleToDecimal",
          "datatype": {
            "id": "System.decimal.valueof.double",
            "nodeType": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "valueof(long)": {
      "id": "System.decimal.valueof",
      "nodeType": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal valueOf(Long longToDecimal)",
      "simplifiedSignature": "valueOf(Long)",
      "datatype": {
        "id": "System.decimal.valueof.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns a Decimal that contains the value of the specified Long.",
      "params": {
        "longToDecimal": {
          "id": "System.decimal.valueof.longtodecimal",
          "type": "var",
          "name": "longToDecimal",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longToDecimal",
            "textToLower": "longtodecimal",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longToDecimal_-1:0"
          },
          "signature": "Long longToDecimal",
          "datatype": {
            "id": "System.decimal.valueof.long",
            "nodeType": "datatype",
            "name": "Long"
          }
        }
      }
    },
    "valueof(string)": {
      "id": "System.decimal.valueof",
      "nodeType": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal valueOf(String stringToDecimal)",
      "simplifiedSignature": "valueOf(String)",
      "datatype": {
        "id": "System.decimal.valueof.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns a Decimal that contains the value of the specified String. As in Java, the string is interpreted as representing a signed Decimal.",
      "params": {
        "stringToDecimal": {
          "id": "System.decimal.valueof.stringtodecimal",
          "type": "var",
          "name": "stringToDecimal",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stringToDecimal",
            "textToLower": "stringtodecimal",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_stringToDecimal_-1:0"
          },
          "signature": "String stringToDecimal",
          "datatype": {
            "id": "System.decimal.valueof.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}