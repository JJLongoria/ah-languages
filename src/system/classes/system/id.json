{
  "id": "System.id",
  "nodeType": "class",
  "name": "Id",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Id",
    "textToLower": "id",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Id_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for the ID primitive data type.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_id.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "adderror(string)": {
      "id": "System.id.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(String errorMsg)",
      "simplifiedSignature": "addError(String)",
      "datatype": {
        "id": "System.id.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Marks a trigger record with a custom error message and prevents any DML operation from occurring.",
      "params": {
        "errorMsg": {
          "id": "System.id.adderror.errormsg",
          "type": "var",
          "name": "errorMsg",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_errorMsg_-1:0"
          },
          "signature": "String errorMsg",
          "datatype": {
            "id": "System.id.adderror.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "adderror(string,boolean)": {
      "id": "System.id.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(String errorMsg, Boolean escape)",
      "simplifiedSignature": "addError(String,Boolean)",
      "datatype": {
        "id": "System.id.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Marks a trigger record with a custom error message, specifies if the error message should be escaped, and prevents any DML operation from occurring.",
      "params": {
        "errorMsg": {
          "id": "System.id.adderror.errormsg",
          "type": "var",
          "name": "errorMsg",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_errorMsg_-1:0"
          },
          "signature": "String errorMsg",
          "datatype": {
            "id": "System.id.adderror.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "escape": {
          "id": "System.id.adderror.escape",
          "type": "var",
          "name": "escape",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_escape_-1:0"
          },
          "signature": "Boolean escape",
          "datatype": {
            "id": "System.id.adderror.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "adderror(exception)": {
      "id": "System.id.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(Exception exceptionError)",
      "simplifiedSignature": "addError(Exception)",
      "datatype": {
        "id": "System.id.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Marks a trigger record with a custom error message and prevents any DML operation from occurring.",
      "params": {
        "exceptionError": {
          "id": "System.id.adderror.exceptionerror",
          "type": "var",
          "name": "exceptionError",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exceptionError_-1:0"
          },
          "signature": "Exception exceptionError",
          "datatype": {
            "id": "System.id.adderror.exception",
            "nodeType": "datatype",
            "name": "Exception"
          }
        }
      }
    },
    "adderror(exception,boolean)": {
      "id": "System.id.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(Exception exceptionError, Boolean escape)",
      "simplifiedSignature": "addError(Exception,Boolean)",
      "datatype": {
        "id": "System.id.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Marks a trigger record with a custom error message and prevents any DML operation from occurring.",
      "params": {
        "exceptionError": {
          "id": "System.id.adderror.exceptionerror",
          "type": "var",
          "name": "exceptionError",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exceptionError_-1:0"
          },
          "signature": "Exception exceptionError",
          "datatype": {
            "id": "System.id.adderror.exception",
            "nodeType": "datatype",
            "name": "Exception"
          }
        },
        "escape": {
          "id": "System.id.adderror.escape",
          "type": "var",
          "name": "escape",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_escape_-1:0"
          },
          "signature": "Boolean escape",
          "datatype": {
            "id": "System.id.adderror.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "getsobjecttype()": {
      "id": "System.id.getsobjecttype",
      "nodeType": "method",
      "name": "getSObjectType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObjectType",
        "textToLower": "getsobjecttype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObjectType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Schema.SObjectType getSObjectType()",
      "simplifiedSignature": "getSObjectType()",
      "datatype": {
        "id": "System.id.getsobjecttype.Schema.SObjectType",
        "nodeType": "datatype",
        "name": "Schema.SObjectType"
      },
      "description": "Returns the token for the sObject corresponding to this ID. This method is primarily used with describe information.",
      "params": {}
    },
    "valueof(string)": {
      "id": "System.id.valueof",
      "nodeType": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID valueOf(String toID)",
      "simplifiedSignature": "valueOf(String)",
      "datatype": {
        "id": "System.id.valueof.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Converts the specified String into an ID and returns the ID.",
      "params": {
        "toID": {
          "id": "System.id.valueof.toid",
          "type": "var",
          "name": "toID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "toID",
            "textToLower": "toid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_toID_-1:0"
          },
          "signature": "String toID",
          "datatype": {
            "id": "System.id.valueof.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}