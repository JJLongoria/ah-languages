{
  "id": "System.id",
  "nodeType": "class",
  "name": "Id",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Id",
    "textToLower": "id",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Id_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for the ID primitive data type.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_id.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "adderror(string)": {
      "id": "System.id.method.adderror(string)",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "parentId": "System.id",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void addError(String errorMsg)",
      "overrideSignature": "public override Void addError(String errorMsg)",
      "simplifiedSignature": "addError(String)",
      "datatype": {
        "id": "System.id.adderror.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "System.id.adderror",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Marks a trigger record with a custom error message and prevents any DML operation from occurring.",
      "parentName": "Id",
      "variables": {},
      "params": {
        "errormsg": {
          "id": "System.id.method.adderror(string).varParam.errormsg",
          "nodeType": "variable",
          "name": "errorMsg",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 36
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_errorMsg_0:28"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 36
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_errorMsg_0:28"
          },
          "parentId": "System.id.method.adderror(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.id.adderror.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 21
                },
                "end": {
                  "line": 0,
                  "character": 27
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:21"
            },
            "parentId": "System.id.adderror",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The error message to mark the record with.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "adderror(string,boolean)": {
      "id": "System.id.method.adderror(string,boolean)",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "parentId": "System.id",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void addError(String errorMsg, Boolean escape)",
      "overrideSignature": "public override Void addError(String errorMsg, Boolean escape)",
      "simplifiedSignature": "addError(String,Boolean)",
      "datatype": {
        "id": "System.id.adderror.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "System.id.adderror",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Marks a trigger record with a custom error message, specifies if the error message should be escaped, and prevents any DML operation from occurring.",
      "parentName": "Id",
      "variables": {},
      "params": {
        "errormsg": {
          "id": "System.id.method.adderror(string,boolean).varParam.errormsg",
          "nodeType": "variable",
          "name": "errorMsg",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 36
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_errorMsg_0:28"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 28
              },
              "end": {
                "line": 0,
                "character": 36
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_errorMsg_0:28"
          },
          "parentId": "System.id.method.adderror(string,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.id.adderror.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 21
                },
                "end": {
                  "line": 0,
                  "character": 27
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:21"
            },
            "parentId": "System.id.adderror",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "escape": {
          "id": "System.id.method.adderror(string,boolean).varParam.escape",
          "nodeType": "variable",
          "name": "escape",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_escape_0:46"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_escape_0:46"
          },
          "parentId": "System.id.method.adderror(string,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.id.adderror.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 38
                },
                "end": {
                  "line": 0,
                  "character": 45
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:38"
            },
            "parentId": "System.id.adderror",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "The error message to mark the record with.   Indicates whether any HTML markup in the custom error message should be escaped (true) or not (false). This parameter is ignored in Lightning Experience and the Salesforce app and the HTML is always escaped. The escape parameter only applies in Salesforce Classic.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "adderror(exception)": {
      "id": "System.id.method.adderror(exception)",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "parentId": "System.id",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void addError(Exception exceptionError)",
      "overrideSignature": "public override Void addError(Exception exceptionError)",
      "simplifiedSignature": "addError(Exception)",
      "datatype": {
        "id": "System.id.adderror.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "System.id.adderror",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Marks a trigger record with a custom error message and prevents any DML operation from occurring.",
      "parentName": "Id",
      "variables": {},
      "params": {
        "exceptionerror": {
          "id": "System.id.method.adderror(exception).varParam.exceptionerror",
          "nodeType": "variable",
          "name": "exceptionError",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 31
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_exceptionError_0:31"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 31
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_exceptionError_0:31"
          },
          "parentId": "System.id.method.adderror(exception)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.id.adderror.datatype.Exception",
            "nodeType": "datatype",
            "name": "Exception",
            "startToken": {
              "type": "datatype.support.class",
              "text": "Exception",
              "textToLower": "exception",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 21
                },
                "end": {
                  "line": 0,
                  "character": 30
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Exception_0:21"
            },
            "parentId": "System.id.adderror",
            "order": 0,
            "memberOrder": 0,
            "type": "Exception"
          },
          "description": "An Exception object or a custom exception object that contains the error message to mark the record with.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "adderror(exception,boolean)": {
      "id": "System.id.method.adderror(exception,boolean)",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "parentId": "System.id",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Void addError(Exception exceptionError, Boolean escape)",
      "overrideSignature": "public override Void addError(Exception exceptionError, Boolean escape)",
      "simplifiedSignature": "addError(Exception,Boolean)",
      "datatype": {
        "id": "System.id.adderror.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 11
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:7"
        },
        "parentId": "System.id.adderror",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Marks a trigger record with a custom error message and prevents any DML operation from occurring.",
      "parentName": "Id",
      "variables": {},
      "params": {
        "exceptionerror": {
          "id": "System.id.method.adderror(exception,boolean).varParam.exceptionerror",
          "nodeType": "variable",
          "name": "exceptionError",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 31
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_exceptionError_0:31"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 31
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_exceptionError_0:31"
          },
          "parentId": "System.id.method.adderror(exception,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.id.adderror.datatype.Exception",
            "nodeType": "datatype",
            "name": "Exception",
            "startToken": {
              "type": "datatype.support.class",
              "text": "Exception",
              "textToLower": "exception",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 21
                },
                "end": {
                  "line": 0,
                  "character": 30
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Exception_0:21"
            },
            "parentId": "System.id.adderror",
            "order": 0,
            "memberOrder": 0,
            "type": "Exception"
          },
          "scope": null
        },
        "escape": {
          "id": "System.id.method.adderror(exception,boolean).varParam.escape",
          "nodeType": "variable",
          "name": "escape",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 55
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_escape_0:55"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 55
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_escape_0:55"
          },
          "parentId": "System.id.method.adderror(exception,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.id.adderror.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 47
                },
                "end": {
                  "line": 0,
                  "character": 54
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:47"
            },
            "parentId": "System.id.adderror",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "An Exception object or a custom exception object that contains the error message to mark the record with.   Indicates whether any HTML markup in the custom error message should be escaped (true) or not (false). This parameter is ignored in Lightning Experience and the Salesforce app and the HTML is always escaped. The escape parameter only applies in Salesforce Classic.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "getsobjecttype()": {
      "id": "System.id.method.getsobjecttype()",
      "nodeType": "method",
      "name": "getSObjectType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObjectType",
        "textToLower": "getsobjecttype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObjectType_-1:0"
      },
      "parentId": "System.id",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "signature": "public Schema.SObjectType getSObjectType()",
      "overrideSignature": "public override Schema.SObjectType getSObjectType()",
      "simplifiedSignature": "getSObjectType()",
      "datatype": {
        "id": "System.id.getsobjecttype.datatype.Schema.SObjectType",
        "nodeType": "datatype",
        "name": "Schema.SObjectType",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "Schema",
          "textToLower": "schema",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 7
            },
            "end": {
              "line": 0,
              "character": 13
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Schema_0:7"
        },
        "parentId": "System.id.getsobjecttype",
        "order": 0,
        "memberOrder": 0,
        "type": "Schema.SObjectType"
      },
      "description": "Returns the token for the sObject corresponding to this ID. This method is primarily used with describe information.",
      "parentName": "Id",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "valueof(string)": {
      "id": "System.id.method.valueof(string)",
      "nodeType": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "parentId": "System.id",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static ID valueOf(String toID)",
      "overrideSignature": "public static override ID valueOf(String toID)",
      "simplifiedSignature": "valueOf(String)",
      "datatype": {
        "id": "System.id.valueof.datatype.ID",
        "nodeType": "datatype",
        "name": "ID",
        "startToken": {
          "type": "datatype.primitive",
          "text": "ID",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 16
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_ID_0:14"
        },
        "parentId": "System.id.valueof",
        "order": 0,
        "memberOrder": 0,
        "type": "ID"
      },
      "description": "Converts the specified String into an ID and returns the ID.",
      "parentName": "Id",
      "variables": {},
      "params": {
        "toid": {
          "id": "System.id.method.valueof(string).varParam.toid",
          "nodeType": "variable",
          "name": "toID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "toID",
            "textToLower": "toid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 36
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_toID_0:32"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "toID",
            "textToLower": "toid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 36
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_toID_0:32"
          },
          "parentId": "System.id.method.valueof(string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.id.valueof.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 25
                },
                "end": {
                  "line": 0,
                  "character": 31
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:25"
            },
            "parentId": "System.id.valueof",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 6,
  "queries": []
}