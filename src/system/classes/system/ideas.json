{
  "id": "System.ideas",
  "type": "class",
  "name": "Ideas",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Ideas",
    "textToLower": "ideas",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Ideas_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Represents zone ideas.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_ideas.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "findsimilar(idea)": {
      "id": "System.ideas.findsimilar",
      "type": "method",
      "name": "findSimilar",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "findSimilar",
        "textToLower": "findsimilar",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_findSimilar_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID[] findSimilar(Idea idea)",
      "simplifiedSignature": "findSimilar(Idea)",
      "datatype": {
        "id": "System.ideas.findsimilar.ID[]",
        "type": "datatype",
        "name": "ID[]"
      },
      "description": "Returns a list of similar ideas based on the title of the specified idea.",
      "variables": {
        "idea": {
          "id": "System.ideas.findsimilar.idea",
          "type": "var",
          "name": "idea",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "idea",
            "textToLower": "idea",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_idea_-1:0"
          },
          "signature": "Idea idea",
          "datatype": {
            "id": "System.ideas.findsimilar.idea",
            "type": "datatype",
            "name": "Idea"
          }
        }
      }
    },
    "getallrecentreplies(string,string)": {
      "id": "System.ideas.getallrecentreplies",
      "type": "method",
      "name": "getAllRecentReplies",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAllRecentReplies",
        "textToLower": "getallrecentreplies",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAllRecentReplies_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID[] getAllRecentReplies(String userID, String communityID)",
      "simplifiedSignature": "getAllRecentReplies(String,String)",
      "datatype": {
        "id": "System.ideas.getallrecentreplies.ID[]",
        "type": "datatype",
        "name": "ID[]"
      },
      "description": "Returns ideas that have recent replies for the specified user or zone. This includes all read and unread replies.",
      "variables": {
        "userID": {
          "id": "System.ideas.getallrecentreplies.userid",
          "type": "var",
          "name": "userID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userID",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userID_-1:0"
          },
          "signature": "String userID",
          "datatype": {
            "id": "System.ideas.getallrecentreplies.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "communityID": {
          "id": "System.ideas.getallrecentreplies.communityid",
          "type": "var",
          "name": "communityID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityID",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityID_-1:0"
          },
          "signature": "String communityID",
          "datatype": {
            "id": "System.ideas.getallrecentreplies.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getreadrecentreplies(string,string)": {
      "id": "System.ideas.getreadrecentreplies",
      "type": "method",
      "name": "getReadRecentReplies",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getReadRecentReplies",
        "textToLower": "getreadrecentreplies",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getReadRecentReplies_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID[] getReadRecentReplies(String userID, String communityID)",
      "simplifiedSignature": "getReadRecentReplies(String,String)",
      "datatype": {
        "id": "System.ideas.getreadrecentreplies.ID[]",
        "type": "datatype",
        "name": "ID[]"
      },
      "description": "Returns ideas that have recent replies marked as read.",
      "variables": {
        "userID": {
          "id": "System.ideas.getreadrecentreplies.userid",
          "type": "var",
          "name": "userID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userID",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userID_-1:0"
          },
          "signature": "String userID",
          "datatype": {
            "id": "System.ideas.getreadrecentreplies.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "communityID": {
          "id": "System.ideas.getreadrecentreplies.communityid",
          "type": "var",
          "name": "communityID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityID",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityID_-1:0"
          },
          "signature": "String communityID",
          "datatype": {
            "id": "System.ideas.getreadrecentreplies.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getunreadrecentreplies(string,string)": {
      "id": "System.ideas.getunreadrecentreplies",
      "type": "method",
      "name": "getUnreadRecentReplies",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getUnreadRecentReplies",
        "textToLower": "getunreadrecentreplies",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getUnreadRecentReplies_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID[] getUnreadRecentReplies(String userID, String communityID)",
      "simplifiedSignature": "getUnreadRecentReplies(String,String)",
      "datatype": {
        "id": "System.ideas.getunreadrecentreplies.ID[]",
        "type": "datatype",
        "name": "ID[]"
      },
      "description": "Returns ideas that have recent replies marked as unread.",
      "variables": {
        "userID": {
          "id": "System.ideas.getunreadrecentreplies.userid",
          "type": "var",
          "name": "userID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userID",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userID_-1:0"
          },
          "signature": "String userID",
          "datatype": {
            "id": "System.ideas.getunreadrecentreplies.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "communityID": {
          "id": "System.ideas.getunreadrecentreplies.communityid",
          "type": "var",
          "name": "communityID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "communityID",
            "textToLower": "communityid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_communityID_-1:0"
          },
          "signature": "String communityID",
          "datatype": {
            "id": "System.ideas.getunreadrecentreplies.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "markread(string)": {
      "id": "System.ideas.markread",
      "type": "method",
      "name": "markRead",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "markRead",
        "textToLower": "markread",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_markRead_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void markRead(String ideaID)",
      "simplifiedSignature": "markRead(String)",
      "datatype": {
        "id": "System.ideas.markread.void",
        "type": "datatype",
        "name": "void"
      },
      "description": "Marks all comments as read for the user that is currently logged in.",
      "variables": {
        "ideaID": {
          "id": "System.ideas.markread.ideaid",
          "type": "var",
          "name": "ideaID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "ideaID",
            "textToLower": "ideaid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_ideaID_-1:0"
          },
          "signature": "String ideaID",
          "datatype": {
            "id": "System.ideas.markread.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}