{
  "id": "System.jsonparser",
  "nodeType": "class",
  "name": "JSONParser",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "JSONParser",
    "textToLower": "jsonparser",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_JSONParser_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Represents a parser for JSON-encoded content.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_System_JsonParser.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "clearcurrenttoken()": {
      "id": "System.jsonparser.clearcurrenttoken",
      "nodeType": "method",
      "name": "clearCurrentToken",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clearCurrentToken",
        "textToLower": "clearcurrenttoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clearCurrentToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void clearCurrentToken()",
      "simplifiedSignature": "clearCurrentToken()",
      "datatype": {
        "id": "System.jsonparser.clearcurrenttoken.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Removes the current token.",
      "params": {}
    },
    "getblobvalue()": {
      "id": "System.jsonparser.getblobvalue",
      "nodeType": "method",
      "name": "getBlobValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBlobValue",
        "textToLower": "getblobvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBlobValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Blob getBlobValue()",
      "simplifiedSignature": "getBlobValue()",
      "datatype": {
        "id": "System.jsonparser.getblobvalue.Blob",
        "nodeType": "datatype",
        "name": "Blob"
      },
      "description": "Returns the current token as a BLOB value.",
      "params": {}
    },
    "getbooleanvalue()": {
      "id": "System.jsonparser.getbooleanvalue",
      "nodeType": "method",
      "name": "getBooleanValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBooleanValue",
        "textToLower": "getbooleanvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBooleanValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean getBooleanValue()",
      "simplifiedSignature": "getBooleanValue()",
      "datatype": {
        "id": "System.jsonparser.getbooleanvalue.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns the current token as a Boolean value.",
      "params": {}
    },
    "getcurrentname()": {
      "id": "System.jsonparser.getcurrentname",
      "nodeType": "method",
      "name": "getCurrentName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCurrentName",
        "textToLower": "getcurrentname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCurrentName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getCurrentName()",
      "simplifiedSignature": "getCurrentName()",
      "datatype": {
        "id": "System.jsonparser.getcurrentname.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the name associated with the current token.",
      "params": {}
    },
    "getcurrenttoken()": {
      "id": "System.jsonparser.getcurrenttoken",
      "nodeType": "method",
      "name": "getCurrentToken",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCurrentToken",
        "textToLower": "getcurrenttoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCurrentToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.JSONToken getCurrentToken()",
      "simplifiedSignature": "getCurrentToken()",
      "datatype": {
        "id": "System.jsonparser.getcurrenttoken.System.JSONToken",
        "nodeType": "datatype",
        "name": "System.JSONToken"
      },
      "description": "Returns the token that the parser currently points to or null if there's no current token.",
      "params": {}
    },
    "getdatetimevalue()": {
      "id": "System.jsonparser.getdatetimevalue",
      "nodeType": "method",
      "name": "getDatetimeValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDatetimeValue",
        "textToLower": "getdatetimevalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDatetimeValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Datetime getDatetimeValue()",
      "simplifiedSignature": "getDatetimeValue()",
      "datatype": {
        "id": "System.jsonparser.getdatetimevalue.Datetime",
        "nodeType": "datatype",
        "name": "Datetime"
      },
      "description": "Returns the current token as a date and time value.",
      "params": {}
    },
    "getdatevalue()": {
      "id": "System.jsonparser.getdatevalue",
      "nodeType": "method",
      "name": "getDateValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDateValue",
        "textToLower": "getdatevalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDateValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Date getDateValue()",
      "simplifiedSignature": "getDateValue()",
      "datatype": {
        "id": "System.jsonparser.getdatevalue.Date",
        "nodeType": "datatype",
        "name": "Date"
      },
      "description": "Returns the current token as a date value.",
      "params": {}
    },
    "getdecimalvalue()": {
      "id": "System.jsonparser.getdecimalvalue",
      "nodeType": "method",
      "name": "getDecimalValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDecimalValue",
        "textToLower": "getdecimalvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDecimalValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Decimal getDecimalValue()",
      "simplifiedSignature": "getDecimalValue()",
      "datatype": {
        "id": "System.jsonparser.getdecimalvalue.Decimal",
        "nodeType": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the current token as a decimal value.",
      "params": {}
    },
    "getdoublevalue()": {
      "id": "System.jsonparser.getdoublevalue",
      "nodeType": "method",
      "name": "getDoubleValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDoubleValue",
        "textToLower": "getdoublevalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDoubleValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Double getDoubleValue()",
      "simplifiedSignature": "getDoubleValue()",
      "datatype": {
        "id": "System.jsonparser.getdoublevalue.Double",
        "nodeType": "datatype",
        "name": "Double"
      },
      "description": "Returns the current token as a double value.",
      "params": {}
    },
    "getidvalue()": {
      "id": "System.jsonparser.getidvalue",
      "nodeType": "method",
      "name": "getIdValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getIdValue",
        "textToLower": "getidvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getIdValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public ID getIdValue()",
      "simplifiedSignature": "getIdValue()",
      "datatype": {
        "id": "System.jsonparser.getidvalue.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Returns the current token as an ID value.",
      "params": {}
    },
    "getintegervalue()": {
      "id": "System.jsonparser.getintegervalue",
      "nodeType": "method",
      "name": "getIntegerValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getIntegerValue",
        "textToLower": "getintegervalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getIntegerValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer getIntegerValue()",
      "simplifiedSignature": "getIntegerValue()",
      "datatype": {
        "id": "System.jsonparser.getintegervalue.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the current token as an integer value.",
      "params": {}
    },
    "getlastclearedtoken()": {
      "id": "System.jsonparser.getlastclearedtoken",
      "nodeType": "method",
      "name": "getLastClearedToken",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLastClearedToken",
        "textToLower": "getlastclearedtoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLastClearedToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.JSONToken getLastClearedToken()",
      "simplifiedSignature": "getLastClearedToken()",
      "datatype": {
        "id": "System.jsonparser.getlastclearedtoken.System.JSONToken",
        "nodeType": "datatype",
        "name": "System.JSONToken"
      },
      "description": "Returns the last token that was cleared by the clearCurrentToken method.",
      "params": {}
    },
    "getlongvalue()": {
      "id": "System.jsonparser.getlongvalue",
      "nodeType": "method",
      "name": "getLongValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLongValue",
        "textToLower": "getlongvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLongValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Long getLongValue()",
      "simplifiedSignature": "getLongValue()",
      "datatype": {
        "id": "System.jsonparser.getlongvalue.Long",
        "nodeType": "datatype",
        "name": "Long"
      },
      "description": "Returns the current token as a long value.",
      "params": {}
    },
    "gettext()": {
      "id": "System.jsonparser.gettext",
      "nodeType": "method",
      "name": "getText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getText",
        "textToLower": "gettext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getText()",
      "simplifiedSignature": "getText()",
      "datatype": {
        "id": "System.jsonparser.gettext.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the textual representation of the current token or null if there's no current token.",
      "params": {}
    },
    "gettimevalue()": {
      "id": "System.jsonparser.gettimevalue",
      "nodeType": "method",
      "name": "getTimeValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTimeValue",
        "textToLower": "gettimevalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTimeValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Time getTimeValue()",
      "simplifiedSignature": "getTimeValue()",
      "datatype": {
        "id": "System.jsonparser.gettimevalue.Time",
        "nodeType": "datatype",
        "name": "Time"
      },
      "description": "Returns the current token as a time value.",
      "params": {}
    },
    "hascurrenttoken()": {
      "id": "System.jsonparser.hascurrenttoken",
      "nodeType": "method",
      "name": "hasCurrentToken",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hasCurrentToken",
        "textToLower": "hascurrenttoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hasCurrentToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean hasCurrentToken()",
      "simplifiedSignature": "hasCurrentToken()",
      "datatype": {
        "id": "System.jsonparser.hascurrenttoken.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the parser currently points to a token; otherwise, returns false.",
      "params": {}
    },
    "nexttoken()": {
      "id": "System.jsonparser.nexttoken",
      "nodeType": "method",
      "name": "nextToken",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "nextToken",
        "textToLower": "nexttoken",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_nextToken_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.JSONToken nextToken()",
      "simplifiedSignature": "nextToken()",
      "datatype": {
        "id": "System.jsonparser.nexttoken.System.JSONToken",
        "nodeType": "datatype",
        "name": "System.JSONToken"
      },
      "description": "Returns the next token or null if the parser has reached the end of the input stream.",
      "params": {}
    },
    "nextvalue()": {
      "id": "System.jsonparser.nextvalue",
      "nodeType": "method",
      "name": "nextValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "nextValue",
        "textToLower": "nextvalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_nextValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.JSONToken nextValue()",
      "simplifiedSignature": "nextValue()",
      "datatype": {
        "id": "System.jsonparser.nextvalue.System.JSONToken",
        "nodeType": "datatype",
        "name": "System.JSONToken"
      },
      "description": "Returns the next token that is a value type or null if the parser has reached the end of the input stream.",
      "params": {}
    },
    "readvalueas(system.type)": {
      "id": "System.jsonparser.readvalueas",
      "nodeType": "method",
      "name": "readValueAs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "readValueAs",
        "textToLower": "readvalueas",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_readValueAs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object readValueAs(System.Type apexType)",
      "simplifiedSignature": "readValueAs(System.Type)",
      "datatype": {
        "id": "System.jsonparser.readvalueas.Object",
        "nodeType": "datatype",
        "name": "Object"
      },
      "description": "Deserializes JSON content into an object of the specified Apex type and returns the deserialized object.",
      "params": {
        "apexType": {
          "id": "System.jsonparser.readvalueas.apextype",
          "type": "var",
          "name": "apexType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "apexType",
            "textToLower": "apextype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_apexType_-1:0"
          },
          "signature": "System.Type apexType",
          "datatype": {
            "id": "System.jsonparser.readvalueas.system.type",
            "nodeType": "datatype",
            "name": "System.Type"
          }
        }
      }
    },
    "readvalueasstrict(system.type)": {
      "id": "System.jsonparser.readvalueasstrict",
      "nodeType": "method",
      "name": "readValueAsStrict",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "readValueAsStrict",
        "textToLower": "readvalueasstrict",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_readValueAsStrict_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object readValueAsStrict(System.Type apexType)",
      "simplifiedSignature": "readValueAsStrict(System.Type)",
      "datatype": {
        "id": "System.jsonparser.readvalueasstrict.Object",
        "nodeType": "datatype",
        "name": "Object"
      },
      "description": "Deserializes JSON content into an object of the specified Apex type and returns the deserialized object. All attributes in the JSON content must be present in the specified type.",
      "params": {
        "apexType": {
          "id": "System.jsonparser.readvalueasstrict.apextype",
          "type": "var",
          "name": "apexType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "apexType",
            "textToLower": "apextype",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_apexType_-1:0"
          },
          "signature": "System.Type apexType",
          "datatype": {
            "id": "System.jsonparser.readvalueasstrict.system.type",
            "nodeType": "datatype",
            "name": "System.Type"
          }
        }
      }
    },
    "skipchildren()": {
      "id": "System.jsonparser.skipchildren",
      "nodeType": "method",
      "name": "skipChildren",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "skipChildren",
        "textToLower": "skipchildren",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_skipChildren_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void skipChildren()",
      "simplifiedSignature": "skipChildren()",
      "datatype": {
        "id": "System.jsonparser.skipchildren.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Skips all child tokens of type JSONToken.START_ARRAY and JSONToken.START_OBJECT that the parser currently points to.",
      "params": {}
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}