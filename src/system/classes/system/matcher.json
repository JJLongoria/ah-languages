{
  "id": "System.matcher",
  "nodeType": "class",
  "name": "Matcher",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Matcher",
    "textToLower": "matcher",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Matcher_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Matchers use Patterns to perform match operations on a character string.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_pattern_and_matcher_matcher_methods.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "end()": {
      "id": "System.matcher.end",
      "nodeType": "method",
      "name": "end",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "end",
        "textToLower": "end",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_end_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer end()",
      "simplifiedSignature": "end()",
      "datatype": {
        "id": "System.matcher.end.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the position after the last matched character.",
      "params": {}
    },
    "end(integer)": {
      "id": "System.matcher.end",
      "nodeType": "method",
      "name": "end",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "end",
        "textToLower": "end",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_end_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer end(Integer groupIndex)",
      "simplifiedSignature": "end(Integer)",
      "datatype": {
        "id": "System.matcher.end.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the position after the last character of the subsequence captured by the group index during the previous match operation. If the match was successful but the group itself did not match anything, this method returns -1.",
      "params": {
        "groupIndex": {
          "id": "System.matcher.end.groupindex",
          "type": "var",
          "name": "groupIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "groupIndex",
            "textToLower": "groupindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_groupIndex_-1:0"
          },
          "signature": "Integer groupIndex",
          "datatype": {
            "id": "System.matcher.end.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "find()": {
      "id": "System.matcher.find",
      "nodeType": "method",
      "name": "find",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "find",
        "textToLower": "find",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_find_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean find()",
      "simplifiedSignature": "find()",
      "datatype": {
        "id": "System.matcher.find.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Attempts to find the next subsequence of the input sequence that matches the pattern. This method returns true if a subsequence of the input sequence matches this Matcher object's pattern.",
      "params": {}
    },
    "find(integer)": {
      "id": "System.matcher.find",
      "nodeType": "method",
      "name": "find",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "find",
        "textToLower": "find",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_find_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean find(Integer group)",
      "simplifiedSignature": "find(Integer)",
      "datatype": {
        "id": "System.matcher.find.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Resets the Matcher object and then tries to find the next subsequence of the input sequence that matches the pattern. This method returns true if a subsequence of the input sequence matches this Matcher object's pattern.",
      "params": {
        "group": {
          "id": "System.matcher.find.group",
          "type": "var",
          "name": "group",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "group",
            "textToLower": "group",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_group_-1:0"
          },
          "signature": "Integer group",
          "datatype": {
            "id": "System.matcher.find.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "group()": {
      "id": "System.matcher.group",
      "nodeType": "method",
      "name": "group",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "group",
        "textToLower": "group",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_group_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String group()",
      "simplifiedSignature": "group()",
      "datatype": {
        "id": "System.matcher.group.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the input subsequence returned by the previous match.",
      "params": {}
    },
    "group(integer)": {
      "id": "System.matcher.group",
      "nodeType": "method",
      "name": "group",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "group",
        "textToLower": "group",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_group_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String group(Integer groupIndex)",
      "simplifiedSignature": "group(Integer)",
      "datatype": {
        "id": "System.matcher.group.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the input subsequence captured by the specified group index during the previous match operation. If the match was successful but the specified group failed to match any part of the input sequence, null is returned.",
      "params": {
        "groupIndex": {
          "id": "System.matcher.group.groupindex",
          "type": "var",
          "name": "groupIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "groupIndex",
            "textToLower": "groupindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_groupIndex_-1:0"
          },
          "signature": "Integer groupIndex",
          "datatype": {
            "id": "System.matcher.group.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "groupcount()": {
      "id": "System.matcher.groupcount",
      "nodeType": "method",
      "name": "groupCount",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "groupCount",
        "textToLower": "groupcount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_groupCount_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer groupCount()",
      "simplifiedSignature": "groupCount()",
      "datatype": {
        "id": "System.matcher.groupcount.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of capturing groups in this Matching object's pattern. Group zero denotes the entire pattern and is not included in this count.",
      "params": {}
    },
    "hasanchoringbounds()": {
      "id": "System.matcher.hasanchoringbounds",
      "nodeType": "method",
      "name": "hasAnchoringBounds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hasAnchoringBounds",
        "textToLower": "hasanchoringbounds",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hasAnchoringBounds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean hasAnchoringBounds()",
      "simplifiedSignature": "hasAnchoringBounds()",
      "datatype": {
        "id": "System.matcher.hasanchoringbounds.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the Matcher object has anchoring bounds, false otherwise. By default, a Matcher object uses anchoring bounds regions.",
      "params": {}
    },
    "hastransparentbounds()": {
      "id": "System.matcher.hastransparentbounds",
      "nodeType": "method",
      "name": "hasTransparentBounds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hasTransparentBounds",
        "textToLower": "hastransparentbounds",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hasTransparentBounds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean hasTransparentBounds()",
      "simplifiedSignature": "hasTransparentBounds()",
      "datatype": {
        "id": "System.matcher.hastransparentbounds.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the Matcher object has transparent bounds, false if it uses opaque bounds. By default, a Matcher object uses opaque region boundaries.",
      "params": {}
    },
    "hitend()": {
      "id": "System.matcher.hitend",
      "nodeType": "method",
      "name": "hitEnd",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hitEnd",
        "textToLower": "hitend",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hitEnd_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean hitEnd()",
      "simplifiedSignature": "hitEnd()",
      "datatype": {
        "id": "System.matcher.hitend.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the end of input was found by the search engine in the last match operation performed by this Matcher object. When this method returns true, it is possible that more input would have changed the result of the last search.",
      "params": {}
    },
    "lookingat()": {
      "id": "System.matcher.lookingat",
      "nodeType": "method",
      "name": "lookingAt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lookingAt",
        "textToLower": "lookingat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lookingAt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean lookingAt()",
      "simplifiedSignature": "lookingAt()",
      "datatype": {
        "id": "System.matcher.lookingat.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Attempts to match the input sequence, starting at the beginning of the region, against the pattern.",
      "params": {}
    },
    "matches()": {
      "id": "System.matcher.matches",
      "nodeType": "method",
      "name": "matches",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "matches",
        "textToLower": "matches",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_matches_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean matches()",
      "simplifiedSignature": "matches()",
      "datatype": {
        "id": "System.matcher.matches.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Attempts to match the entire region against the pattern.",
      "params": {}
    },
    "pattern()": {
      "id": "System.matcher.pattern",
      "nodeType": "method",
      "name": "pattern",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "pattern",
        "textToLower": "pattern",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_pattern_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.Pattern pattern()",
      "simplifiedSignature": "pattern()",
      "datatype": {
        "id": "System.matcher.pattern.System.Pattern",
        "nodeType": "datatype",
        "name": "System.Pattern"
      },
      "description": "Returns the Pattern object from which this Matcher object was created.",
      "params": {}
    },
    "quotereplacement(string)": {
      "id": "System.matcher.quotereplacement",
      "nodeType": "method",
      "name": "quoteReplacement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "quoteReplacement",
        "textToLower": "quotereplacement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_quoteReplacement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String quoteReplacement(String inputString)",
      "simplifiedSignature": "quoteReplacement(String)",
      "datatype": {
        "id": "System.matcher.quotereplacement.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns a literal replacement string for the specified string inputString. The characters in the returned string match the sequence of characters in inputString.",
      "params": {
        "inputString": {
          "id": "System.matcher.quotereplacement.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.matcher.quotereplacement.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "region(integer,integer)": {
      "id": "System.matcher.region",
      "nodeType": "method",
      "name": "region",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "region",
        "textToLower": "region",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_region_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Matcher region(Integer start, Integer end)",
      "simplifiedSignature": "region(Integer,Integer)",
      "datatype": {
        "id": "System.matcher.region.Matcher",
        "nodeType": "datatype",
        "name": "Matcher"
      },
      "description": "Sets the limits of this Matcher object's region. The region is the part of the input sequence that is searched to find a match.",
      "params": {
        "start": {
          "id": "System.matcher.region.start",
          "type": "var",
          "name": "start",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "start",
            "textToLower": "start",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_start_-1:0"
          },
          "signature": "Integer start",
          "datatype": {
            "id": "System.matcher.region.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        },
        "end": {
          "id": "System.matcher.region.end",
          "type": "var",
          "name": "end",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "end",
            "textToLower": "end",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_end_-1:0"
          },
          "signature": "Integer end",
          "datatype": {
            "id": "System.matcher.region.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "regionend()": {
      "id": "System.matcher.regionend",
      "nodeType": "method",
      "name": "regionEnd",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "regionEnd",
        "textToLower": "regionend",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_regionEnd_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer regionEnd()",
      "simplifiedSignature": "regionEnd()",
      "datatype": {
        "id": "System.matcher.regionend.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the end index (exclusive) of this Matcher object's region.",
      "params": {}
    },
    "regionstart()": {
      "id": "System.matcher.regionstart",
      "nodeType": "method",
      "name": "regionStart",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "regionStart",
        "textToLower": "regionstart",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_regionStart_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer regionStart()",
      "simplifiedSignature": "regionStart()",
      "datatype": {
        "id": "System.matcher.regionstart.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the start index (inclusive) of this Matcher object's region.",
      "params": {}
    },
    "replaceall(string)": {
      "id": "System.matcher.replaceall",
      "nodeType": "method",
      "name": "replaceAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "replaceAll",
        "textToLower": "replaceall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_replaceAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String replaceAll(String replacementString)",
      "simplifiedSignature": "replaceAll(String)",
      "datatype": {
        "id": "System.matcher.replaceall.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Replaces every subsequence of the input sequence that matches the pattern with the replacement string.",
      "params": {
        "replacementString": {
          "id": "System.matcher.replaceall.replacementstring",
          "type": "var",
          "name": "replacementString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "replacementString",
            "textToLower": "replacementstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_replacementString_-1:0"
          },
          "signature": "String replacementString",
          "datatype": {
            "id": "System.matcher.replaceall.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "replacefirst(string)": {
      "id": "System.matcher.replacefirst",
      "nodeType": "method",
      "name": "replaceFirst",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "replaceFirst",
        "textToLower": "replacefirst",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_replaceFirst_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String replaceFirst(String replacementString)",
      "simplifiedSignature": "replaceFirst(String)",
      "datatype": {
        "id": "System.matcher.replacefirst.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Replaces the first subsequence of the input sequence that matches the pattern with the replacement string.",
      "params": {
        "replacementString": {
          "id": "System.matcher.replacefirst.replacementstring",
          "type": "var",
          "name": "replacementString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "replacementString",
            "textToLower": "replacementstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_replacementString_-1:0"
          },
          "signature": "String replacementString",
          "datatype": {
            "id": "System.matcher.replacefirst.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "requireend()": {
      "id": "System.matcher.requireend",
      "nodeType": "method",
      "name": "requireEnd",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "requireEnd",
        "textToLower": "requireend",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_requireEnd_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean requireEnd()",
      "simplifiedSignature": "requireEnd()",
      "datatype": {
        "id": "System.matcher.requireend.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if more input could change a positive match into a negative one.",
      "params": {}
    },
    "reset()": {
      "id": "System.matcher.reset",
      "nodeType": "method",
      "name": "reset",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "reset",
        "textToLower": "reset",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_reset_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Matcher reset()",
      "simplifiedSignature": "reset()",
      "datatype": {
        "id": "System.matcher.reset.Matcher",
        "nodeType": "datatype",
        "name": "Matcher"
      },
      "description": "Resets this Matcher object. Resetting a Matcher object discards all of its explicit state information.",
      "params": {}
    },
    "reset(string)": {
      "id": "System.matcher.reset",
      "nodeType": "method",
      "name": "reset",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "reset",
        "textToLower": "reset",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_reset_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Matcher reset(String inputSequence)",
      "simplifiedSignature": "reset(String)",
      "datatype": {
        "id": "System.matcher.reset.Matcher",
        "nodeType": "datatype",
        "name": "Matcher"
      },
      "description": "Resets this Matcher object with the new input sequence. Resetting a Matcher object discards all of its explicit state information.",
      "params": {
        "inputSequence": {
          "id": "System.matcher.reset.inputsequence",
          "type": "var",
          "name": "inputSequence",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputSequence",
            "textToLower": "inputsequence",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputSequence_-1:0"
          },
          "signature": "String inputSequence",
          "datatype": {
            "id": "System.matcher.reset.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "start()": {
      "id": "System.matcher.start",
      "nodeType": "method",
      "name": "start",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "start",
        "textToLower": "start",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_start_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer start()",
      "simplifiedSignature": "start()",
      "datatype": {
        "id": "System.matcher.start.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the start index of the first character of the previous match.",
      "params": {}
    },
    "start(integer)": {
      "id": "System.matcher.start",
      "nodeType": "method",
      "name": "start",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "start",
        "textToLower": "start",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_start_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer start(Integer groupIndex)",
      "simplifiedSignature": "start(Integer)",
      "datatype": {
        "id": "System.matcher.start.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the start index of the subsequence captured by the group specified by the group index during the previous match operation. Captured groups are indexed from left to right, starting at one. Group zero denotes the entire pattern, so the expression m.start(0) is equivalent to m.start().",
      "params": {
        "groupIndex": {
          "id": "System.matcher.start.groupindex",
          "type": "var",
          "name": "groupIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "groupIndex",
            "textToLower": "groupindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_groupIndex_-1:0"
          },
          "signature": "Integer groupIndex",
          "datatype": {
            "id": "System.matcher.start.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "useanchoringbounds(boolean)": {
      "id": "System.matcher.useanchoringbounds",
      "nodeType": "method",
      "name": "useAnchoringBounds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "useAnchoringBounds",
        "textToLower": "useanchoringbounds",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_useAnchoringBounds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Matcher useAnchoringBounds(Boolean anchoringBounds)",
      "simplifiedSignature": "useAnchoringBounds(Boolean)",
      "datatype": {
        "id": "System.matcher.useanchoringbounds.Matcher",
        "nodeType": "datatype",
        "name": "Matcher"
      },
      "description": "Sets the anchoring bounds of the region for the Matcher object. By default, a Matcher object uses anchoring bounds regions.",
      "params": {
        "anchoringBounds": {
          "id": "System.matcher.useanchoringbounds.anchoringbounds",
          "type": "var",
          "name": "anchoringBounds",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "anchoringBounds",
            "textToLower": "anchoringbounds",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_anchoringBounds_-1:0"
          },
          "signature": "Boolean anchoringBounds",
          "datatype": {
            "id": "System.matcher.useanchoringbounds.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "usepattern(pattern)": {
      "id": "System.matcher.usepattern",
      "nodeType": "method",
      "name": "usePattern",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "usePattern",
        "textToLower": "usepattern",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_usePattern_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Matcher usePattern(Pattern pattern)",
      "simplifiedSignature": "usePattern(Pattern)",
      "datatype": {
        "id": "System.matcher.usepattern.Matcher",
        "nodeType": "datatype",
        "name": "Matcher"
      },
      "description": "Changes the Pattern object that the Matcher object uses to find matches. This method causes the Matcher object to lose information about the groups of the last match that occurred. The Matcher object's position in the input is maintained.",
      "params": {
        "pattern": {
          "id": "System.matcher.usepattern.pattern",
          "type": "var",
          "name": "pattern",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "pattern",
            "textToLower": "pattern",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_pattern_-1:0"
          },
          "signature": "Pattern pattern",
          "datatype": {
            "id": "System.matcher.usepattern.pattern",
            "nodeType": "datatype",
            "name": "Pattern"
          }
        }
      }
    },
    "usetransparentbounds(boolean)": {
      "id": "System.matcher.usetransparentbounds",
      "nodeType": "method",
      "name": "useTransparentBounds",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "useTransparentBounds",
        "textToLower": "usetransparentbounds",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_useTransparentBounds_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Matcher useTransparentBounds(Boolean transparentBounds)",
      "simplifiedSignature": "useTransparentBounds(Boolean)",
      "datatype": {
        "id": "System.matcher.usetransparentbounds.Matcher",
        "nodeType": "datatype",
        "name": "Matcher"
      },
      "description": "Sets the transparency bounds for this Matcher object. By default, a Matcher object uses anchoring bounds regions.",
      "params": {
        "transparentBounds": {
          "id": "System.matcher.usetransparentbounds.transparentbounds",
          "type": "var",
          "name": "transparentBounds",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "transparentBounds",
            "textToLower": "transparentbounds",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_transparentBounds_-1:0"
          },
          "signature": "Boolean transparentBounds",
          "datatype": {
            "id": "System.matcher.usetransparentbounds.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}