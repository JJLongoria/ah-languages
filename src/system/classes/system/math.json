{
  "id": "System.math",
  "type": "class",
  "name": "Math",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Math",
    "textToLower": "math",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Math_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for mathematical operations.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_math.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "abs(decimal)": {
      "id": "System.math.abs",
      "type": "method",
      "name": "abs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "abs",
        "textToLower": "abs",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_abs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal abs(Decimal decimalValue)",
      "simplifiedSignature": "abs(Decimal)",
      "datatype": {
        "id": "System.math.abs.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the absolute value of the specified Decimal.",
      "variables": {
        "decimalValue": {
          "id": "System.math.abs.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.abs.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "abs(double)": {
      "id": "System.math.abs",
      "type": "method",
      "name": "abs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "abs",
        "textToLower": "abs",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_abs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double abs(Double doubleValue)",
      "simplifiedSignature": "abs(Double)",
      "datatype": {
        "id": "System.math.abs.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the absolute value of the specified Double.",
      "variables": {
        "doubleValue": {
          "id": "System.math.abs.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.abs.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "abs(integer)": {
      "id": "System.math.abs",
      "type": "method",
      "name": "abs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "abs",
        "textToLower": "abs",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_abs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Integer abs(Integer integerValue)",
      "simplifiedSignature": "abs(Integer)",
      "datatype": {
        "id": "System.math.abs.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the absolute value of the specified Integer.",
      "variables": {
        "integerValue": {
          "id": "System.math.abs.integervalue",
          "type": "var",
          "name": "integerValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerValue",
            "textToLower": "integervalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerValue_-1:0"
          },
          "signature": "Integer integerValue",
          "datatype": {
            "id": "System.math.abs.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "abs(long)": {
      "id": "System.math.abs",
      "type": "method",
      "name": "abs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "abs",
        "textToLower": "abs",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_abs_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Long abs(Long longValue)",
      "simplifiedSignature": "abs(Long)",
      "datatype": {
        "id": "System.math.abs.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the absolute value of the specified Long.",
      "variables": {
        "longValue": {
          "id": "System.math.abs.longvalue",
          "type": "var",
          "name": "longValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longValue",
            "textToLower": "longvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longValue_-1:0"
          },
          "signature": "Long longValue",
          "datatype": {
            "id": "System.math.abs.long",
            "type": "datatype",
            "name": "Long"
          }
        }
      }
    },
    "acos(decimal)": {
      "id": "System.math.acos",
      "type": "method",
      "name": "acos",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "acos",
        "textToLower": "acos",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_acos_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal acos(Decimal decimalAngle)",
      "simplifiedSignature": "acos(Decimal)",
      "datatype": {
        "id": "System.math.acos.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the arc cosine of an angle, in the range of 0.0 through pi.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.acos.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.acos.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "acos(double)": {
      "id": "System.math.acos",
      "type": "method",
      "name": "acos",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "acos",
        "textToLower": "acos",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_acos_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double acos(Double doubleAngle)",
      "simplifiedSignature": "acos(Double)",
      "datatype": {
        "id": "System.math.acos.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the arc cosine of an angle, in the range of 0.0 through pi.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.acos.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.acos.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "asin(decimal)": {
      "id": "System.math.asin",
      "type": "method",
      "name": "asin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "asin",
        "textToLower": "asin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_asin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal asin(Decimal decimalAngle)",
      "simplifiedSignature": "asin(Decimal)",
      "datatype": {
        "id": "System.math.asin.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the arc sine of an angle, in the range of -pi/2 through pi/2.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.asin.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.asin.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "asin(double)": {
      "id": "System.math.asin",
      "type": "method",
      "name": "asin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "asin",
        "textToLower": "asin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_asin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double asin(Double doubleAngle)",
      "simplifiedSignature": "asin(Double)",
      "datatype": {
        "id": "System.math.asin.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the arc sine of an angle, in the range of -pi/2 through pi/2.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.asin.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.asin.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "atan(decimal)": {
      "id": "System.math.atan",
      "type": "method",
      "name": "atan",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "atan",
        "textToLower": "atan",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_atan_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal atan(Decimal decimalAngle)",
      "simplifiedSignature": "atan(Decimal)",
      "datatype": {
        "id": "System.math.atan.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the arc tangent of an angle, in the range of -pi/2 through pi/2.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.atan.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.atan.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "atan(double)": {
      "id": "System.math.atan",
      "type": "method",
      "name": "atan",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "atan",
        "textToLower": "atan",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_atan_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double atan(Double doubleAngle)",
      "simplifiedSignature": "atan(Double)",
      "datatype": {
        "id": "System.math.atan.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the arc tangent of an angle, in the range of -pi/2 through pi/2.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.atan.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.atan.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "atan2(decimal,decimal)": {
      "id": "System.math.atan2",
      "type": "method",
      "name": "atan2",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "atan2",
        "textToLower": "atan2",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_atan2_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal atan2(Decimal xCoordinate, Decimal yCoordinate)",
      "simplifiedSignature": "atan2(Decimal,Decimal)",
      "datatype": {
        "id": "System.math.atan2.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Converts rectangular coordinates (xCoordinate and yCoordinate) to polar (r and theta). This method computes the phase theta by computing an arc tangent of xCoordinate/yCoordinate in the range of -pi to pi.",
      "variables": {
        "xCoordinate": {
          "id": "System.math.atan2.xcoordinate",
          "type": "var",
          "name": "xCoordinate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "xCoordinate",
            "textToLower": "xcoordinate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_xCoordinate_-1:0"
          },
          "signature": "Decimal xCoordinate",
          "datatype": {
            "id": "System.math.atan2.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        },
        "yCoordinate": {
          "id": "System.math.atan2.ycoordinate",
          "type": "var",
          "name": "yCoordinate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "yCoordinate",
            "textToLower": "ycoordinate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_yCoordinate_-1:0"
          },
          "signature": "Decimal yCoordinate",
          "datatype": {
            "id": "System.math.atan2.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "atan2(double,double)": {
      "id": "System.math.atan2",
      "type": "method",
      "name": "atan2",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "atan2",
        "textToLower": "atan2",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_atan2_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double atan2(Double xCoordinate, Double yCoordinate)",
      "simplifiedSignature": "atan2(Double,Double)",
      "datatype": {
        "id": "System.math.atan2.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Converts rectangular coordinates (xCoordinate and yCoordinate) to polar (r and theta). This method computes the phase theta by computing an arc tangent of xCoordinate/yCoordinate in the range of -pi to pi.",
      "variables": {
        "xCoordinate": {
          "id": "System.math.atan2.xcoordinate",
          "type": "var",
          "name": "xCoordinate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "xCoordinate",
            "textToLower": "xcoordinate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_xCoordinate_-1:0"
          },
          "signature": "Double xCoordinate",
          "datatype": {
            "id": "System.math.atan2.double",
            "type": "datatype",
            "name": "Double"
          }
        },
        "yCoordinate": {
          "id": "System.math.atan2.ycoordinate",
          "type": "var",
          "name": "yCoordinate",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "yCoordinate",
            "textToLower": "ycoordinate",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_yCoordinate_-1:0"
          },
          "signature": "Double yCoordinate",
          "datatype": {
            "id": "System.math.atan2.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "cbrt(decimal)": {
      "id": "System.math.cbrt",
      "type": "method",
      "name": "cbrt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cbrt",
        "textToLower": "cbrt",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cbrt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal cbrt(Decimal decimalValue)",
      "simplifiedSignature": "cbrt(Decimal)",
      "datatype": {
        "id": "System.math.cbrt.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the cube root of the specified Decimal. The cube root of a negative value is the negative of the cube root of that value's magnitude.",
      "variables": {
        "decimalValue": {
          "id": "System.math.cbrt.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.cbrt.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "cbrt(double)": {
      "id": "System.math.cbrt",
      "type": "method",
      "name": "cbrt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cbrt",
        "textToLower": "cbrt",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cbrt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double cbrt(Double doubleValue)",
      "simplifiedSignature": "cbrt(Double)",
      "datatype": {
        "id": "System.math.cbrt.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the cube root of the specified Double. The cube root of a negative value is the negative of the cube root of that value's magnitude.",
      "variables": {
        "doubleValue": {
          "id": "System.math.cbrt.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.cbrt.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "ceil(decimal)": {
      "id": "System.math.ceil",
      "type": "method",
      "name": "ceil",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "ceil",
        "textToLower": "ceil",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_ceil_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal ceil(Decimal decimalValue)",
      "simplifiedSignature": "ceil(Decimal)",
      "datatype": {
        "id": "System.math.ceil.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the smallest (closest to negative infinity) Decimal that is not less than the argument and is equal to a mathematical integer.",
      "variables": {
        "decimalValue": {
          "id": "System.math.ceil.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.ceil.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "ceil(double)": {
      "id": "System.math.ceil",
      "type": "method",
      "name": "ceil",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "ceil",
        "textToLower": "ceil",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_ceil_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double ceil(Double doubleValue)",
      "simplifiedSignature": "ceil(Double)",
      "datatype": {
        "id": "System.math.ceil.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the smallest (closest to negative infinity) Double that is not less than the argument and is equal to a mathematical integer.",
      "variables": {
        "doubleValue": {
          "id": "System.math.ceil.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.ceil.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "cos(decimal)": {
      "id": "System.math.cos",
      "type": "method",
      "name": "cos",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cos",
        "textToLower": "cos",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cos_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal cos(Decimal decimalAngle)",
      "simplifiedSignature": "cos(Decimal)",
      "datatype": {
        "id": "System.math.cos.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the trigonometric cosine of the angle specified by decimalAngle.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.cos.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.cos.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "cos(double)": {
      "id": "System.math.cos",
      "type": "method",
      "name": "cos",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cos",
        "textToLower": "cos",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cos_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double cos(Double doubleAngle)",
      "simplifiedSignature": "cos(Double)",
      "datatype": {
        "id": "System.math.cos.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the trigonometric cosine of the angle specified by doubleAngle.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.cos.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.cos.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "cosh(decimal)": {
      "id": "System.math.cosh",
      "type": "method",
      "name": "cosh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cosh",
        "textToLower": "cosh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cosh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal cosh(Decimal decimalAngle)",
      "simplifiedSignature": "cosh(Decimal)",
      "datatype": {
        "id": "System.math.cosh.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the hyperbolic cosine of decimalAngle. The hyperbolic cosine of d is defined to be (ex + e-x)/2 where e is Euler's number.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.cosh.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.cosh.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "cosh(double)": {
      "id": "System.math.cosh",
      "type": "method",
      "name": "cosh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cosh",
        "textToLower": "cosh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cosh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double cosh(Double doubleAngle)",
      "simplifiedSignature": "cosh(Double)",
      "datatype": {
        "id": "System.math.cosh.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the hyperbolic cosine of doubleAngle. The hyperbolic cosine of d is defined to be (ex + e-x)/2 where e is Euler's number.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.cosh.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.cosh.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "exp(decimal)": {
      "id": "System.math.exp",
      "type": "method",
      "name": "exp",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "exp",
        "textToLower": "exp",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_exp_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal exp(Decimal exponentDecimal)",
      "simplifiedSignature": "exp(Decimal)",
      "datatype": {
        "id": "System.math.exp.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns Euler's number e raised to the power of the specified Decimal.",
      "variables": {
        "exponentDecimal": {
          "id": "System.math.exp.exponentdecimal",
          "type": "var",
          "name": "exponentDecimal",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exponentDecimal",
            "textToLower": "exponentdecimal",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exponentDecimal_-1:0"
          },
          "signature": "Decimal exponentDecimal",
          "datatype": {
            "id": "System.math.exp.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "exp(double)": {
      "id": "System.math.exp",
      "type": "method",
      "name": "exp",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "exp",
        "textToLower": "exp",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_exp_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double exp(Double exponentDouble)",
      "simplifiedSignature": "exp(Double)",
      "datatype": {
        "id": "System.math.exp.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns Euler's number e raised to the power of the specified Double.",
      "variables": {
        "exponentDouble": {
          "id": "System.math.exp.exponentdouble",
          "type": "var",
          "name": "exponentDouble",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exponentDouble",
            "textToLower": "exponentdouble",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exponentDouble_-1:0"
          },
          "signature": "Double exponentDouble",
          "datatype": {
            "id": "System.math.exp.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "floor(decimal)": {
      "id": "System.math.floor",
      "type": "method",
      "name": "floor",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "floor",
        "textToLower": "floor",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_floor_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal floor(Decimal decimalValue)",
      "simplifiedSignature": "floor(Decimal)",
      "datatype": {
        "id": "System.math.floor.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the largest (closest to positive infinity) Decimal that is not greater than the argument and is equal to a mathematical integer.",
      "variables": {
        "decimalValue": {
          "id": "System.math.floor.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.floor.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "floor(double)": {
      "id": "System.math.floor",
      "type": "method",
      "name": "floor",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "floor",
        "textToLower": "floor",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_floor_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double floor(Double doubleValue)",
      "simplifiedSignature": "floor(Double)",
      "datatype": {
        "id": "System.math.floor.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the largest (closest to positive infinity) Double that is not greater than the argument and is equal to a mathematical integer.",
      "variables": {
        "doubleValue": {
          "id": "System.math.floor.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.floor.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "log(decimal)": {
      "id": "System.math.log",
      "type": "method",
      "name": "log",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "log",
        "textToLower": "log",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_log_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal log(Decimal decimalValue)",
      "simplifiedSignature": "log(Decimal)",
      "datatype": {
        "id": "System.math.log.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the natural logarithm (base e) of the specified Decimal.",
      "variables": {
        "decimalValue": {
          "id": "System.math.log.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.log.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "log(double)": {
      "id": "System.math.log",
      "type": "method",
      "name": "log",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "log",
        "textToLower": "log",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_log_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double log(Double doubleValue)",
      "simplifiedSignature": "log(Double)",
      "datatype": {
        "id": "System.math.log.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the natural logarithm (base e) of the specified Double.",
      "variables": {
        "doubleValue": {
          "id": "System.math.log.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.log.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "log10(decimal)": {
      "id": "System.math.log10",
      "type": "method",
      "name": "log10",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "log10",
        "textToLower": "log10",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_log10_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal log10(Decimal decimalValue)",
      "simplifiedSignature": "log10(Decimal)",
      "datatype": {
        "id": "System.math.log10.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the logarithm (base 10) of the specified Decimal.",
      "variables": {
        "decimalValue": {
          "id": "System.math.log10.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.log10.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "log10(double)": {
      "id": "System.math.log10",
      "type": "method",
      "name": "log10",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "log10",
        "textToLower": "log10",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_log10_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double log10(Double doubleValue)",
      "simplifiedSignature": "log10(Double)",
      "datatype": {
        "id": "System.math.log10.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the logarithm (base 10) of the specified Double.",
      "variables": {
        "doubleValue": {
          "id": "System.math.log10.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.log10.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "max(decimal,decimal)": {
      "id": "System.math.max",
      "type": "method",
      "name": "max",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "max",
        "textToLower": "max",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_max_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal max(Decimal decimalValue1, Decimal decimalValue2)",
      "simplifiedSignature": "max(Decimal,Decimal)",
      "datatype": {
        "id": "System.math.max.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the larger of the two specified Decimals.",
      "variables": {
        "decimalValue1": {
          "id": "System.math.max.decimalvalue1",
          "type": "var",
          "name": "decimalValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue1",
            "textToLower": "decimalvalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue1_-1:0"
          },
          "signature": "Decimal decimalValue1",
          "datatype": {
            "id": "System.math.max.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        },
        "decimalValue2": {
          "id": "System.math.max.decimalvalue2",
          "type": "var",
          "name": "decimalValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue2",
            "textToLower": "decimalvalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue2_-1:0"
          },
          "signature": "Decimal decimalValue2",
          "datatype": {
            "id": "System.math.max.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "max(double,double)": {
      "id": "System.math.max",
      "type": "method",
      "name": "max",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "max",
        "textToLower": "max",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_max_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double max(Double doubleValue1, Double doubleValue2)",
      "simplifiedSignature": "max(Double,Double)",
      "datatype": {
        "id": "System.math.max.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the larger of the two specified Doubles.",
      "variables": {
        "doubleValue1": {
          "id": "System.math.max.doublevalue1",
          "type": "var",
          "name": "doubleValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue1",
            "textToLower": "doublevalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue1_-1:0"
          },
          "signature": "Double doubleValue1",
          "datatype": {
            "id": "System.math.max.double",
            "type": "datatype",
            "name": "Double"
          }
        },
        "doubleValue2": {
          "id": "System.math.max.doublevalue2",
          "type": "var",
          "name": "doubleValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue2",
            "textToLower": "doublevalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue2_-1:0"
          },
          "signature": "Double doubleValue2",
          "datatype": {
            "id": "System.math.max.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "max(integer,integer)": {
      "id": "System.math.max",
      "type": "method",
      "name": "max",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "max",
        "textToLower": "max",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_max_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Integer max(Integer integerValue1, Integer integerValue2)",
      "simplifiedSignature": "max(Integer,Integer)",
      "datatype": {
        "id": "System.math.max.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the larger of the two specified Integers.",
      "variables": {
        "integerValue1": {
          "id": "System.math.max.integervalue1",
          "type": "var",
          "name": "integerValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerValue1",
            "textToLower": "integervalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerValue1_-1:0"
          },
          "signature": "Integer integerValue1",
          "datatype": {
            "id": "System.math.max.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "integerValue2": {
          "id": "System.math.max.integervalue2",
          "type": "var",
          "name": "integerValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerValue2",
            "textToLower": "integervalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerValue2_-1:0"
          },
          "signature": "Integer integerValue2",
          "datatype": {
            "id": "System.math.max.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "max(long,long)": {
      "id": "System.math.max",
      "type": "method",
      "name": "max",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "max",
        "textToLower": "max",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_max_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Long max(Long longValue1, Long longValue2)",
      "simplifiedSignature": "max(Long,Long)",
      "datatype": {
        "id": "System.math.max.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the larger of the two specified Longs.",
      "variables": {
        "longValue1": {
          "id": "System.math.max.longvalue1",
          "type": "var",
          "name": "longValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longValue1",
            "textToLower": "longvalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longValue1_-1:0"
          },
          "signature": "Long longValue1",
          "datatype": {
            "id": "System.math.max.long",
            "type": "datatype",
            "name": "Long"
          }
        },
        "longValue2": {
          "id": "System.math.max.longvalue2",
          "type": "var",
          "name": "longValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longValue2",
            "textToLower": "longvalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longValue2_-1:0"
          },
          "signature": "Long longValue2",
          "datatype": {
            "id": "System.math.max.long",
            "type": "datatype",
            "name": "Long"
          }
        }
      }
    },
    "min(decimal,decimal)": {
      "id": "System.math.min",
      "type": "method",
      "name": "min",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "min",
        "textToLower": "min",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_min_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal min(Decimal decimalValue1, Decimal decimalValue2)",
      "simplifiedSignature": "min(Decimal,Decimal)",
      "datatype": {
        "id": "System.math.min.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the smaller of the two specified Decimals.",
      "variables": {
        "decimalValue1": {
          "id": "System.math.min.decimalvalue1",
          "type": "var",
          "name": "decimalValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue1",
            "textToLower": "decimalvalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue1_-1:0"
          },
          "signature": "Decimal decimalValue1",
          "datatype": {
            "id": "System.math.min.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        },
        "decimalValue2": {
          "id": "System.math.min.decimalvalue2",
          "type": "var",
          "name": "decimalValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue2",
            "textToLower": "decimalvalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue2_-1:0"
          },
          "signature": "Decimal decimalValue2",
          "datatype": {
            "id": "System.math.min.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "min(double,double)": {
      "id": "System.math.min",
      "type": "method",
      "name": "min",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "min",
        "textToLower": "min",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_min_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double min(Double doubleValue1, Double doubleValue2)",
      "simplifiedSignature": "min(Double,Double)",
      "datatype": {
        "id": "System.math.min.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the smaller of the two specified Doubles.",
      "variables": {
        "doubleValue1": {
          "id": "System.math.min.doublevalue1",
          "type": "var",
          "name": "doubleValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue1",
            "textToLower": "doublevalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue1_-1:0"
          },
          "signature": "Double doubleValue1",
          "datatype": {
            "id": "System.math.min.double",
            "type": "datatype",
            "name": "Double"
          }
        },
        "doubleValue2": {
          "id": "System.math.min.doublevalue2",
          "type": "var",
          "name": "doubleValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue2",
            "textToLower": "doublevalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue2_-1:0"
          },
          "signature": "Double doubleValue2",
          "datatype": {
            "id": "System.math.min.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "min(integer,integer)": {
      "id": "System.math.min",
      "type": "method",
      "name": "min",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "min",
        "textToLower": "min",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_min_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Integer min(Integer integerValue1, Integer integerValue2)",
      "simplifiedSignature": "min(Integer,Integer)",
      "datatype": {
        "id": "System.math.min.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the smaller of the two specified Integers.",
      "variables": {
        "integerValue1": {
          "id": "System.math.min.integervalue1",
          "type": "var",
          "name": "integerValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerValue1",
            "textToLower": "integervalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerValue1_-1:0"
          },
          "signature": "Integer integerValue1",
          "datatype": {
            "id": "System.math.min.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "integerValue2": {
          "id": "System.math.min.integervalue2",
          "type": "var",
          "name": "integerValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerValue2",
            "textToLower": "integervalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerValue2_-1:0"
          },
          "signature": "Integer integerValue2",
          "datatype": {
            "id": "System.math.min.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "min(long,long)": {
      "id": "System.math.min",
      "type": "method",
      "name": "min",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "min",
        "textToLower": "min",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_min_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Long min(Long longValue1, Long longValue2)",
      "simplifiedSignature": "min(Long,Long)",
      "datatype": {
        "id": "System.math.min.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the smaller of the two specified Longs.",
      "variables": {
        "longValue1": {
          "id": "System.math.min.longvalue1",
          "type": "var",
          "name": "longValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longValue1",
            "textToLower": "longvalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longValue1_-1:0"
          },
          "signature": "Long longValue1",
          "datatype": {
            "id": "System.math.min.long",
            "type": "datatype",
            "name": "Long"
          }
        },
        "longValue2": {
          "id": "System.math.min.longvalue2",
          "type": "var",
          "name": "longValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longValue2",
            "textToLower": "longvalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longValue2_-1:0"
          },
          "signature": "Long longValue2",
          "datatype": {
            "id": "System.math.min.long",
            "type": "datatype",
            "name": "Long"
          }
        }
      }
    },
    "mod(integer,integer)": {
      "id": "System.math.mod",
      "type": "method",
      "name": "mod",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "mod",
        "textToLower": "mod",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_mod_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Integer mod(Integer integerValue1, Integer integerValue2)",
      "simplifiedSignature": "mod(Integer,Integer)",
      "datatype": {
        "id": "System.math.mod.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the remainder of integerValue1 divided by integerValue2.",
      "variables": {
        "integerValue1": {
          "id": "System.math.mod.integervalue1",
          "type": "var",
          "name": "integerValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerValue1",
            "textToLower": "integervalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerValue1_-1:0"
          },
          "signature": "Integer integerValue1",
          "datatype": {
            "id": "System.math.mod.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "integerValue2": {
          "id": "System.math.mod.integervalue2",
          "type": "var",
          "name": "integerValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerValue2",
            "textToLower": "integervalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerValue2_-1:0"
          },
          "signature": "Integer integerValue2",
          "datatype": {
            "id": "System.math.mod.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "mod(long,long)": {
      "id": "System.math.mod",
      "type": "method",
      "name": "mod",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "mod",
        "textToLower": "mod",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_mod_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Long mod(Long longValue1, Long longValue2)",
      "simplifiedSignature": "mod(Long,Long)",
      "datatype": {
        "id": "System.math.mod.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the remainder of longValue1 divided by longValue2.",
      "variables": {
        "longValue1": {
          "id": "System.math.mod.longvalue1",
          "type": "var",
          "name": "longValue1",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longValue1",
            "textToLower": "longvalue1",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longValue1_-1:0"
          },
          "signature": "Long longValue1",
          "datatype": {
            "id": "System.math.mod.long",
            "type": "datatype",
            "name": "Long"
          }
        },
        "longValue2": {
          "id": "System.math.mod.longvalue2",
          "type": "var",
          "name": "longValue2",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longValue2",
            "textToLower": "longvalue2",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longValue2_-1:0"
          },
          "signature": "Long longValue2",
          "datatype": {
            "id": "System.math.mod.long",
            "type": "datatype",
            "name": "Long"
          }
        }
      }
    },
    "pow(double,double)": {
      "id": "System.math.pow",
      "type": "method",
      "name": "pow",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "pow",
        "textToLower": "pow",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_pow_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double pow(Double doubleValue, Double exponent)",
      "simplifiedSignature": "pow(Double,Double)",
      "datatype": {
        "id": "System.math.pow.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the value of the first Double raised to the power of exponent.",
      "variables": {
        "doubleValue": {
          "id": "System.math.pow.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.pow.double",
            "type": "datatype",
            "name": "Double"
          }
        },
        "exponent": {
          "id": "System.math.pow.exponent",
          "type": "var",
          "name": "exponent",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exponent",
            "textToLower": "exponent",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exponent_-1:0"
          },
          "signature": "Double exponent",
          "datatype": {
            "id": "System.math.pow.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "random()": {
      "id": "System.math.random",
      "type": "method",
      "name": "random",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "random",
        "textToLower": "random",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_random_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double random()",
      "simplifiedSignature": "random()",
      "datatype": {
        "id": "System.math.random.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns a positive Double that is greater than or equal to 0.0 and less than 1.0.",
      "variables": {}
    },
    "rint(decimal)": {
      "id": "System.math.rint",
      "type": "method",
      "name": "rint",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rint",
        "textToLower": "rint",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rint_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal rint(Decimal decimalValue)",
      "simplifiedSignature": "rint(Decimal)",
      "datatype": {
        "id": "System.math.rint.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the value that is closest in value to decimalValue and is equal to a mathematical integer.",
      "variables": {
        "decimalValue": {
          "id": "System.math.rint.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.rint.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "rint(double)": {
      "id": "System.math.rint",
      "type": "method",
      "name": "rint",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rint",
        "textToLower": "rint",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rint_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double rint(Double doubleValue)",
      "simplifiedSignature": "rint(Double)",
      "datatype": {
        "id": "System.math.rint.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the value that is closest in value to doubleValue and is equal to a mathematical integer.",
      "variables": {
        "doubleValue": {
          "id": "System.math.rint.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.rint.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "round(double)": {
      "id": "System.math.round",
      "type": "method",
      "name": "round",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "round",
        "textToLower": "round",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_round_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Integer round(Double doubleValue)",
      "simplifiedSignature": "round(Double)",
      "datatype": {
        "id": "System.math.round.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Do not use. This method is deprecated as of the Winter '08 release. Instead, use Math.roundToLong. Returns the closest Integer to the specified Double. If the result is less than -2,147,483,648 or greater than 2,147,483,647, Apex generates an error.",
      "variables": {
        "doubleValue": {
          "id": "System.math.round.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.round.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "round(decimal)": {
      "id": "System.math.round",
      "type": "method",
      "name": "round",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "round",
        "textToLower": "round",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_round_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Integer round(Decimal decimalValue)",
      "simplifiedSignature": "round(Decimal)",
      "datatype": {
        "id": "System.math.round.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the rounded approximation of this Decimal. The number  is rounded to zero decimal places using half-even rounding mode, that is, it rounds towards the “nearest neighbor” unless both neighbors are equidistant, in which case, this mode rounds towards the even neighbor.",
      "variables": {
        "decimalValue": {
          "id": "System.math.round.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.round.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "roundtolong(decimal)": {
      "id": "System.math.roundtolong",
      "type": "method",
      "name": "roundToLong",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "roundToLong",
        "textToLower": "roundtolong",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_roundToLong_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Long roundToLong(Decimal decimalValue)",
      "simplifiedSignature": "roundToLong(Decimal)",
      "datatype": {
        "id": "System.math.roundtolong.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the rounded approximation of this Decimal. The number  is rounded to zero decimal places using half-even rounding mode, that is, it rounds towards the “nearest neighbor” unless both neighbors are equidistant, in which case, this mode rounds towards the even neighbor.",
      "variables": {
        "decimalValue": {
          "id": "System.math.roundtolong.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.roundtolong.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "roundtolong(double)": {
      "id": "System.math.roundtolong",
      "type": "method",
      "name": "roundToLong",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "roundToLong",
        "textToLower": "roundtolong",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_roundToLong_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Long roundToLong(Double doubleValue)",
      "simplifiedSignature": "roundToLong(Double)",
      "datatype": {
        "id": "System.math.roundtolong.Long",
        "type": "datatype",
        "name": "Long"
      },
      "description": "Returns the closest Long to the specified Double.",
      "variables": {
        "doubleValue": {
          "id": "System.math.roundtolong.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.roundtolong.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "signum(decimal)": {
      "id": "System.math.signum",
      "type": "method",
      "name": "signum",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "signum",
        "textToLower": "signum",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_signum_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal signum(Decimal decimalValue)",
      "simplifiedSignature": "signum(Decimal)",
      "datatype": {
        "id": "System.math.signum.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the signum function of the specified Decimal, which is 0 if decimalValue is 0, 1.0 if decimalValue is greater than 0, -1.0 if decimalValue is less than 0.",
      "variables": {
        "decimalValue": {
          "id": "System.math.signum.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.signum.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "signum(double)": {
      "id": "System.math.signum",
      "type": "method",
      "name": "signum",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "signum",
        "textToLower": "signum",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_signum_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double signum(Double doubleValue)",
      "simplifiedSignature": "signum(Double)",
      "datatype": {
        "id": "System.math.signum.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the signum function of the specified Double, which is 0 if doubleValue is 0, 1.0 if doubleValue is greater than 0, -1.0 if doubleValue is less than 0.",
      "variables": {
        "doubleValue": {
          "id": "System.math.signum.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.signum.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "sin(decimal)": {
      "id": "System.math.sin",
      "type": "method",
      "name": "sin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sin",
        "textToLower": "sin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal sin(Decimal decimalAngle)",
      "simplifiedSignature": "sin(Decimal)",
      "datatype": {
        "id": "System.math.sin.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the trigonometric sine of the angle specified by decimalAngle.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.sin.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.sin.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "sin(double)": {
      "id": "System.math.sin",
      "type": "method",
      "name": "sin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sin",
        "textToLower": "sin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double sin(Double doubleAngle)",
      "simplifiedSignature": "sin(Double)",
      "datatype": {
        "id": "System.math.sin.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the trigonometric sine of the angle specified by doubleAngle.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.sin.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.sin.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "sinh(decimal)": {
      "id": "System.math.sinh",
      "type": "method",
      "name": "sinh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sinh",
        "textToLower": "sinh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sinh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal sinh(Decimal decimalAngle)",
      "simplifiedSignature": "sinh(Decimal)",
      "datatype": {
        "id": "System.math.sinh.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the hyperbolic sine of decimalAngle. The hyperbolic sine of decimalAngle is defined to be (ex - e-x)/2 where e is Euler's number.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.sinh.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.sinh.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "sinh(double)": {
      "id": "System.math.sinh",
      "type": "method",
      "name": "sinh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sinh",
        "textToLower": "sinh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sinh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double sinh(Double doubleAngle)",
      "simplifiedSignature": "sinh(Double)",
      "datatype": {
        "id": "System.math.sinh.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the hyperbolic sine of doubleAngle. The hyperbolic sine of doubleAngle is defined to be (ex - e-x)/2 where e is Euler's number.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.sinh.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.sinh.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "sqrt(decimal)": {
      "id": "System.math.sqrt",
      "type": "method",
      "name": "sqrt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sqrt",
        "textToLower": "sqrt",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sqrt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal sqrt(Decimal decimalValue)",
      "simplifiedSignature": "sqrt(Decimal)",
      "datatype": {
        "id": "System.math.sqrt.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the correctly rounded positive square root of decimalValue.",
      "variables": {
        "decimalValue": {
          "id": "System.math.sqrt.decimalvalue",
          "type": "var",
          "name": "decimalValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalValue",
            "textToLower": "decimalvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalValue_-1:0"
          },
          "signature": "Decimal decimalValue",
          "datatype": {
            "id": "System.math.sqrt.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "sqrt(double)": {
      "id": "System.math.sqrt",
      "type": "method",
      "name": "sqrt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sqrt",
        "textToLower": "sqrt",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sqrt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double sqrt(Double doubleValue)",
      "simplifiedSignature": "sqrt(Double)",
      "datatype": {
        "id": "System.math.sqrt.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the correctly rounded positive square root of doubleValue.",
      "variables": {
        "doubleValue": {
          "id": "System.math.sqrt.doublevalue",
          "type": "var",
          "name": "doubleValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleValue",
            "textToLower": "doublevalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleValue_-1:0"
          },
          "signature": "Double doubleValue",
          "datatype": {
            "id": "System.math.sqrt.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "tan(decimal)": {
      "id": "System.math.tan",
      "type": "method",
      "name": "tan",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "tan",
        "textToLower": "tan",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_tan_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal tan(Decimal decimalAngle)",
      "simplifiedSignature": "tan(Decimal)",
      "datatype": {
        "id": "System.math.tan.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the trigonometric tangent of the angle specified by decimalAngle.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.tan.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.tan.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "tan(double)": {
      "id": "System.math.tan",
      "type": "method",
      "name": "tan",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "tan",
        "textToLower": "tan",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_tan_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double tan(Double doubleAngle)",
      "simplifiedSignature": "tan(Double)",
      "datatype": {
        "id": "System.math.tan.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the trigonometric tangent of the angle specified by doubleAngle.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.tan.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.tan.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "tanh(decimal)": {
      "id": "System.math.tanh",
      "type": "method",
      "name": "tanh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "tanh",
        "textToLower": "tanh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_tanh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Decimal tanh(Decimal decimalAngle)",
      "simplifiedSignature": "tanh(Decimal)",
      "datatype": {
        "id": "System.math.tanh.Decimal",
        "type": "datatype",
        "name": "Decimal"
      },
      "description": "Returns the hyperbolic tangent of decimalAngle. The hyperbolic tangent of decimalAngle is defined to be (ex - e-x)/(ex + e-x) where e is Euler's number. In other words, it is equivalent to sinh(x)/cosinh(x). The absolute value of the exact tanh is always less than 1.",
      "variables": {
        "decimalAngle": {
          "id": "System.math.tanh.decimalangle",
          "type": "var",
          "name": "decimalAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalAngle",
            "textToLower": "decimalangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalAngle_-1:0"
          },
          "signature": "Decimal decimalAngle",
          "datatype": {
            "id": "System.math.tanh.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "tanh(double)": {
      "id": "System.math.tanh",
      "type": "method",
      "name": "tanh",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "tanh",
        "textToLower": "tanh",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_tanh_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Double tanh(Double doubleAngle)",
      "simplifiedSignature": "tanh(Double)",
      "datatype": {
        "id": "System.math.tanh.Double",
        "type": "datatype",
        "name": "Double"
      },
      "description": "Returns the hyperbolic tangent of doubleAngle. The hyperbolic tangent of doubleAngle is defined to be (ex - e-x)/(ex + e-x) where e is Euler's number. In other words, it is equivalent to sinh(x)/cosinh(x). The absolute value of the exact tanh is always less than 1.",
      "variables": {
        "doubleAngle": {
          "id": "System.math.tanh.doubleangle",
          "type": "var",
          "name": "doubleAngle",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleAngle",
            "textToLower": "doubleangle",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleAngle_-1:0"
          },
          "signature": "Double doubleAngle",
          "datatype": {
            "id": "System.math.tanh.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}