{
  "id": "System.set",
  "nodeType": "class",
  "name": "Set",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Set",
    "textToLower": "set",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Set_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Represents a collection of unique elements with no duplicate values.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_set.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "add(object)": {
      "id": "System.set.add",
      "nodeType": "method",
      "name": "add",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "add",
        "textToLower": "add",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_add_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean add(Object setElement)",
      "simplifiedSignature": "add(Object)",
      "datatype": {
        "id": "System.set.add.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Adds an element to the set if it is not already present.",
      "params": {
        "setElement": {
          "id": "System.set.add.setelement",
          "type": "var",
          "name": "setElement",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "setElement",
            "textToLower": "setelement",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_setElement_-1:0"
          },
          "signature": "Object setElement",
          "datatype": {
            "id": "System.set.add.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "addall(list)": {
      "id": "System.set.addall",
      "nodeType": "method",
      "name": "addAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addAll",
        "textToLower": "addall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean addAll(List <Object>)",
      "simplifiedSignature": "addAll(List)",
      "datatype": {
        "id": "System.set.addall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Adds all of the elements in the specified list to the set if they are not already present.",
      "params": {
        "<Object>": {
          "id": "System.set.addall.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "List <Object>",
          "datatype": {
            "id": "System.set.addall.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "addall(set)": {
      "id": "System.set.addall",
      "nodeType": "method",
      "name": "addAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addAll",
        "textToLower": "addall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean addAll(Set <Object>)",
      "simplifiedSignature": "addAll(Set)",
      "datatype": {
        "id": "System.set.addall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Adds all of the elements in the specified set to the set that calls the method if they are not already present.",
      "params": {
        "<Object>": {
          "id": "System.set.addall.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "Set <Object>",
          "datatype": {
            "id": "System.set.addall.set",
            "nodeType": "datatype",
            "name": "Set"
          }
        }
      }
    },
    "clear()": {
      "id": "System.set.clear",
      "nodeType": "method",
      "name": "clear",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clear",
        "textToLower": "clear",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clear_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void clear()",
      "simplifiedSignature": "clear()",
      "datatype": {
        "id": "System.set.clear.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Removes all of the elements from the set.",
      "params": {}
    },
    "clone()": {
      "id": "System.set.clone",
      "nodeType": "method",
      "name": "clone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clone",
        "textToLower": "clone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Set (of same type) clone()",
      "simplifiedSignature": "clone()",
      "datatype": {
        "id": "System.set.clone.Set (of same type)",
        "nodeType": "datatype",
        "name": "Set (of same type)"
      },
      "description": "Makes a duplicate copy of the set.",
      "params": {}
    },
    "contains(object)": {
      "id": "System.set.contains",
      "nodeType": "method",
      "name": "contains",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "contains",
        "textToLower": "contains",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_contains_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean contains(Object setElement)",
      "simplifiedSignature": "contains(Object)",
      "datatype": {
        "id": "System.set.contains.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the set contains the specified element.",
      "params": {
        "setElement": {
          "id": "System.set.contains.setelement",
          "type": "var",
          "name": "setElement",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "setElement",
            "textToLower": "setelement",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_setElement_-1:0"
          },
          "signature": "Object setElement",
          "datatype": {
            "id": "System.set.contains.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "containsall(list)": {
      "id": "System.set.containsall",
      "nodeType": "method",
      "name": "containsAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "containsAll",
        "textToLower": "containsall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_containsAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean containsAll(List <Object>)",
      "simplifiedSignature": "containsAll(List)",
      "datatype": {
        "id": "System.set.containsall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the set contains all of the elements in the specified list. The list must be of the same type as the set that calls the method.",
      "params": {
        "<Object>": {
          "id": "System.set.containsall.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "List <Object>",
          "datatype": {
            "id": "System.set.containsall.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "containsall(set)": {
      "id": "System.set.containsall",
      "nodeType": "method",
      "name": "containsAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "containsAll",
        "textToLower": "containsall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_containsAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean containsAll(Set <Object>)",
      "simplifiedSignature": "containsAll(Set)",
      "datatype": {
        "id": "System.set.containsall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the set contains all of the elements in the specified set. The specified set must be of the same type as the original set that calls the method.",
      "params": {
        "<Object>": {
          "id": "System.set.containsall.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "Set <Object>",
          "datatype": {
            "id": "System.set.containsall.set",
            "nodeType": "datatype",
            "name": "Set"
          }
        }
      }
    },
    "equals(set)": {
      "id": "System.set.equals",
      "nodeType": "method",
      "name": "equals",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "equals",
        "textToLower": "equals",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_equals_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean equals(Set <Object>)",
      "simplifiedSignature": "equals(Set)",
      "datatype": {
        "id": "System.set.equals.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Compares this set with the specified set and returns true if both sets are equal; otherwise, returns false.",
      "params": {
        "<Object>": {
          "id": "System.set.equals.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "Set <Object>",
          "datatype": {
            "id": "System.set.equals.set",
            "nodeType": "datatype",
            "name": "Set"
          }
        }
      }
    },
    "hashcode()": {
      "id": "System.set.hashcode",
      "nodeType": "method",
      "name": "hashCode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hashCode",
        "textToLower": "hashcode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hashCode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer hashCode()",
      "simplifiedSignature": "hashCode()",
      "datatype": {
        "id": "System.set.hashcode.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the hashcode corresponding to this set and its contents.",
      "params": {}
    },
    "isempty()": {
      "id": "System.set.isempty",
      "nodeType": "method",
      "name": "isEmpty",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isEmpty",
        "textToLower": "isempty",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isEmpty_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isEmpty()",
      "simplifiedSignature": "isEmpty()",
      "datatype": {
        "id": "System.set.isempty.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the set has zero elements.",
      "params": {}
    },
    "remove(object)": {
      "id": "System.set.remove",
      "nodeType": "method",
      "name": "remove",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "remove",
        "textToLower": "remove",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_remove_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean remove(Object setElement)",
      "simplifiedSignature": "remove(Object)",
      "datatype": {
        "id": "System.set.remove.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Removes the specified element from the set if it is present.",
      "params": {
        "setElement": {
          "id": "System.set.remove.setelement",
          "type": "var",
          "name": "setElement",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "setElement",
            "textToLower": "setelement",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_setElement_-1:0"
          },
          "signature": "Object setElement",
          "datatype": {
            "id": "System.set.remove.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "removeall(list)": {
      "id": "System.set.removeall",
      "nodeType": "method",
      "name": "removeAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeAll",
        "textToLower": "removeall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean removeAll(List <Object>)",
      "simplifiedSignature": "removeAll(List)",
      "datatype": {
        "id": "System.set.removeall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Removes the elements in the specified list from the set if they are present.",
      "params": {
        "<Object>": {
          "id": "System.set.removeall.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "List <Object>",
          "datatype": {
            "id": "System.set.removeall.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "removeall(set)": {
      "id": "System.set.removeall",
      "nodeType": "method",
      "name": "removeAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeAll",
        "textToLower": "removeall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean removeAll(Set <Object>)",
      "simplifiedSignature": "removeAll(Set)",
      "datatype": {
        "id": "System.set.removeall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Removes the elements in the specified set from the original set if they are present.",
      "params": {
        "<Object>": {
          "id": "System.set.removeall.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "Set <Object>",
          "datatype": {
            "id": "System.set.removeall.set",
            "nodeType": "datatype",
            "name": "Set"
          }
        }
      }
    },
    "retainall(list)": {
      "id": "System.set.retainall",
      "nodeType": "method",
      "name": "retainAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "retainAll",
        "textToLower": "retainall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_retainAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean retainAll(List <Object>)",
      "simplifiedSignature": "retainAll(List)",
      "datatype": {
        "id": "System.set.retainall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Retains only the elements in this set that are contained in the specified list.",
      "params": {
        "<Object>": {
          "id": "System.set.retainall.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "List <Object>",
          "datatype": {
            "id": "System.set.retainall.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "retainall(set)": {
      "id": "System.set.retainall",
      "nodeType": "method",
      "name": "retainAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "retainAll",
        "textToLower": "retainall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_retainAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean retainAll(Set setOfElementsToRetain)",
      "simplifiedSignature": "retainAll(Set)",
      "datatype": {
        "id": "System.set.retainall.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Retains only the elements in the original set that are contained in the specified set.",
      "params": {
        "setOfElementsToRetain": {
          "id": "System.set.retainall.setofelementstoretain",
          "type": "var",
          "name": "setOfElementsToRetain",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "setOfElementsToRetain",
            "textToLower": "setofelementstoretain",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_setOfElementsToRetain_-1:0"
          },
          "signature": "Set setOfElementsToRetain",
          "datatype": {
            "id": "System.set.retainall.set",
            "nodeType": "datatype",
            "name": "Set"
          }
        }
      }
    },
    "size()": {
      "id": "System.set.size",
      "nodeType": "method",
      "name": "size",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "size",
        "textToLower": "size",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_size_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer size()",
      "simplifiedSignature": "size()",
      "datatype": {
        "id": "System.set.size.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of elements in the set (its cardinality).",
      "params": {}
    }
  },
  "constructors": {
    "set&lt;t&gt;()": {
      "id": "System.set.set&lt;t&gt;",
      "nodeType": "constructor",
      "name": "Set&lt;T&gt;",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "Set&lt;T&gt;",
        "textToLower": "set&lt;t&gt;",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_Set&lt;T&gt;_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Set&lt;T&gt;()",
      "simplifiedSignature": "Set&lt;T&gt;()",
      "datatype": {
        "id": "System.set.set&lt;t&gt;.constructor",
        "nodeType": "datatype",
        "name": "Set"
      },
      "description": "Creates a new instance of the Set class. A set can hold elements of any data type T.",
      "params": {}
    },
    "set&lt;t&gt;(set)": {
      "id": "System.set.set&lt;t&gt;",
      "nodeType": "constructor",
      "name": "Set&lt;T&gt;",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "Set&lt;T&gt;",
        "textToLower": "set&lt;t&gt;",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_Set&lt;T&gt;_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Set&lt;T&gt;(Set <T>)",
      "simplifiedSignature": "Set&lt;T&gt;(Set)",
      "datatype": {
        "id": "System.set.set&lt;t&gt;.constructor",
        "nodeType": "datatype",
        "name": "Set"
      },
      "description": "Creates a new instance of the Set class by copying the elements of the specified set. T is the data type of the elements in both sets and can be any data type.",
      "params": {
        "<T>": {
          "id": "System.set.set&lt;t&gt;.<t>",
          "type": "var",
          "name": "<T>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<T>",
            "textToLower": "<t>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<T>_-1:0"
          },
          "signature": "Set <T>",
          "datatype": {
            "id": "System.set.set&lt;t&gt;.set",
            "nodeType": "datatype",
            "name": "Set"
          }
        }
      }
    },
    "set&lt;t&gt;(list)": {
      "id": "System.set.set&lt;t&gt;",
      "nodeType": "constructor",
      "name": "Set&lt;T&gt;",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "Set&lt;T&gt;",
        "textToLower": "set&lt;t&gt;",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_Set&lt;T&gt;_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Set&lt;T&gt;(List <T>)",
      "simplifiedSignature": "Set&lt;T&gt;(List)",
      "datatype": {
        "id": "System.set.set&lt;t&gt;.constructor",
        "nodeType": "datatype",
        "name": "Set"
      },
      "description": "Creates a new instance of the Set class by coping the list elements. T is the data type of the elements in the set and list and can be any data type.",
      "params": {
        "<T>": {
          "id": "System.set.set&lt;t&gt;.<t>",
          "type": "var",
          "name": "<T>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<T>",
            "textToLower": "<t>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<T>_-1:0"
          },
          "signature": "List <T>",
          "datatype": {
            "id": "System.set.set&lt;t&gt;.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}