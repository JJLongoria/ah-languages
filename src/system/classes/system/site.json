{
  "id": "System.site",
  "nodeType": "class",
  "name": "Site",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Site",
    "textToLower": "site",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Site_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Use the Site Class to manage your Lightning Platform sites.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_sites.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "changepassword(string,string,string)": {
      "id": "System.site.changepassword",
      "nodeType": "method",
      "name": "changePassword",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "changePassword",
        "textToLower": "changepassword",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_changePassword_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static System.PageReference changePassword(String newPassword, String verifyNewPassword, String oldPassword)",
      "simplifiedSignature": "changePassword(String,String,String)",
      "datatype": {
        "id": "System.site.changepassword.System.PageReference",
        "nodeType": "datatype",
        "name": "System.PageReference"
      },
      "description": "Changes the password of the current user.",
      "params": {
        "newPassword": {
          "id": "System.site.changepassword.newpassword",
          "type": "var",
          "name": "newPassword",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "newPassword",
            "textToLower": "newpassword",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_newPassword_-1:0"
          },
          "signature": "String newPassword",
          "datatype": {
            "id": "System.site.changepassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "verifyNewPassword": {
          "id": "System.site.changepassword.verifynewpassword",
          "type": "var",
          "name": "verifyNewPassword",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "verifyNewPassword",
            "textToLower": "verifynewpassword",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_verifyNewPassword_-1:0"
          },
          "signature": "String verifyNewPassword",
          "datatype": {
            "id": "System.site.changepassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "oldPassword": {
          "id": "System.site.changepassword.oldpassword",
          "type": "var",
          "name": "oldPassword",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "oldPassword",
            "textToLower": "oldpassword",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_oldPassword_-1:0"
          },
          "signature": "String oldPassword",
          "datatype": {
            "id": "System.site.changepassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "createexternaluser(sobject,string)": {
      "id": "System.site.createexternaluser",
      "nodeType": "method",
      "name": "createExternalUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createExternalUser",
        "textToLower": "createexternaluser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createExternalUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Id createExternalUser(SObject user, String accountId)",
      "simplifiedSignature": "createExternalUser(SObject,String)",
      "datatype": {
        "id": "System.site.createexternaluser.Id",
        "nodeType": "datatype",
        "name": "Id"
      },
      "description": "Creates a community or a portal user for the given account and associates it with the community.",
      "params": {
        "user": {
          "id": "System.site.createexternaluser.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "SObject user",
          "datatype": {
            "id": "System.site.createexternaluser.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "accountId": {
          "id": "System.site.createexternaluser.accountid",
          "type": "var",
          "name": "accountId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accountId",
            "textToLower": "accountid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_accountId_-1:0"
          },
          "signature": "String accountId",
          "datatype": {
            "id": "System.site.createexternaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "createexternaluser(sobject,string,string)": {
      "id": "System.site.createexternaluser",
      "nodeType": "method",
      "name": "createExternalUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createExternalUser",
        "textToLower": "createexternaluser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createExternalUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Id createExternalUser(SObject user, String accountId, String password)",
      "simplifiedSignature": "createExternalUser(SObject,String,String)",
      "datatype": {
        "id": "System.site.createexternaluser.Id",
        "nodeType": "datatype",
        "name": "Id"
      },
      "description": "Creates a community or a portal user for the given account and associates it with the community. This method sends an email with the specified password to the user.",
      "params": {
        "user": {
          "id": "System.site.createexternaluser.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "SObject user",
          "datatype": {
            "id": "System.site.createexternaluser.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "accountId": {
          "id": "System.site.createexternaluser.accountid",
          "type": "var",
          "name": "accountId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accountId",
            "textToLower": "accountid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_accountId_-1:0"
          },
          "signature": "String accountId",
          "datatype": {
            "id": "System.site.createexternaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "password": {
          "id": "System.site.createexternaluser.password",
          "type": "var",
          "name": "password",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "password",
            "textToLower": "password",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_password_-1:0"
          },
          "signature": "String password",
          "datatype": {
            "id": "System.site.createexternaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "createexternaluser(sobject,string,string,boolean)": {
      "id": "System.site.createexternaluser",
      "nodeType": "method",
      "name": "createExternalUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createExternalUser",
        "textToLower": "createexternaluser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createExternalUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Id createExternalUser(SObject user, String accountId, String password, Boolean sendEmailConfirmation)",
      "simplifiedSignature": "createExternalUser(SObject,String,String,Boolean)",
      "datatype": {
        "id": "System.site.createexternaluser.Id",
        "nodeType": "datatype",
        "name": "Id"
      },
      "description": "Creates a community or portal user and associates it with the given account. This method sends the user an email with the specified password and a new user confirmation email.",
      "params": {
        "user": {
          "id": "System.site.createexternaluser.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "SObject user",
          "datatype": {
            "id": "System.site.createexternaluser.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "accountId": {
          "id": "System.site.createexternaluser.accountid",
          "type": "var",
          "name": "accountId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accountId",
            "textToLower": "accountid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_accountId_-1:0"
          },
          "signature": "String accountId",
          "datatype": {
            "id": "System.site.createexternaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "password": {
          "id": "System.site.createexternaluser.password",
          "type": "var",
          "name": "password",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "password",
            "textToLower": "password",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_password_-1:0"
          },
          "signature": "String password",
          "datatype": {
            "id": "System.site.createexternaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "sendEmailConfirmation": {
          "id": "System.site.createexternaluser.sendemailconfirmation",
          "type": "var",
          "name": "sendEmailConfirmation",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sendEmailConfirmation",
            "textToLower": "sendemailconfirmation",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sendEmailConfirmation_-1:0"
          },
          "signature": "Boolean sendEmailConfirmation",
          "datatype": {
            "id": "System.site.createexternaluser.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "createpersonaccountportaluser(sobject,string,string)": {
      "id": "System.site.createpersonaccountportaluser",
      "nodeType": "method",
      "name": "createPersonAccountPortalUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createPersonAccountPortalUser",
        "textToLower": "createpersonaccountportaluser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createPersonAccountPortalUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID createPersonAccountPortalUser(sObject user, String ownerId, String password)",
      "simplifiedSignature": "createPersonAccountPortalUser(sObject,String,String)",
      "datatype": {
        "id": "System.site.createpersonaccountportaluser.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Creates a person account using the default record type defined on the guest user's profile, then enables it for the site's portal.",
      "params": {
        "user": {
          "id": "System.site.createpersonaccountportaluser.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "sObject user",
          "datatype": {
            "id": "System.site.createpersonaccountportaluser.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "ownerId": {
          "id": "System.site.createpersonaccountportaluser.ownerid",
          "type": "var",
          "name": "ownerId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "ownerId",
            "textToLower": "ownerid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_ownerId_-1:0"
          },
          "signature": "String ownerId",
          "datatype": {
            "id": "System.site.createpersonaccountportaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "password": {
          "id": "System.site.createpersonaccountportaluser.password",
          "type": "var",
          "name": "password",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "password",
            "textToLower": "password",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_password_-1:0"
          },
          "signature": "String password",
          "datatype": {
            "id": "System.site.createpersonaccountportaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "createpersonaccountportaluser(sobject,string,string,string)": {
      "id": "System.site.createpersonaccountportaluser",
      "nodeType": "method",
      "name": "createPersonAccountPortalUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createPersonAccountPortalUser",
        "textToLower": "createpersonaccountportaluser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createPersonAccountPortalUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID createPersonAccountPortalUser(sObject user, String ownerId, String recordTypeId, String password)",
      "simplifiedSignature": "createPersonAccountPortalUser(sObject,String,String,String)",
      "datatype": {
        "id": "System.site.createpersonaccountportaluser.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Creates a person account using the specified recordTypeID, then enables it for the site's portal.",
      "params": {
        "user": {
          "id": "System.site.createpersonaccountportaluser.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "sObject user",
          "datatype": {
            "id": "System.site.createpersonaccountportaluser.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "ownerId": {
          "id": "System.site.createpersonaccountportaluser.ownerid",
          "type": "var",
          "name": "ownerId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "ownerId",
            "textToLower": "ownerid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_ownerId_-1:0"
          },
          "signature": "String ownerId",
          "datatype": {
            "id": "System.site.createpersonaccountportaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "recordTypeId": {
          "id": "System.site.createpersonaccountportaluser.recordtypeid",
          "type": "var",
          "name": "recordTypeId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordTypeId",
            "textToLower": "recordtypeid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_recordTypeId_-1:0"
          },
          "signature": "String recordTypeId",
          "datatype": {
            "id": "System.site.createpersonaccountportaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "password": {
          "id": "System.site.createpersonaccountportaluser.password",
          "type": "var",
          "name": "password",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "password",
            "textToLower": "password",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_password_-1:0"
          },
          "signature": "String password",
          "datatype": {
            "id": "System.site.createpersonaccountportaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "createportaluser(sobject,string,string,boolean)": {
      "id": "System.site.createportaluser",
      "nodeType": "method",
      "name": "createPortalUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createPortalUser",
        "textToLower": "createportaluser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createPortalUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID createPortalUser(sObject user, String accountId, String password, Boolean sendEmailConfirmation)",
      "simplifiedSignature": "createPortalUser(sObject,String,String,Boolean)",
      "datatype": {
        "id": "System.site.createportaluser.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Creates a portal user for the given account and associates it with the site's portal.",
      "params": {
        "user": {
          "id": "System.site.createportaluser.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "sObject user",
          "datatype": {
            "id": "System.site.createportaluser.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "accountId": {
          "id": "System.site.createportaluser.accountid",
          "type": "var",
          "name": "accountId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "accountId",
            "textToLower": "accountid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_accountId_-1:0"
          },
          "signature": "String accountId",
          "datatype": {
            "id": "System.site.createportaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "password": {
          "id": "System.site.createportaluser.password",
          "type": "var",
          "name": "password",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "password",
            "textToLower": "password",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_password_-1:0"
          },
          "signature": "String password",
          "datatype": {
            "id": "System.site.createportaluser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "sendEmailConfirmation": {
          "id": "System.site.createportaluser.sendemailconfirmation",
          "type": "var",
          "name": "sendEmailConfirmation",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sendEmailConfirmation",
            "textToLower": "sendemailconfirmation",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_sendEmailConfirmation_-1:0"
          },
          "signature": "Boolean sendEmailConfirmation",
          "datatype": {
            "id": "System.site.createportaluser.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "forgotpassword(string,string)": {
      "id": "System.site.forgotpassword",
      "nodeType": "method",
      "name": "forgotPassword",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "forgotPassword",
        "textToLower": "forgotpassword",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_forgotPassword_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean forgotPassword(String username, String emailTemplateName)",
      "simplifiedSignature": "forgotPassword(String,String)",
      "datatype": {
        "id": "System.site.forgotpassword.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Resets the user's password and sends an email to the user with the user’s new password. You can specify a custom email template or use the default email template. Returns a value indicating whether the password reset was successful.",
      "params": {
        "username": {
          "id": "System.site.forgotpassword.username",
          "type": "var",
          "name": "username",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "username",
            "textToLower": "username",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_username_-1:0"
          },
          "signature": "String username",
          "datatype": {
            "id": "System.site.forgotpassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "emailTemplateName": {
          "id": "System.site.forgotpassword.emailtemplatename",
          "type": "var",
          "name": "emailTemplateName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "emailTemplateName",
            "textToLower": "emailtemplatename",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_emailTemplateName_-1:0"
          },
          "signature": "String emailTemplateName",
          "datatype": {
            "id": "System.site.forgotpassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "forgotpassword(string)": {
      "id": "System.site.forgotpassword",
      "nodeType": "method",
      "name": "forgotPassword",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "forgotPassword",
        "textToLower": "forgotpassword",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_forgotPassword_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean forgotPassword(String username)",
      "simplifiedSignature": "forgotPassword(String)",
      "datatype": {
        "id": "System.site.forgotpassword.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Resets the user's password and sends an email to the user with the user’s new password. Returns a value indicating whether the password reset was successful.",
      "params": {
        "username": {
          "id": "System.site.forgotpassword.username",
          "type": "var",
          "name": "username",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "username",
            "textToLower": "username",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_username_-1:0"
          },
          "signature": "String username",
          "datatype": {
            "id": "System.site.forgotpassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getadminemail()": {
      "id": "System.site.getadminemail",
      "nodeType": "method",
      "name": "getAdminEmail",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAdminEmail",
        "textToLower": "getadminemail",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAdminEmail_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getAdminEmail()",
      "simplifiedSignature": "getAdminEmail()",
      "datatype": {
        "id": "System.site.getadminemail.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the email address of the site administrator.",
      "params": {}
    },
    "getadminid()": {
      "id": "System.site.getadminid",
      "nodeType": "method",
      "name": "getAdminId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAdminId",
        "textToLower": "getadminid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAdminId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static ID getAdminId()",
      "simplifiedSignature": "getAdminId()",
      "datatype": {
        "id": "System.site.getadminid.ID",
        "nodeType": "datatype",
        "name": "ID"
      },
      "description": "Returns the user ID of the site administrator.",
      "params": {}
    },
    "getanalyticstrackingcode()": {
      "id": "System.site.getanalyticstrackingcode",
      "nodeType": "method",
      "name": "getAnalyticsTrackingCode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAnalyticsTrackingCode",
        "textToLower": "getanalyticstrackingcode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAnalyticsTrackingCode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getAnalyticsTrackingCode()",
      "simplifiedSignature": "getAnalyticsTrackingCode()",
      "datatype": {
        "id": "System.site.getanalyticstrackingcode.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "The tracking code associated with your site. This code can be used by services like Google Analytics to track page request data for your site.",
      "params": {}
    },
    "getcurrentsiteurl()": {
      "id": "System.site.getcurrentsiteurl",
      "nodeType": "method",
      "name": "getCurrentSiteUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCurrentSiteUrl",
        "textToLower": "getcurrentsiteurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCurrentSiteUrl_-1:0"
      },
      "signature": "String getCurrentSiteUrl()",
      "simplifiedSignature": "getCurrentSiteUrl()",
      "datatype": {
        "id": "System.site.getcurrentsiteurl.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Deprecated. This method was replaced by getBaseUrl() in API version 30.0. Returns the base URL of the current site that references and links should use.",
      "params": {}
    },
    "getbasecustomurl()": {
      "id": "System.site.getbasecustomurl",
      "nodeType": "method",
      "name": "getBaseCustomUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBaseCustomUrl",
        "textToLower": "getbasecustomurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBaseCustomUrl_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getBaseCustomUrl()",
      "simplifiedSignature": "getBaseCustomUrl()",
      "datatype": {
        "id": "System.site.getbasecustomurl.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns a base URL for the current site that doesn’t use a force.com subdomain. The returned URL uses the same protocol (HTTP or HTTPS) as the current request if at least one non-Force.com custom URL that supports HTTPS exists on the site. The returned value never ends with a / character. If all the custom URLs in this site end in Force.com or this site has no custom URLs, then this returns an empty string. If the current request is not a site request, then this method returns an empty string. This method replaced getCustomWebAddress and includes the custom URL's path prefix..",
      "params": {}
    },
    "getbaseinsecureurl()": {
      "id": "System.site.getbaseinsecureurl",
      "nodeType": "method",
      "name": "getBaseInsecureUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBaseInsecureUrl",
        "textToLower": "getbaseinsecureurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBaseInsecureUrl_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getBaseInsecureUrl()",
      "simplifiedSignature": "getBaseInsecureUrl()",
      "datatype": {
        "id": "System.site.getbaseinsecureurl.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns a base URL for the current site that uses HTTP instead of HTTPS. The current request's domain is used. The returned value includes the path prefix and never ends with a / character. If the current request is not a site request, then this method returns an empty string.",
      "params": {}
    },
    "getbaserequesturl()": {
      "id": "System.site.getbaserequesturl",
      "nodeType": "method",
      "name": "getBaseRequestUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBaseRequestUrl",
        "textToLower": "getbaserequesturl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBaseRequestUrl_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getBaseRequestUrl()",
      "simplifiedSignature": "getBaseRequestUrl()",
      "datatype": {
        "id": "System.site.getbaserequesturl.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the base URL of the current site for the requested URL. This isn't influenced by the referring page's URL. The returned URL uses the same protocol (HTTP or HTTPS) as the current request. The returned value includes the path prefix and never ends with a / character. If the current request is not a site request, then this method returns an empty string.",
      "params": {}
    },
    "getbasesecureurl()": {
      "id": "System.site.getbasesecureurl",
      "nodeType": "method",
      "name": "getBaseSecureUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBaseSecureUrl",
        "textToLower": "getbasesecureurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBaseSecureUrl_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getBaseSecureUrl()",
      "simplifiedSignature": "getBaseSecureUrl()",
      "datatype": {
        "id": "System.site.getbasesecureurl.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns a base URL for the current site that uses HTTPS instead of HTTP. The current request's domain is preferred if it supports HTTPS. Domains that are not Force.com subdomains are preferred over Force.com subdomains. A Force.com subdomain, if associated with the site, is used if no other HTTPS domains exist in the current site. If no HTTPS custom URLs exist in the site, then this method returns an empty string. The returned value includes the path prefix and never ends with a / character. If the current request is not a site request, then this method returns an empty string.",
      "params": {}
    },
    "getbaseurl()": {
      "id": "System.site.getbaseurl",
      "nodeType": "method",
      "name": "getBaseUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getBaseUrl",
        "textToLower": "getbaseurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getBaseUrl_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getBaseUrl()",
      "simplifiedSignature": "getBaseUrl()",
      "datatype": {
        "id": "System.site.getbaseurl.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the base URL of the current site that references and links should use. Note that this field may return the referring page's URL instead of the current request's URL. The returned value includes the path prefix and never ends with a / character. If the current request is not a site request, then this field returns an empty string. This field replaces getCurrentSiteUrl.",
      "params": {}
    },
    "getcustomwebaddress()": {
      "id": "System.site.getcustomwebaddress",
      "nodeType": "method",
      "name": "getCustomWebAddress",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCustomWebAddress",
        "textToLower": "getcustomwebaddress",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCustomWebAddress_-1:0"
      },
      "signature": "String getCustomWebAddress()",
      "simplifiedSignature": "getCustomWebAddress()",
      "datatype": {
        "id": "System.site.getcustomwebaddress.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Deprecated. This method was replaced by getBaseCustomUrl() in API version 30.0.",
      "params": {}
    },
    "getdomain()": {
      "id": "System.site.getdomain",
      "nodeType": "method",
      "name": "getDomain",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getDomain",
        "textToLower": "getdomain",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getDomain_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getDomain()",
      "simplifiedSignature": "getDomain()",
      "datatype": {
        "id": "System.site.getdomain.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the Salesforce Site domain (force.com subdomain URL hostname) for your organization.",
      "params": {}
    },
    "geterrordescription()": {
      "id": "System.site.geterrordescription",
      "nodeType": "method",
      "name": "getErrorDescription",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getErrorDescription",
        "textToLower": "geterrordescription",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getErrorDescription_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getErrorDescription()",
      "simplifiedSignature": "getErrorDescription()",
      "datatype": {
        "id": "System.site.geterrordescription.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the error description for the current page if it’s a designated error page for the site and an error exists; otherwise, returns an empty string.",
      "params": {}
    },
    "geterrormessage()": {
      "id": "System.site.geterrormessage",
      "nodeType": "method",
      "name": "getErrorMessage",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getErrorMessage",
        "textToLower": "geterrormessage",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getErrorMessage_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getErrorMessage()",
      "simplifiedSignature": "getErrorMessage()",
      "datatype": {
        "id": "System.site.geterrormessage.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns an error message for the current page if it’s a designated error page for the site and an error exists; otherwise, returns an empty string.",
      "params": {}
    },
    "getexperienceid()": {
      "id": "System.site.getexperienceid",
      "nodeType": "method",
      "name": "getExperienceId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getExperienceId",
        "textToLower": "getexperienceid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getExperienceId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getExperienceId()",
      "simplifiedSignature": "getExperienceId()",
      "datatype": {
        "id": "System.site.getexperienceid.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the value of the experience ID (expid). This expid value comes from a cookie in the user’s web browser.",
      "params": {}
    },
    "getmasterlabel()": {
      "id": "System.site.getmasterlabel",
      "nodeType": "method",
      "name": "getMasterLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getMasterLabel",
        "textToLower": "getmasterlabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getMasterLabel_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getMasterLabel()",
      "simplifiedSignature": "getMasterLabel()",
      "datatype": {
        "id": "System.site.getmasterlabel.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the value of the Master Label field for the current site. If the current request is not a site request, then this field returns null.",
      "params": {}
    },
    "getname()": {
      "id": "System.site.getname",
      "nodeType": "method",
      "name": "getName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getName",
        "textToLower": "getname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getName()",
      "simplifiedSignature": "getName()",
      "datatype": {
        "id": "System.site.getname.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the API name of the current site.",
      "params": {}
    },
    "getoriginalurl()": {
      "id": "System.site.getoriginalurl",
      "nodeType": "method",
      "name": "getOriginalUrl",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getOriginalUrl",
        "textToLower": "getoriginalurl",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getOriginalUrl_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getOriginalUrl()",
      "simplifiedSignature": "getOriginalUrl()",
      "datatype": {
        "id": "System.site.getoriginalurl.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the original URL for this page if it’s a designated error page for the site; otherwise, returns null.",
      "params": {}
    },
    "getpasswordpolicystatement()": {
      "id": "System.site.getpasswordpolicystatement",
      "nodeType": "method",
      "name": "getPasswordPolicyStatement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPasswordPolicyStatement",
        "textToLower": "getpasswordpolicystatement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPasswordPolicyStatement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getPasswordPolicyStatement()",
      "simplifiedSignature": "getPasswordPolicyStatement()",
      "datatype": {
        "id": "System.site.getpasswordpolicystatement.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the password requirements for a community created with the Customer Service template.",
      "params": {}
    },
    "getpathprefix()": {
      "id": "System.site.getpathprefix",
      "nodeType": "method",
      "name": "getPathPrefix",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPathPrefix",
        "textToLower": "getpathprefix",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPathPrefix_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getPathPrefix()",
      "simplifiedSignature": "getPathPrefix()",
      "datatype": {
        "id": "System.site.getpathprefix.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the URL path prefix of the current site or an empty string if none. For example, if the requested site URL is http://myco.force.com/partners, then /partners is the path prefix. If the current request is not a site request, then this method returns an empty string. This method replaced getPrefix in API version 30.0.",
      "params": {}
    },
    "getprefix()": {
      "id": "System.site.getprefix",
      "nodeType": "method",
      "name": "getPrefix",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPrefix",
        "textToLower": "getprefix",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPrefix_-1:0"
      },
      "signature": "String getPrefix()",
      "simplifiedSignature": "getPrefix()",
      "datatype": {
        "id": "System.site.getprefix.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Deprecated. This method was replaced by getPathPrefix() in API version 30.0.",
      "params": {}
    },
    "getsiteid()": {
      "id": "System.site.getsiteid",
      "nodeType": "method",
      "name": "getSiteId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSiteId",
        "textToLower": "getsiteid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSiteId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Id getSiteId()",
      "simplifiedSignature": "getSiteId()",
      "datatype": {
        "id": "System.site.getsiteid.Id",
        "nodeType": "datatype",
        "name": "Id"
      },
      "description": "Returns the ID of the current site. If the current request is not a site request, then this field returns null.",
      "params": {}
    },
    "gettemplate()": {
      "id": "System.site.gettemplate",
      "nodeType": "method",
      "name": "getTemplate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getTemplate",
        "textToLower": "gettemplate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getTemplate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static System.PageReference getTemplate()",
      "simplifiedSignature": "getTemplate()",
      "datatype": {
        "id": "System.site.gettemplate.System.PageReference",
        "nodeType": "datatype",
        "name": "System.PageReference"
      },
      "description": "Returns the template name associated with the current site; returns the default template if no template has been designated.",
      "params": {}
    },
    "getsitetype()": {
      "id": "System.site.getsitetype",
      "nodeType": "method",
      "name": "getSiteType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSiteType",
        "textToLower": "getsitetype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSiteType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getSiteType()",
      "simplifiedSignature": "getSiteType()",
      "datatype": {
        "id": "System.site.getsitetype.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the API value of the site type field for the current site. This can be Visualforce for a Salesforce site, Siteforce for a Site.com site, ChatterNetwork for a Communities site, or ChatterNetworkPicasso for a Site.com Communities site. If the current request is not a site request, then this method returns null.",
      "params": {}
    },
    "getsitetypelabel()": {
      "id": "System.site.getsitetypelabel",
      "nodeType": "method",
      "name": "getSiteTypeLabel",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSiteTypeLabel",
        "textToLower": "getsitetypelabel",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSiteTypeLabel_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getSiteTypeLabel()",
      "simplifiedSignature": "getSiteTypeLabel()",
      "datatype": {
        "id": "System.site.getsitetypelabel.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the value of the Site Type field's label for the current site. If the current request is not a site request, then this method returns null.",
      "params": {}
    },
    "isloginenabled()": {
      "id": "System.site.isloginenabled",
      "nodeType": "method",
      "name": "isLoginEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isLoginEnabled",
        "textToLower": "isloginenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isLoginEnabled_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isLoginEnabled()",
      "simplifiedSignature": "isLoginEnabled()",
      "datatype": {
        "id": "System.site.isloginenabled.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current site is associated with an active login-enabled portal; otherwise returns false.",
      "params": {}
    },
    "ispasswordexpired()": {
      "id": "System.site.ispasswordexpired",
      "nodeType": "method",
      "name": "isPasswordExpired",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isPasswordExpired",
        "textToLower": "ispasswordexpired",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isPasswordExpired_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isPasswordExpired()",
      "simplifiedSignature": "isPasswordExpired()",
      "datatype": {
        "id": "System.site.ispasswordexpired.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "For authenticated users, returns true if the currently logged-in user's password is expired. For non-authenticated users, returns false.",
      "params": {}
    },
    "isregistrationenabled()": {
      "id": "System.site.isregistrationenabled",
      "nodeType": "method",
      "name": "isRegistrationEnabled",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isRegistrationEnabled",
        "textToLower": "isregistrationenabled",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isRegistrationEnabled_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isRegistrationEnabled()",
      "simplifiedSignature": "isRegistrationEnabled()",
      "datatype": {
        "id": "System.site.isregistrationenabled.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current site is associated with an active self-registration-enabled Customer Portal; otherwise returns false.",
      "params": {}
    },
    "isvalidusername(string)": {
      "id": "System.site.isvalidusername",
      "nodeType": "method",
      "name": "isValidUsername",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isValidUsername",
        "textToLower": "isvalidusername",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isValidUsername_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isValidUsername(String username)",
      "simplifiedSignature": "isValidUsername(String)",
      "datatype": {
        "id": "System.site.isvalidusername.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the given username is valid; otherwise, returns false.",
      "params": {
        "username": {
          "id": "System.site.isvalidusername.username",
          "type": "var",
          "name": "username",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "username",
            "textToLower": "username",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_username_-1:0"
          },
          "signature": "String username",
          "datatype": {
            "id": "System.site.isvalidusername.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "login(string,string,string)": {
      "id": "System.site.login",
      "nodeType": "method",
      "name": "login",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "login",
        "textToLower": "login",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_login_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static System.PageReference login(String username, String password, String startUrl)",
      "simplifiedSignature": "login(String,String,String)",
      "datatype": {
        "id": "System.site.login.System.PageReference",
        "nodeType": "datatype",
        "name": "System.PageReference"
      },
      "description": "Allows users to log in to the current site with the given username and password, then takes them to the startUrl. If startUrl is not a relative path, it defaults to the site's designated index page.",
      "params": {
        "username": {
          "id": "System.site.login.username",
          "type": "var",
          "name": "username",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "username",
            "textToLower": "username",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_username_-1:0"
          },
          "signature": "String username",
          "datatype": {
            "id": "System.site.login.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "password": {
          "id": "System.site.login.password",
          "type": "var",
          "name": "password",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "password",
            "textToLower": "password",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_password_-1:0"
          },
          "signature": "String password",
          "datatype": {
            "id": "System.site.login.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "startUrl": {
          "id": "System.site.login.starturl",
          "type": "var",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startUrl_-1:0"
          },
          "signature": "String startUrl",
          "datatype": {
            "id": "System.site.login.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "passwordlesslogin(id,list)": {
      "id": "System.site.passwordlesslogin",
      "nodeType": "method",
      "name": "passwordlessLogin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "passwordlessLogin",
        "textToLower": "passwordlesslogin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_passwordlessLogin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static System.PageReference passwordlessLogin(Id userId, List <Auth.VerificationMethod>)",
      "simplifiedSignature": "passwordlessLogin(Id,List)",
      "datatype": {
        "id": "System.site.passwordlesslogin.System.PageReference",
        "nodeType": "datatype",
        "name": "System.PageReference"
      },
      "description": "Logs in a user to a community using an identity verification method, such as email or text, instead of a password. Passwordless login is a convenient, mobile-centric way to welcome users into your community. Let your community users log in with something other than their password, like their email address or phone number.",
      "params": {
        "userId": {
          "id": "System.site.passwordlesslogin.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "System.site.passwordlesslogin.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "<Auth.VerificationMethod>": {
          "id": "System.site.passwordlesslogin.<auth.verificationmethod>",
          "type": "var",
          "name": "<Auth.VerificationMethod>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Auth.VerificationMethod>",
            "textToLower": "<auth.verificationmethod>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Auth.VerificationMethod>_-1:0"
          },
          "signature": "List <Auth.VerificationMethod>",
          "datatype": {
            "id": "System.site.passwordlesslogin.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "setexperienceid(string)": {
      "id": "System.site.setexperienceid",
      "nodeType": "method",
      "name": "setExperienceId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setExperienceId",
        "textToLower": "setexperienceid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setExperienceId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setExperienceId(String expIdValue)",
      "simplifiedSignature": "setExperienceId(String)",
      "datatype": {
        "id": "System.site.setexperienceid.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the experience ID for the current user. Use this method to populate the value of the experience ID (expid) cookie in the user’s web browser.",
      "params": {
        "expIdValue": {
          "id": "System.site.setexperienceid.expidvalue",
          "type": "var",
          "name": "expIdValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "expIdValue",
            "textToLower": "expidvalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_expIdValue_-1:0"
          },
          "signature": "String expIdValue",
          "datatype": {
            "id": "System.site.setexperienceid.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setportaluserasauthprovider(sobject,string)": {
      "id": "System.site.setportaluserasauthprovider",
      "nodeType": "method",
      "name": "setPortalUserAsAuthProvider",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setPortalUserAsAuthProvider",
        "textToLower": "setportaluserasauthprovider",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setPortalUserAsAuthProvider_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void setPortalUserAsAuthProvider(sObject user, String contactId)",
      "simplifiedSignature": "setPortalUserAsAuthProvider(sObject,String)",
      "datatype": {
        "id": "System.site.setportaluserasauthprovider.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the specified user information within the site’s portal via an authentication provider.",
      "params": {
        "user": {
          "id": "System.site.setportaluserasauthprovider.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "sObject user",
          "datatype": {
            "id": "System.site.setportaluserasauthprovider.sobject",
            "nodeType": "datatype",
            "name": "sObject"
          }
        },
        "contactId": {
          "id": "System.site.setportaluserasauthprovider.contactid",
          "type": "var",
          "name": "contactId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contactId",
            "textToLower": "contactid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_contactId_-1:0"
          },
          "signature": "String contactId",
          "datatype": {
            "id": "System.site.setportaluserasauthprovider.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "validatepassword(sobject,string,string)": {
      "id": "System.site.validatepassword",
      "nodeType": "method",
      "name": "validatePassword",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "validatePassword",
        "textToLower": "validatepassword",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_validatePassword_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void validatePassword(SObject user, String password, String confirmPassword)",
      "simplifiedSignature": "validatePassword(SObject,String,String)",
      "datatype": {
        "id": "System.site.validatepassword.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Indicates whether a given password meets the requirements specified by org-wide or profile-based password policies in the current user’s org.",
      "params": {
        "user": {
          "id": "System.site.validatepassword.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "SObject user",
          "datatype": {
            "id": "System.site.validatepassword.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        },
        "password": {
          "id": "System.site.validatepassword.password",
          "type": "var",
          "name": "password",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "password",
            "textToLower": "password",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_password_-1:0"
          },
          "signature": "String password",
          "datatype": {
            "id": "System.site.validatepassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "confirmPassword": {
          "id": "System.site.validatepassword.confirmpassword",
          "type": "var",
          "name": "confirmPassword",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "confirmPassword",
            "textToLower": "confirmpassword",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_confirmPassword_-1:0"
          },
          "signature": "String confirmPassword",
          "datatype": {
            "id": "System.site.validatepassword.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}