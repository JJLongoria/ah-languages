{
  "id": "System.sobject",
  "nodeType": "class",
  "name": "SObject",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "SObject",
    "textToLower": "sobject",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_SObject_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for the sObject data type.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_sobject.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "adderror(string)": {
      "id": "System.sobject.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(String errorMsg)",
      "simplifiedSignature": "addError(String)",
      "datatype": {
        "id": "System.sobject.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Places the specified error message on a trigger record field in the Salesforce user interface and prevents any DML operation from occurring.",
      "params": {
        "errorMsg": {
          "id": "System.sobject.adderror.errormsg",
          "type": "var",
          "name": "errorMsg",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_errorMsg_-1:0"
          },
          "signature": "String errorMsg",
          "datatype": {
            "id": "System.sobject.adderror.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "adderror(string,boolean)": {
      "id": "System.sobject.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(String errorMsg, Boolean escape)",
      "simplifiedSignature": "addError(String,Boolean)",
      "datatype": {
        "id": "System.sobject.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Places the specified error message, which can be escaped or unescaped, on a trigger record field in the Salesforce user interface, and prevents any DML operation from occurring.",
      "params": {
        "errorMsg": {
          "id": "System.sobject.adderror.errormsg",
          "type": "var",
          "name": "errorMsg",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "errorMsg",
            "textToLower": "errormsg",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_errorMsg_-1:0"
          },
          "signature": "String errorMsg",
          "datatype": {
            "id": "System.sobject.adderror.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "escape": {
          "id": "System.sobject.adderror.escape",
          "type": "var",
          "name": "escape",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_escape_-1:0"
          },
          "signature": "Boolean escape",
          "datatype": {
            "id": "System.sobject.adderror.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "adderror(exception)": {
      "id": "System.sobject.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(Exception exceptionError)",
      "simplifiedSignature": "addError(Exception)",
      "datatype": {
        "id": "System.sobject.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Marks a trigger record with a custom error message and prevents any DML operation from occurring.",
      "params": {
        "exceptionError": {
          "id": "System.sobject.adderror.exceptionerror",
          "type": "var",
          "name": "exceptionError",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exceptionError_-1:0"
          },
          "signature": "Exception exceptionError",
          "datatype": {
            "id": "System.sobject.adderror.exception",
            "nodeType": "datatype",
            "name": "Exception"
          }
        }
      }
    },
    "adderror(exception,boolean)": {
      "id": "System.sobject.adderror",
      "nodeType": "method",
      "name": "addError",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "addError",
        "textToLower": "adderror",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_addError_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void addError(Exception exceptionError, Boolean escape)",
      "simplifiedSignature": "addError(Exception,Boolean)",
      "datatype": {
        "id": "System.sobject.adderror.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Marks a trigger record with a custom exception error message, specifies whether or not the exception error message should be escaped, and prevents any DML operation from occurring.",
      "params": {
        "exceptionError": {
          "id": "System.sobject.adderror.exceptionerror",
          "type": "var",
          "name": "exceptionError",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "exceptionError",
            "textToLower": "exceptionerror",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_exceptionError_-1:0"
          },
          "signature": "Exception exceptionError",
          "datatype": {
            "id": "System.sobject.adderror.exception",
            "nodeType": "datatype",
            "name": "Exception"
          }
        },
        "escape": {
          "id": "System.sobject.adderror.escape",
          "type": "var",
          "name": "escape",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "escape",
            "textToLower": "escape",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_escape_-1:0"
          },
          "signature": "Boolean escape",
          "datatype": {
            "id": "System.sobject.adderror.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "clear()": {
      "id": "System.sobject.clear",
      "nodeType": "method",
      "name": "clear",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clear",
        "textToLower": "clear",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clear_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void clear()",
      "simplifiedSignature": "clear()",
      "datatype": {
        "id": "System.sobject.clear.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Clears all field values",
      "params": {}
    },
    "clone(boolean,boolean,boolean,boolean)": {
      "id": "System.sobject.clone",
      "nodeType": "method",
      "name": "clone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clone",
        "textToLower": "clone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public SObject (of same type) clone(Boolean preserveId, Boolean isDeepClone, Boolean preserveReadonlyTimestamps, Boolean preserveAutonumber)",
      "simplifiedSignature": "clone(Boolean,Boolean,Boolean,Boolean)",
      "datatype": {
        "id": "System.sobject.clone.SObject (of same type)",
        "nodeType": "datatype",
        "name": "SObject (of same type)"
      },
      "description": "Creates a copy of the SObject record.",
      "params": {
        "preserveId": {
          "id": "System.sobject.clone.preserveid",
          "type": "var",
          "name": "preserveId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "preserveId",
            "textToLower": "preserveid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_preserveId_-1:0"
          },
          "signature": "Boolean preserveId",
          "datatype": {
            "id": "System.sobject.clone.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        },
        "isDeepClone": {
          "id": "System.sobject.clone.isdeepclone",
          "type": "var",
          "name": "isDeepClone",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isDeepClone",
            "textToLower": "isdeepclone",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isDeepClone_-1:0"
          },
          "signature": "Boolean isDeepClone",
          "datatype": {
            "id": "System.sobject.clone.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        },
        "preserveReadonlyTimestamps": {
          "id": "System.sobject.clone.preservereadonlytimestamps",
          "type": "var",
          "name": "preserveReadonlyTimestamps",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "preserveReadonlyTimestamps",
            "textToLower": "preservereadonlytimestamps",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_preserveReadonlyTimestamps_-1:0"
          },
          "signature": "Boolean preserveReadonlyTimestamps",
          "datatype": {
            "id": "System.sobject.clone.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        },
        "preserveAutonumber": {
          "id": "System.sobject.clone.preserveautonumber",
          "type": "var",
          "name": "preserveAutonumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "preserveAutonumber",
            "textToLower": "preserveautonumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_preserveAutonumber_-1:0"
          },
          "signature": "Boolean preserveAutonumber",
          "datatype": {
            "id": "System.sobject.clone.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "get(string)": {
      "id": "System.sobject.get",
      "nodeType": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object get(String fieldName)",
      "simplifiedSignature": "get(String)",
      "datatype": {
        "id": "System.sobject.get.Object",
        "nodeType": "datatype",
        "name": "Object"
      },
      "description": "Returns the value for the field specified by fieldName, such as AccountNumber.",
      "params": {
        "fieldName": {
          "id": "System.sobject.get.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "String fieldName",
          "datatype": {
            "id": "System.sobject.get.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "get(schema.sobjectfield)": {
      "id": "System.sobject.get",
      "nodeType": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object get(Schema.sObjectField field)",
      "simplifiedSignature": "get(Schema.sObjectField)",
      "datatype": {
        "id": "System.sobject.get.Object",
        "nodeType": "datatype",
        "name": "Object"
      },
      "description": "Returns the value for the field specified by the field token Schema.sObjectField, such as, Schema.Account.AccountNumber.",
      "params": {
        "field": {
          "id": "System.sobject.get.field",
          "type": "var",
          "name": "field",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "field",
            "textToLower": "field",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_field_-1:0"
          },
          "signature": "Schema.sObjectField field",
          "datatype": {
            "id": "System.sobject.get.schema.sobjectfield",
            "nodeType": "datatype",
            "name": "Schema.sObjectField"
          }
        }
      }
    },
    "getclonesourceid()": {
      "id": "System.sobject.getclonesourceid",
      "nodeType": "method",
      "name": "getCloneSourceId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCloneSourceId",
        "textToLower": "getclonesourceid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCloneSourceId_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Id getCloneSourceId()",
      "simplifiedSignature": "getCloneSourceId()",
      "datatype": {
        "id": "System.sobject.getclonesourceid.Id",
        "nodeType": "datatype",
        "name": "Id"
      },
      "description": "Returns the ID of the entity from which an object was cloned. You can use it for objects cloned through the Salesforce user interface. If you don’t use a preserveId parameter, of if you use a preserveId value of false, you can also used it  for objects created using the System.SObject.clone(preserveId, isDeepClone, preserveReadonlyTimestamps, preserveAutonumber) method.",
      "params": {}
    },
    "getoptions()": {
      "id": "System.sobject.getoptions",
      "nodeType": "method",
      "name": "getOptions",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getOptions",
        "textToLower": "getoptions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getOptions_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Database.DMLOptions getOptions()",
      "simplifiedSignature": "getOptions()",
      "datatype": {
        "id": "System.sobject.getoptions.Database.DMLOptions",
        "nodeType": "datatype",
        "name": "Database.DMLOptions"
      },
      "description": "Returns the database.DMLOptions object for the SObject.",
      "params": {}
    },
    "getpopulatedfieldsasmap()": {
      "id": "System.sobject.getpopulatedfieldsasmap",
      "nodeType": "method",
      "name": "getPopulatedFieldsAsMap",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPopulatedFieldsAsMap",
        "textToLower": "getpopulatedfieldsasmap",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPopulatedFieldsAsMap_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Map<String, Object> getPopulatedFieldsAsMap()",
      "simplifiedSignature": "getPopulatedFieldsAsMap()",
      "datatype": {
        "id": "System.sobject.getpopulatedfieldsasmap.Map<String, Object>",
        "nodeType": "datatype",
        "name": "Map<String, Object>"
      },
      "description": "Returns a map of populated field names and their corresponding values. The map contains only the fields that have been populated in memory for the SObject instance.",
      "params": {}
    },
    "getsobject(string)": {
      "id": "System.sobject.getsobject",
      "nodeType": "method",
      "name": "getSObject",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObject",
        "textToLower": "getsobject",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObject_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public SObject getSObject(String fieldName)",
      "simplifiedSignature": "getSObject(String)",
      "datatype": {
        "id": "System.sobject.getsobject.SObject",
        "nodeType": "datatype",
        "name": "SObject"
      },
      "description": "Returns the value for the specified field. This method is primarily used with dynamic DML to access values for external IDs.",
      "params": {
        "fieldName": {
          "id": "System.sobject.getsobject.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "String fieldName",
          "datatype": {
            "id": "System.sobject.getsobject.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getsobject(schema.sobjectfield)": {
      "id": "System.sobject.getsobject",
      "nodeType": "method",
      "name": "getSObject",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObject",
        "textToLower": "getsobject",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObject_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public SObject getSObject(Schema.SObjectField fieldName)",
      "simplifiedSignature": "getSObject(Schema.SObjectField)",
      "datatype": {
        "id": "System.sobject.getsobject.SObject",
        "nodeType": "datatype",
        "name": "SObject"
      },
      "description": "Returns the value for the field specified by the field token Schema.fieldName, such as, Schema.MyObj.MyExternalId. This method is primarily used with dynamic DML to access values for external IDs.",
      "params": {
        "fieldName": {
          "id": "System.sobject.getsobject.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "Schema.SObjectField fieldName",
          "datatype": {
            "id": "System.sobject.getsobject.schema.sobjectfield",
            "nodeType": "datatype",
            "name": "Schema.SObjectField"
          }
        }
      }
    },
    "getsobjects(string)": {
      "id": "System.sobject.getsobjects",
      "nodeType": "method",
      "name": "getSObjects",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObjects",
        "textToLower": "getsobjects",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObjects_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public SObject[] getSObjects(String fieldName)",
      "simplifiedSignature": "getSObjects(String)",
      "datatype": {
        "id": "System.sobject.getsobjects.SObject[]",
        "nodeType": "datatype",
        "name": "SObject[]"
      },
      "description": "Returns the values for the specified field. This method is primarily used with dynamic DML to access values  for associated objects, such as child relationships.",
      "params": {
        "fieldName": {
          "id": "System.sobject.getsobjects.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "String fieldName",
          "datatype": {
            "id": "System.sobject.getsobjects.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getsobjects(schema.sobjecttype)": {
      "id": "System.sobject.getsobjects",
      "nodeType": "method",
      "name": "getSObjects",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObjects",
        "textToLower": "getsobjects",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObjects_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public SObject[] getSObjects(Schema.SObjectType fieldName)",
      "simplifiedSignature": "getSObjects(Schema.SObjectType)",
      "datatype": {
        "id": "System.sobject.getsobjects.SObject[]",
        "nodeType": "datatype",
        "name": "SObject[]"
      },
      "description": "Returns the value for the field specified by the field token Schema.fieldName, such as, Schema.Account.Contact. This method is primarily used with dynamic DML to access values for associated objects, such as child relationships.",
      "params": {
        "fieldName": {
          "id": "System.sobject.getsobjects.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "Schema.SObjectType fieldName",
          "datatype": {
            "id": "System.sobject.getsobjects.schema.sobjecttype",
            "nodeType": "datatype",
            "name": "Schema.SObjectType"
          }
        }
      }
    },
    "getsobjecttype()": {
      "id": "System.sobject.getsobjecttype",
      "nodeType": "method",
      "name": "getSObjectType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getSObjectType",
        "textToLower": "getsobjecttype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getSObjectType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Schema.SObjectType getSObjectType()",
      "simplifiedSignature": "getSObjectType()",
      "datatype": {
        "id": "System.sobject.getsobjecttype.Schema.SObjectType",
        "nodeType": "datatype",
        "name": "Schema.SObjectType"
      },
      "description": "Returns the token for this SObject. This method is primarily used with describe information.",
      "params": {}
    },
    "getquickactionname()": {
      "id": "System.sobject.getquickactionname",
      "nodeType": "method",
      "name": "getQuickActionName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getQuickActionName",
        "textToLower": "getquickactionname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getQuickActionName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getQuickActionName()",
      "simplifiedSignature": "getQuickActionName()",
      "datatype": {
        "id": "System.sobject.getquickactionname.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Retrieves the name of a quick action associated with this SObject. Typically used in triggers.",
      "params": {}
    },
    "isclone()": {
      "id": "System.sobject.isclone",
      "nodeType": "method",
      "name": "isClone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isClone",
        "textToLower": "isclone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isClone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isClone()",
      "simplifiedSignature": "isClone()",
      "datatype": {
        "id": "System.sobject.isclone.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if an entity is cloned from something, even if the entity hasn’t been saved.",
      "params": {}
    },
    "isset(string)": {
      "id": "System.sobject.isset",
      "nodeType": "method",
      "name": "isSet",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSet",
        "textToLower": "isset",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSet_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isSet(String fieldName)",
      "simplifiedSignature": "isSet(String)",
      "datatype": {
        "id": "System.sobject.isset.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns information about the queried sObject field. Returns true if the sObject field is populated, either by direct assignment or by inclusion in a SOQL query. Returns false if the sObject field is not set. If an invalid field is specified, an SObjectException is thrown.",
      "params": {
        "fieldName": {
          "id": "System.sobject.isset.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "String fieldName",
          "datatype": {
            "id": "System.sobject.isset.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "isset(schema.sobjectfield)": {
      "id": "System.sobject.isset",
      "nodeType": "method",
      "name": "isSet",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isSet",
        "textToLower": "isset",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isSet_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isSet(Schema.SObjectField field)",
      "simplifiedSignature": "isSet(Schema.SObjectField)",
      "datatype": {
        "id": "System.sobject.isset.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns information about the queried sObject field. Returns true if the sObject field is populated, either by direct assignment or by inclusion in a SOQL query. Returns false if the sObject field is not set. If an invalid field is specified, an SObjectException is thrown.",
      "params": {
        "field": {
          "id": "System.sobject.isset.field",
          "type": "var",
          "name": "field",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "field",
            "textToLower": "field",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_field_-1:0"
          },
          "signature": "Schema.SObjectField field",
          "datatype": {
            "id": "System.sobject.isset.schema.sobjectfield",
            "nodeType": "datatype",
            "name": "Schema.SObjectField"
          }
        }
      }
    },
    "put(string,object)": {
      "id": "System.sobject.put",
      "nodeType": "method",
      "name": "put",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "put",
        "textToLower": "put",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_put_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object put(String fieldName, Object value)",
      "simplifiedSignature": "put(String,Object)",
      "datatype": {
        "id": "System.sobject.put.Object",
        "nodeType": "datatype",
        "name": "Object"
      },
      "description": "Sets the value for the specified field and returns the previous value for the field.",
      "params": {
        "fieldName": {
          "id": "System.sobject.put.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "String fieldName",
          "datatype": {
            "id": "System.sobject.put.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "System.sobject.put.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "Object value",
          "datatype": {
            "id": "System.sobject.put.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "put(schema.sobjectfield,object)": {
      "id": "System.sobject.put",
      "nodeType": "method",
      "name": "put",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "put",
        "textToLower": "put",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_put_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Object put(Schema.SObjectField fieldName, Object value)",
      "simplifiedSignature": "put(Schema.SObjectField,Object)",
      "datatype": {
        "id": "System.sobject.put.Object",
        "nodeType": "datatype",
        "name": "Object"
      },
      "description": "Sets the value for the field specified by the field token Schema.sObjectField, such as, Schema.Account.AccountNumber and returns the previous value for the field.",
      "params": {
        "fieldName": {
          "id": "System.sobject.put.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "Schema.SObjectField fieldName",
          "datatype": {
            "id": "System.sobject.put.schema.sobjectfield",
            "nodeType": "datatype",
            "name": "Schema.SObjectField"
          }
        },
        "value": {
          "id": "System.sobject.put.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "Object value",
          "datatype": {
            "id": "System.sobject.put.object",
            "nodeType": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "putsobject(string,sobject)": {
      "id": "System.sobject.putsobject",
      "nodeType": "method",
      "name": "putSObject",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "putSObject",
        "textToLower": "putsobject",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_putSObject_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public SObject putSObject(String fieldName, SObject value)",
      "simplifiedSignature": "putSObject(String,SObject)",
      "datatype": {
        "id": "System.sobject.putsobject.SObject",
        "nodeType": "datatype",
        "name": "SObject"
      },
      "description": "Sets the value for the specified field. This method is primarily used with dynamic DML for setting external IDs. The method returns the previous value of the field.",
      "params": {
        "fieldName": {
          "id": "System.sobject.putsobject.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "String fieldName",
          "datatype": {
            "id": "System.sobject.putsobject.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "value": {
          "id": "System.sobject.putsobject.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "SObject value",
          "datatype": {
            "id": "System.sobject.putsobject.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    },
    "putsobject(schema.sobjecttype,sobject)": {
      "id": "System.sobject.putsobject",
      "nodeType": "method",
      "name": "putSObject",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "putSObject",
        "textToLower": "putsobject",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_putSObject_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public SObject putSObject(Schema.SObjectType fieldName, SObject value)",
      "simplifiedSignature": "putSObject(Schema.SObjectType,SObject)",
      "datatype": {
        "id": "System.sobject.putsobject.SObject",
        "nodeType": "datatype",
        "name": "SObject"
      },
      "description": "Sets the value for the field specified by the token Schema.SObjectType. This method is primarily used with dynamic DML for setting external IDs. The method returns the previous value of the field.",
      "params": {
        "fieldName": {
          "id": "System.sobject.putsobject.fieldname",
          "type": "var",
          "name": "fieldName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fieldName",
            "textToLower": "fieldname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_fieldName_-1:0"
          },
          "signature": "Schema.SObjectType fieldName",
          "datatype": {
            "id": "System.sobject.putsobject.schema.sobjecttype",
            "nodeType": "datatype",
            "name": "Schema.SObjectType"
          }
        },
        "value": {
          "id": "System.sobject.putsobject.value",
          "type": "var",
          "name": "value",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "value",
            "textToLower": "value",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_value_-1:0"
          },
          "signature": "SObject value",
          "datatype": {
            "id": "System.sobject.putsobject.sobject",
            "nodeType": "datatype",
            "name": "SObject"
          }
        }
      }
    },
    "recalculateformulas()": {
      "id": "System.sobject.recalculateformulas",
      "nodeType": "method",
      "name": "recalculateFormulas",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "recalculateFormulas",
        "textToLower": "recalculateformulas",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_recalculateFormulas_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void recalculateFormulas()",
      "simplifiedSignature": "recalculateFormulas()",
      "datatype": {
        "id": "System.sobject.recalculateformulas.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Recalculates all formula fields on an SObject, and sets updated field values. Rather than inserting or updating objects each time you want to test changes to your formula logic, call this method and inspect your new field values. Then make further logic changes as needed.",
      "params": {}
    },
    "setoptions(database.dmloptions)": {
      "id": "System.sobject.setoptions",
      "nodeType": "method",
      "name": "setOptions",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setOptions",
        "textToLower": "setoptions",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setOptions_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setOptions(database.DMLOptions DMLOptions)",
      "simplifiedSignature": "setOptions(database.DMLOptions)",
      "datatype": {
        "id": "System.sobject.setoptions.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the DMLOptions object for the SObject.",
      "params": {
        "DMLOptions": {
          "id": "System.sobject.setoptions.dmloptions",
          "type": "var",
          "name": "DMLOptions",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "DMLOptions",
            "textToLower": "dmloptions",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_DMLOptions_-1:0"
          },
          "signature": "database.DMLOptions DMLOptions",
          "datatype": {
            "id": "System.sobject.setoptions.database.dmloptions",
            "nodeType": "datatype",
            "name": "database.DMLOptions"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}