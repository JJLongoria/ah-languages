{
  "id": "System.staticresourcecalloutmock",
  "nodeType": "class",
  "name": "StaticResourceCalloutMock",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "StaticResourceCalloutMock",
    "textToLower": "staticresourcecalloutmock",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_StaticResourceCalloutMock_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Utility class used to specify a fake response for testing HTTP callouts.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_staticresourcecalloutmock.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "setheader(string,string)": {
      "id": "System.staticresourcecalloutmock.setheader",
      "nodeType": "method",
      "name": "setHeader",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setHeader",
        "textToLower": "setheader",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setHeader_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setHeader(String headerName, String headerValue)",
      "simplifiedSignature": "setHeader(String,String)",
      "datatype": {
        "id": "System.staticresourcecalloutmock.setheader.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the specified header name and value for the fake response.",
      "params": {
        "headerName": {
          "id": "System.staticresourcecalloutmock.setheader.headername",
          "type": "var",
          "name": "headerName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "headerName",
            "textToLower": "headername",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_headerName_-1:0"
          },
          "signature": "String headerName",
          "datatype": {
            "id": "System.staticresourcecalloutmock.setheader.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "headerValue": {
          "id": "System.staticresourcecalloutmock.setheader.headervalue",
          "type": "var",
          "name": "headerValue",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "headerValue",
            "textToLower": "headervalue",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_headerValue_-1:0"
          },
          "signature": "String headerValue",
          "datatype": {
            "id": "System.staticresourcecalloutmock.setheader.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setstaticresource(string)": {
      "id": "System.staticresourcecalloutmock.setstaticresource",
      "nodeType": "method",
      "name": "setStaticResource",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setStaticResource",
        "textToLower": "setstaticresource",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setStaticResource_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setStaticResource(String resourceName)",
      "simplifiedSignature": "setStaticResource(String)",
      "datatype": {
        "id": "System.staticresourcecalloutmock.setstaticresource.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the specified static resource, which contains the response body.",
      "params": {
        "resourceName": {
          "id": "System.staticresourcecalloutmock.setstaticresource.resourcename",
          "type": "var",
          "name": "resourceName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "resourceName",
            "textToLower": "resourcename",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_resourceName_-1:0"
          },
          "signature": "String resourceName",
          "datatype": {
            "id": "System.staticresourcecalloutmock.setstaticresource.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setstatus(string)": {
      "id": "System.staticresourcecalloutmock.setstatus",
      "nodeType": "method",
      "name": "setStatus",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setStatus",
        "textToLower": "setstatus",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setStatus_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setStatus(String httpStatus)",
      "simplifiedSignature": "setStatus(String)",
      "datatype": {
        "id": "System.staticresourcecalloutmock.setstatus.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the specified HTTP status for the response.",
      "params": {
        "httpStatus": {
          "id": "System.staticresourcecalloutmock.setstatus.httpstatus",
          "type": "var",
          "name": "httpStatus",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "httpStatus",
            "textToLower": "httpstatus",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_httpStatus_-1:0"
          },
          "signature": "String httpStatus",
          "datatype": {
            "id": "System.staticresourcecalloutmock.setstatus.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "setstatuscode(integer)": {
      "id": "System.staticresourcecalloutmock.setstatuscode",
      "nodeType": "method",
      "name": "setStatusCode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setStatusCode",
        "textToLower": "setstatuscode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setStatusCode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setStatusCode(Integer httpStatusCode)",
      "simplifiedSignature": "setStatusCode(Integer)",
      "datatype": {
        "id": "System.staticresourcecalloutmock.setstatuscode.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Sets the specified HTTP status for the response.",
      "params": {
        "httpStatusCode": {
          "id": "System.staticresourcecalloutmock.setstatuscode.httpstatuscode",
          "type": "var",
          "name": "httpStatusCode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "httpStatusCode",
            "textToLower": "httpstatuscode",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_httpStatusCode_-1:0"
          },
          "signature": "Integer httpStatusCode",
          "datatype": {
            "id": "System.staticresourcecalloutmock.setstatuscode.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    }
  },
  "constructors": {
    "staticresourcecalloutmock()": {
      "id": "System.staticresourcecalloutmock.staticresourcecalloutmock",
      "nodeType": "constructor",
      "name": "StaticResourceCalloutMock",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "StaticResourceCalloutMock",
        "textToLower": "staticresourcecalloutmock",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_StaticResourceCalloutMock_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public StaticResourceCalloutMock()",
      "simplifiedSignature": "StaticResourceCalloutMock()",
      "datatype": {
        "id": "System.staticresourcecalloutmock.staticresourcecalloutmock.constructor",
        "nodeType": "datatype",
        "name": "StaticResourceCalloutMock"
      },
      "description": "Creates a new instance of the StaticResourceCalloutMock class.",
      "params": {}
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}