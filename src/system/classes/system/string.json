{
  "id": "System.string",
  "type": "class",
  "name": "String",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "String",
    "textToLower": "string",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_String_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods for the String primitive data type.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_string.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "abbreviate(integer)": {
      "id": "System.string.abbreviate",
      "type": "method",
      "name": "abbreviate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "abbreviate",
        "textToLower": "abbreviate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_abbreviate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String abbreviate(Integer maxWidth)",
      "simplifiedSignature": "abbreviate(Integer)",
      "datatype": {
        "id": "System.string.abbreviate.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns an abbreviated version of the String, of the specified length and with ellipses appended if the current String is longer than the specified length; otherwise, returns the original String without ellipses.",
      "variables": {
        "maxWidth": {
          "id": "System.string.abbreviate.maxwidth",
          "type": "var",
          "name": "maxWidth",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxWidth",
            "textToLower": "maxwidth",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxWidth_-1:0"
          },
          "signature": "Integer maxWidth",
          "datatype": {
            "id": "System.string.abbreviate.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "abbreviate(integer,integer)": {
      "id": "System.string.abbreviate",
      "type": "method",
      "name": "abbreviate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "abbreviate",
        "textToLower": "abbreviate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_abbreviate_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String abbreviate(Integer maxWidth, Integer offset)",
      "simplifiedSignature": "abbreviate(Integer,Integer)",
      "datatype": {
        "id": "System.string.abbreviate.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns an abbreviated version of the String, starting at the specified character offset and of the specified length. The returned String has ellipses appended at the start and the end if characters have been removed at these locations.",
      "variables": {
        "maxWidth": {
          "id": "System.string.abbreviate.maxwidth",
          "type": "var",
          "name": "maxWidth",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "maxWidth",
            "textToLower": "maxwidth",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_maxWidth_-1:0"
          },
          "signature": "Integer maxWidth",
          "datatype": {
            "id": "System.string.abbreviate.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "offset": {
          "id": "System.string.abbreviate.offset",
          "type": "var",
          "name": "offset",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "offset",
            "textToLower": "offset",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_offset_-1:0"
          },
          "signature": "Integer offset",
          "datatype": {
            "id": "System.string.abbreviate.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "capitalize()": {
      "id": "System.string.capitalize",
      "type": "method",
      "name": "capitalize",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "capitalize",
        "textToLower": "capitalize",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_capitalize_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String capitalize()",
      "simplifiedSignature": "capitalize()",
      "datatype": {
        "id": "System.string.capitalize.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String with the first letter changed to title case.",
      "variables": {}
    },
    "center(integer)": {
      "id": "System.string.center",
      "type": "method",
      "name": "center",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "center",
        "textToLower": "center",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_center_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String center(Integer size)",
      "simplifiedSignature": "center(Integer)",
      "datatype": {
        "id": "System.string.center.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a version of the current String of the specified size padded with spaces on the left and right, so that it appears in the center. If the specified size is smaller than the current String size, the entire String is returned without added spaces.",
      "variables": {
        "size": {
          "id": "System.string.center.size",
          "type": "var",
          "name": "size",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "size",
            "textToLower": "size",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_size_-1:0"
          },
          "signature": "Integer size",
          "datatype": {
            "id": "System.string.center.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "center(integer,string)": {
      "id": "System.string.center",
      "type": "method",
      "name": "center",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "center",
        "textToLower": "center",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_center_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String center(Integer size, String paddingString)",
      "simplifiedSignature": "center(Integer,String)",
      "datatype": {
        "id": "System.string.center.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a version of the current String of the specified size padded with the specified String on the left and right, so that it appears in the center. If the specified size is smaller than the current String size, the entire String is returned without padding.",
      "variables": {
        "size": {
          "id": "System.string.center.size",
          "type": "var",
          "name": "size",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "size",
            "textToLower": "size",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_size_-1:0"
          },
          "signature": "Integer size",
          "datatype": {
            "id": "System.string.center.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "paddingString": {
          "id": "System.string.center.paddingstring",
          "type": "var",
          "name": "paddingString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "paddingString",
            "textToLower": "paddingstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_paddingString_-1:0"
          },
          "signature": "String paddingString",
          "datatype": {
            "id": "System.string.center.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "charat(integer)": {
      "id": "System.string.charat",
      "type": "method",
      "name": "charAt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "charAt",
        "textToLower": "charat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_charAt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer charAt(Integer index)",
      "simplifiedSignature": "charAt(Integer)",
      "datatype": {
        "id": "System.string.charat.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the value of the character at the specified index.",
      "variables": {
        "index": {
          "id": "System.string.charat.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.string.charat.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "codepointat(integer)": {
      "id": "System.string.codepointat",
      "type": "method",
      "name": "codePointAt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "codePointAt",
        "textToLower": "codepointat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_codePointAt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer codePointAt(Integer index)",
      "simplifiedSignature": "codePointAt(Integer)",
      "datatype": {
        "id": "System.string.codepointat.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the Unicode code point value at the specified index.",
      "variables": {
        "index": {
          "id": "System.string.codepointat.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.string.codepointat.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "codepointbefore(integer)": {
      "id": "System.string.codepointbefore",
      "type": "method",
      "name": "codePointBefore",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "codePointBefore",
        "textToLower": "codepointbefore",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_codePointBefore_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer codePointBefore(Integer index)",
      "simplifiedSignature": "codePointBefore(Integer)",
      "datatype": {
        "id": "System.string.codepointbefore.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the Unicode code point value that occurs before the specified index.",
      "variables": {
        "index": {
          "id": "System.string.codepointbefore.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.string.codepointbefore.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "codepointcount(integer,integer)": {
      "id": "System.string.codepointcount",
      "type": "method",
      "name": "codePointCount",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "codePointCount",
        "textToLower": "codepointcount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_codePointCount_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer codePointCount(Integer beginIndex, Integer endIndex)",
      "simplifiedSignature": "codePointCount(Integer,Integer)",
      "datatype": {
        "id": "System.string.codepointcount.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of Unicode code points within the specified text range.",
      "variables": {
        "beginIndex": {
          "id": "System.string.codepointcount.beginindex",
          "type": "var",
          "name": "beginIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "beginIndex",
            "textToLower": "beginindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_beginIndex_-1:0"
          },
          "signature": "Integer beginIndex",
          "datatype": {
            "id": "System.string.codepointcount.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "endIndex": {
          "id": "System.string.codepointcount.endindex",
          "type": "var",
          "name": "endIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endIndex",
            "textToLower": "endindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endIndex_-1:0"
          },
          "signature": "Integer endIndex",
          "datatype": {
            "id": "System.string.codepointcount.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "compareto(string)": {
      "id": "System.string.compareto",
      "type": "method",
      "name": "compareTo",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "compareTo",
        "textToLower": "compareto",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_compareTo_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer compareTo(String secondString)",
      "simplifiedSignature": "compareTo(String)",
      "datatype": {
        "id": "System.string.compareto.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Compares two strings lexicographically, based on the Unicode value of each character in the Strings.",
      "variables": {
        "secondString": {
          "id": "System.string.compareto.secondstring",
          "type": "var",
          "name": "secondString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "secondString",
            "textToLower": "secondstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_secondString_-1:0"
          },
          "signature": "String secondString",
          "datatype": {
            "id": "System.string.compareto.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "contains(string)": {
      "id": "System.string.contains",
      "type": "method",
      "name": "contains",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "contains",
        "textToLower": "contains",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_contains_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean contains(String substring)",
      "simplifiedSignature": "contains(String)",
      "datatype": {
        "id": "System.string.contains.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if and only if the String that called the method contains the specified sequence of characters in substring.",
      "variables": {
        "substring": {
          "id": "System.string.contains.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.contains.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "containsany(string)": {
      "id": "System.string.containsany",
      "type": "method",
      "name": "containsAny",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "containsAny",
        "textToLower": "containsany",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_containsAny_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean containsAny(String inputString)",
      "simplifiedSignature": "containsAny(String)",
      "datatype": {
        "id": "System.string.containsany.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains any of the characters in the specified String; otherwise, returns false.",
      "variables": {
        "inputString": {
          "id": "System.string.containsany.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.string.containsany.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "containsignorecase(string)": {
      "id": "System.string.containsignorecase",
      "type": "method",
      "name": "containsIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "containsIgnoreCase",
        "textToLower": "containsignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_containsIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean containsIgnoreCase(String substring)",
      "simplifiedSignature": "containsIgnoreCase(String)",
      "datatype": {
        "id": "System.string.containsignorecase.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains the specified sequence of characters without regard to case; otherwise, returns false.",
      "variables": {
        "substring": {
          "id": "System.string.containsignorecase.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.containsignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "containsnone(string)": {
      "id": "System.string.containsnone",
      "type": "method",
      "name": "containsNone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "containsNone",
        "textToLower": "containsnone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_containsNone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean containsNone(String inputString)",
      "simplifiedSignature": "containsNone(String)",
      "datatype": {
        "id": "System.string.containsnone.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String doesn’t contain any of the characters in the specified String; otherwise, returns false.",
      "variables": {
        "inputString": {
          "id": "System.string.containsnone.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.string.containsnone.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "containsonly(string)": {
      "id": "System.string.containsonly",
      "type": "method",
      "name": "containsOnly",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "containsOnly",
        "textToLower": "containsonly",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_containsOnly_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean containsOnly(String inputString)",
      "simplifiedSignature": "containsOnly(String)",
      "datatype": {
        "id": "System.string.containsonly.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains characters only from the specified sequence of characters and not any other characters; otherwise, returns false.",
      "variables": {
        "inputString": {
          "id": "System.string.containsonly.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.string.containsonly.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "containswhitespace()": {
      "id": "System.string.containswhitespace",
      "type": "method",
      "name": "containsWhitespace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "containsWhitespace",
        "textToLower": "containswhitespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_containsWhitespace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean containsWhitespace()",
      "simplifiedSignature": "containsWhitespace()",
      "datatype": {
        "id": "System.string.containswhitespace.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains any white space characters; otherwise, returns false.",
      "variables": {}
    },
    "countmatches(string)": {
      "id": "System.string.countmatches",
      "type": "method",
      "name": "countMatches",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "countMatches",
        "textToLower": "countmatches",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_countMatches_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer countMatches(String substring)",
      "simplifiedSignature": "countMatches(String)",
      "datatype": {
        "id": "System.string.countmatches.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of times the specified substring occurs in the current String.",
      "variables": {
        "substring": {
          "id": "System.string.countmatches.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.countmatches.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "deletewhitespace()": {
      "id": "System.string.deletewhitespace",
      "type": "method",
      "name": "deleteWhitespace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deleteWhitespace",
        "textToLower": "deletewhitespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deleteWhitespace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String deleteWhitespace()",
      "simplifiedSignature": "deleteWhitespace()",
      "datatype": {
        "id": "System.string.deletewhitespace.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a version of the current String with all white space characters removed.",
      "variables": {}
    },
    "difference(string)": {
      "id": "System.string.difference",
      "type": "method",
      "name": "difference",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "difference",
        "textToLower": "difference",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_difference_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String difference(String secondString)",
      "simplifiedSignature": "difference(String)",
      "datatype": {
        "id": "System.string.difference.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the difference between the current String and the specified String.",
      "variables": {
        "secondString": {
          "id": "System.string.difference.secondstring",
          "type": "var",
          "name": "secondString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "secondString",
            "textToLower": "secondstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_secondString_-1:0"
          },
          "signature": "String secondString",
          "datatype": {
            "id": "System.string.difference.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "endswith(string)": {
      "id": "System.string.endswith",
      "type": "method",
      "name": "endsWith",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "endsWith",
        "textToLower": "endswith",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_endsWith_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean endsWith(String suffix)",
      "simplifiedSignature": "endsWith(String)",
      "datatype": {
        "id": "System.string.endswith.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the String that called the method ends with the specified suffix.",
      "variables": {
        "suffix": {
          "id": "System.string.endswith.suffix",
          "type": "var",
          "name": "suffix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "suffix",
            "textToLower": "suffix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_suffix_-1:0"
          },
          "signature": "String suffix",
          "datatype": {
            "id": "System.string.endswith.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "endswithignorecase(string)": {
      "id": "System.string.endswithignorecase",
      "type": "method",
      "name": "endsWithIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "endsWithIgnoreCase",
        "textToLower": "endswithignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_endsWithIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean endsWithIgnoreCase(String suffix)",
      "simplifiedSignature": "endsWithIgnoreCase(String)",
      "datatype": {
        "id": "System.string.endswithignorecase.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String ends with the specified suffix; otherwise, returns false.",
      "variables": {
        "suffix": {
          "id": "System.string.endswithignorecase.suffix",
          "type": "var",
          "name": "suffix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "suffix",
            "textToLower": "suffix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_suffix_-1:0"
          },
          "signature": "String suffix",
          "datatype": {
            "id": "System.string.endswithignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "equals(string)": {
      "id": "System.string.equals",
      "type": "method",
      "name": "equals",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "equals",
        "textToLower": "equals",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_equals_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean equals(String secondString)",
      "simplifiedSignature": "equals(String)",
      "datatype": {
        "id": "System.string.equals.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Deprecated. This method is replaced by equals(stringOrId). Returns true if the passed-in string is not null and represents the same binary sequence of characters as the current string. Use this method to perform case-sensitive comparisons.",
      "variables": {
        "secondString": {
          "id": "System.string.equals.secondstring",
          "type": "var",
          "name": "secondString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "secondString",
            "textToLower": "secondstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_secondString_-1:0"
          },
          "signature": "String secondString",
          "datatype": {
            "id": "System.string.equals.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "equals(object)": {
      "id": "System.string.equals",
      "type": "method",
      "name": "equals",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "equals",
        "textToLower": "equals",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_equals_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean equals(Object stringOrId)",
      "simplifiedSignature": "equals(Object)",
      "datatype": {
        "id": "System.string.equals.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the passed-in object is not null and represents the same binary sequence of characters as the current string. Use this method to compare a string to an object that represents a string or an ID.",
      "variables": {
        "stringOrId": {
          "id": "System.string.equals.stringorid",
          "type": "var",
          "name": "stringOrId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stringOrId",
            "textToLower": "stringorid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_stringOrId_-1:0"
          },
          "signature": "Object stringOrId",
          "datatype": {
            "id": "System.string.equals.object",
            "type": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "equalsignorecase(string)": {
      "id": "System.string.equalsignorecase",
      "type": "method",
      "name": "equalsIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "equalsIgnoreCase",
        "textToLower": "equalsignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_equalsIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean equalsIgnoreCase(String secondString)",
      "simplifiedSignature": "equalsIgnoreCase(String)",
      "datatype": {
        "id": "System.string.equalsignorecase.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the secondString is not null and represents the same sequence of characters as the String that called the method, ignoring case.",
      "variables": {
        "secondString": {
          "id": "System.string.equalsignorecase.secondstring",
          "type": "var",
          "name": "secondString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "secondString",
            "textToLower": "secondstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_secondString_-1:0"
          },
          "signature": "String secondString",
          "datatype": {
            "id": "System.string.equalsignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "escapecsv()": {
      "id": "System.string.escapecsv",
      "type": "method",
      "name": "escapeCsv",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeCsv",
        "textToLower": "escapecsv",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeCsv_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String escapeCsv()",
      "simplifiedSignature": "escapeCsv()",
      "datatype": {
        "id": "System.string.escapecsv.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String for a CSV column enclosed in double quotes, if required.",
      "variables": {}
    },
    "escapeecmascript()": {
      "id": "System.string.escapeecmascript",
      "type": "method",
      "name": "escapeEcmaScript",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeEcmaScript",
        "textToLower": "escapeecmascript",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeEcmaScript_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String escapeEcmaScript()",
      "simplifiedSignature": "escapeEcmaScript()",
      "datatype": {
        "id": "System.string.escapeecmascript.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Escapes the characters in the String using EcmaScript String rules.",
      "variables": {}
    },
    "escapehtml3()": {
      "id": "System.string.escapehtml3",
      "type": "method",
      "name": "escapeHtml3",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeHtml3",
        "textToLower": "escapehtml3",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeHtml3_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String escapeHtml3()",
      "simplifiedSignature": "escapeHtml3()",
      "datatype": {
        "id": "System.string.escapehtml3.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Escapes the characters in a String using HTML 3.0 entities.",
      "variables": {}
    },
    "escapehtml4()": {
      "id": "System.string.escapehtml4",
      "type": "method",
      "name": "escapeHtml4",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeHtml4",
        "textToLower": "escapehtml4",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeHtml4_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String escapeHtml4()",
      "simplifiedSignature": "escapeHtml4()",
      "datatype": {
        "id": "System.string.escapehtml4.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Escapes the characters in a String using HTML 4.0 entities.",
      "variables": {}
    },
    "escapejava()": {
      "id": "System.string.escapejava",
      "type": "method",
      "name": "escapeJava",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeJava",
        "textToLower": "escapejava",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeJava_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String escapeJava()",
      "simplifiedSignature": "escapeJava()",
      "datatype": {
        "id": "System.string.escapejava.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String whose characters are escaped using Java String rules. Characters escaped include quotes and control characters, such as tab, backslash, and carriage return characters.",
      "variables": {}
    },
    "escapesinglequotes(string)": {
      "id": "System.string.escapesinglequotes",
      "type": "method",
      "name": "escapeSingleQuotes",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeSingleQuotes",
        "textToLower": "escapesinglequotes",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeSingleQuotes_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String escapeSingleQuotes(String stringToEscape)",
      "simplifiedSignature": "escapeSingleQuotes(String)",
      "datatype": {
        "id": "System.string.escapesinglequotes.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String with the escape character (\\) added before any single quotation marks in the String s.",
      "variables": {
        "stringToEscape": {
          "id": "System.string.escapesinglequotes.stringtoescape",
          "type": "var",
          "name": "stringToEscape",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stringToEscape",
            "textToLower": "stringtoescape",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_stringToEscape_-1:0"
          },
          "signature": "String stringToEscape",
          "datatype": {
            "id": "System.string.escapesinglequotes.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "escapeunicode()": {
      "id": "System.string.escapeunicode",
      "type": "method",
      "name": "escapeUnicode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeUnicode",
        "textToLower": "escapeunicode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeUnicode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String escapeUnicode()",
      "simplifiedSignature": "escapeUnicode()",
      "datatype": {
        "id": "System.string.escapeunicode.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String whose Unicode characters are escaped to a Unicode escape sequence.",
      "variables": {}
    },
    "escapexml()": {
      "id": "System.string.escapexml",
      "type": "method",
      "name": "escapeXml",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "escapeXml",
        "textToLower": "escapexml",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_escapeXml_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String escapeXml()",
      "simplifiedSignature": "escapeXml()",
      "datatype": {
        "id": "System.string.escapexml.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Escapes the characters in a String using XML entities.",
      "variables": {}
    },
    "format(string,list)": {
      "id": "System.string.format",
      "type": "method",
      "name": "format",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "format",
        "textToLower": "format",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_format_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String format(String stringToFormat, List <Object>)",
      "simplifiedSignature": "format(String,List)",
      "datatype": {
        "id": "System.string.format.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Treat the first argument as a pattern and return a string using the second argument for substitution and formatting. The substitution and formatting are the same as apex:outputText and the Java MessageFormat class. Non-string types in the second argument’s List are implicitly converted to strings, respecting the toString() method overrides that exist on the type.",
      "variables": {
        "stringToFormat": {
          "id": "System.string.format.stringtoformat",
          "type": "var",
          "name": "stringToFormat",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stringToFormat",
            "textToLower": "stringtoformat",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_stringToFormat_-1:0"
          },
          "signature": "String stringToFormat",
          "datatype": {
            "id": "System.string.format.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "<Object>": {
          "id": "System.string.format.<object>",
          "type": "var",
          "name": "<Object>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Object>",
            "textToLower": "<object>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Object>_-1:0"
          },
          "signature": "List <Object>",
          "datatype": {
            "id": "System.string.format.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "fromchararray(list)": {
      "id": "System.string.fromchararray",
      "type": "method",
      "name": "fromCharArray",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "fromCharArray",
        "textToLower": "fromchararray",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_fromCharArray_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String fromCharArray(List <Integer>)",
      "simplifiedSignature": "fromCharArray(List)",
      "datatype": {
        "id": "System.string.fromchararray.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String from the values of the list of integers.",
      "variables": {
        "<Integer>": {
          "id": "System.string.fromchararray.<integer>",
          "type": "var",
          "name": "<Integer>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Integer>",
            "textToLower": "<integer>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Integer>_-1:0"
          },
          "signature": "List <Integer>",
          "datatype": {
            "id": "System.string.fromchararray.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "getchars()": {
      "id": "System.string.getchars",
      "type": "method",
      "name": "getChars",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getChars",
        "textToLower": "getchars",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getChars_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<Integer> getChars()",
      "simplifiedSignature": "getChars()",
      "datatype": {
        "id": "System.string.getchars.List<Integer>",
        "type": "datatype",
        "name": "List<Integer>"
      },
      "description": "Returns an array of character values that represent the characters in this string.",
      "variables": {}
    },
    "getcommonprefix(list)": {
      "id": "System.string.getcommonprefix",
      "type": "method",
      "name": "getCommonPrefix",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getCommonPrefix",
        "textToLower": "getcommonprefix",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getCommonPrefix_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String getCommonPrefix(List <String>)",
      "simplifiedSignature": "getCommonPrefix(List)",
      "datatype": {
        "id": "System.string.getcommonprefix.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the initial sequence of characters as a String that is common to all the specified Strings.",
      "variables": {
        "<String>": {
          "id": "System.string.getcommonprefix.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "System.string.getcommonprefix.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "getlevenshteindistance(string)": {
      "id": "System.string.getlevenshteindistance",
      "type": "method",
      "name": "getLevenshteinDistance",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLevenshteinDistance",
        "textToLower": "getlevenshteindistance",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLevenshteinDistance_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer getLevenshteinDistance(String stringToCompare)",
      "simplifiedSignature": "getLevenshteinDistance(String)",
      "datatype": {
        "id": "System.string.getlevenshteindistance.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the Levenshtein distance between the current String and the specified String.",
      "variables": {
        "stringToCompare": {
          "id": "System.string.getlevenshteindistance.stringtocompare",
          "type": "var",
          "name": "stringToCompare",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stringToCompare",
            "textToLower": "stringtocompare",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_stringToCompare_-1:0"
          },
          "signature": "String stringToCompare",
          "datatype": {
            "id": "System.string.getlevenshteindistance.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getlevenshteindistance(string,integer)": {
      "id": "System.string.getlevenshteindistance",
      "type": "method",
      "name": "getLevenshteinDistance",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLevenshteinDistance",
        "textToLower": "getlevenshteindistance",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLevenshteinDistance_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer getLevenshteinDistance(String stringToCompare, Integer threshold)",
      "simplifiedSignature": "getLevenshteinDistance(String,Integer)",
      "datatype": {
        "id": "System.string.getlevenshteindistance.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the Levenshtein distance between the current String and the specified String if it is less than or equal than the given threshold; otherwise, returns -1.",
      "variables": {
        "stringToCompare": {
          "id": "System.string.getlevenshteindistance.stringtocompare",
          "type": "var",
          "name": "stringToCompare",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stringToCompare",
            "textToLower": "stringtocompare",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_stringToCompare_-1:0"
          },
          "signature": "String stringToCompare",
          "datatype": {
            "id": "System.string.getlevenshteindistance.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "threshold": {
          "id": "System.string.getlevenshteindistance.threshold",
          "type": "var",
          "name": "threshold",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "threshold",
            "textToLower": "threshold",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_threshold_-1:0"
          },
          "signature": "Integer threshold",
          "datatype": {
            "id": "System.string.getlevenshteindistance.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "hashcode()": {
      "id": "System.string.hashcode",
      "type": "method",
      "name": "hashCode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hashCode",
        "textToLower": "hashcode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hashCode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer hashCode()",
      "simplifiedSignature": "hashCode()",
      "datatype": {
        "id": "System.string.hashcode.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns a hash code value for this string.",
      "variables": {}
    },
    "indexof(string)": {
      "id": "System.string.indexof",
      "type": "method",
      "name": "indexOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOf",
        "textToLower": "indexof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOf(String substring)",
      "simplifiedSignature": "indexOf(String)",
      "datatype": {
        "id": "System.string.indexof.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the first occurrence of the specified substring. If the substring does not occur, this method returns -1.",
      "variables": {
        "substring": {
          "id": "System.string.indexof.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.indexof.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "indexof(string,integer)": {
      "id": "System.string.indexof",
      "type": "method",
      "name": "indexOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOf",
        "textToLower": "indexof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOf(String substring, Integer index)",
      "simplifiedSignature": "indexOf(String,Integer)",
      "datatype": {
        "id": "System.string.indexof.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the zero-based index of the first occurrence of the specified substring from the point of the given index. If the substring does not occur, this method returns -1.",
      "variables": {
        "substring": {
          "id": "System.string.indexof.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.indexof.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "index": {
          "id": "System.string.indexof.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.string.indexof.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "indexofany(string)": {
      "id": "System.string.indexofany",
      "type": "method",
      "name": "indexOfAny",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOfAny",
        "textToLower": "indexofany",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOfAny_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOfAny(String substring)",
      "simplifiedSignature": "indexOfAny(String)",
      "datatype": {
        "id": "System.string.indexofany.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the zero-based index of the first occurrence of any character specified in the substring. If none of the characters occur, returns -1.",
      "variables": {
        "substring": {
          "id": "System.string.indexofany.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.indexofany.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "indexofanybut(string)": {
      "id": "System.string.indexofanybut",
      "type": "method",
      "name": "indexOfAnyBut",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOfAnyBut",
        "textToLower": "indexofanybut",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOfAnyBut_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOfAnyBut(String substring)",
      "simplifiedSignature": "indexOfAnyBut(String)",
      "datatype": {
        "id": "System.string.indexofanybut.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the zero-based index of the first occurrence of a character that is not in the specified substring. Otherwise, returns -1.",
      "variables": {
        "substring": {
          "id": "System.string.indexofanybut.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.indexofanybut.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "indexofchar(integer)": {
      "id": "System.string.indexofchar",
      "type": "method",
      "name": "indexOfChar",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOfChar",
        "textToLower": "indexofchar",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOfChar_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOfChar(Integer character)",
      "simplifiedSignature": "indexOfChar(Integer)",
      "datatype": {
        "id": "System.string.indexofchar.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the first occurrence of the character that corresponds to the specified character value.",
      "variables": {
        "character": {
          "id": "System.string.indexofchar.character",
          "type": "var",
          "name": "character",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "character",
            "textToLower": "character",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_character_-1:0"
          },
          "signature": "Integer character",
          "datatype": {
            "id": "System.string.indexofchar.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "indexofchar(integer,integer)": {
      "id": "System.string.indexofchar",
      "type": "method",
      "name": "indexOfChar",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOfChar",
        "textToLower": "indexofchar",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOfChar_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOfChar(Integer character, Integer startIndex)",
      "simplifiedSignature": "indexOfChar(Integer,Integer)",
      "datatype": {
        "id": "System.string.indexofchar.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the first occurrence of the character that corresponds to the specified character value, starting from the specified index.",
      "variables": {
        "character": {
          "id": "System.string.indexofchar.character",
          "type": "var",
          "name": "character",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "character",
            "textToLower": "character",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_character_-1:0"
          },
          "signature": "Integer character",
          "datatype": {
            "id": "System.string.indexofchar.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "startIndex": {
          "id": "System.string.indexofchar.startindex",
          "type": "var",
          "name": "startIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startIndex",
            "textToLower": "startindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startIndex_-1:0"
          },
          "signature": "Integer startIndex",
          "datatype": {
            "id": "System.string.indexofchar.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "indexofdifference(string)": {
      "id": "System.string.indexofdifference",
      "type": "method",
      "name": "indexOfDifference",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOfDifference",
        "textToLower": "indexofdifference",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOfDifference_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOfDifference(String stringToCompare)",
      "simplifiedSignature": "indexOfDifference(String)",
      "datatype": {
        "id": "System.string.indexofdifference.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the zero-based index of the character where the current String begins to differ from the specified String.",
      "variables": {
        "stringToCompare": {
          "id": "System.string.indexofdifference.stringtocompare",
          "type": "var",
          "name": "stringToCompare",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stringToCompare",
            "textToLower": "stringtocompare",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_stringToCompare_-1:0"
          },
          "signature": "String stringToCompare",
          "datatype": {
            "id": "System.string.indexofdifference.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "indexofignorecase(string)": {
      "id": "System.string.indexofignorecase",
      "type": "method",
      "name": "indexOfIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOfIgnoreCase",
        "textToLower": "indexofignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOfIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOfIgnoreCase(String substring)",
      "simplifiedSignature": "indexOfIgnoreCase(String)",
      "datatype": {
        "id": "System.string.indexofignorecase.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the zero-based index of the first occurrence of the specified substring without regard to case. If the substring does not occur, this method returns -1.",
      "variables": {
        "substring": {
          "id": "System.string.indexofignorecase.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.indexofignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "indexofignorecase(string,integer)": {
      "id": "System.string.indexofignorecase",
      "type": "method",
      "name": "indexOfIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "indexOfIgnoreCase",
        "textToLower": "indexofignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_indexOfIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer indexOfIgnoreCase(String substring, Integer startPosition)",
      "simplifiedSignature": "indexOfIgnoreCase(String,Integer)",
      "datatype": {
        "id": "System.string.indexofignorecase.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the zero-based index of the first occurrence of the specified substring from the point of index i, without regard to case. If the substring does not occur, this method returns -1.",
      "variables": {
        "substring": {
          "id": "System.string.indexofignorecase.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.indexofignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "startPosition": {
          "id": "System.string.indexofignorecase.startposition",
          "type": "var",
          "name": "startPosition",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startPosition",
            "textToLower": "startposition",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startPosition_-1:0"
          },
          "signature": "Integer startPosition",
          "datatype": {
            "id": "System.string.indexofignorecase.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "isalllowercase()": {
      "id": "System.string.isalllowercase",
      "type": "method",
      "name": "isAllLowerCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAllLowerCase",
        "textToLower": "isalllowercase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAllLowerCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAllLowerCase()",
      "simplifiedSignature": "isAllLowerCase()",
      "datatype": {
        "id": "System.string.isalllowercase.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if all characters in the current String are lowercase; otherwise, returns false.",
      "variables": {}
    },
    "isalluppercase()": {
      "id": "System.string.isalluppercase",
      "type": "method",
      "name": "isAllUpperCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAllUpperCase",
        "textToLower": "isalluppercase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAllUpperCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAllUpperCase()",
      "simplifiedSignature": "isAllUpperCase()",
      "datatype": {
        "id": "System.string.isalluppercase.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if all characters in the current String are uppercase; otherwise, returns false.",
      "variables": {}
    },
    "isalpha()": {
      "id": "System.string.isalpha",
      "type": "method",
      "name": "isAlpha",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAlpha",
        "textToLower": "isalpha",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAlpha_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAlpha()",
      "simplifiedSignature": "isAlpha()",
      "datatype": {
        "id": "System.string.isalpha.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if all characters in the current String are Unicode letters only; otherwise, returns false.",
      "variables": {}
    },
    "isalphaspace()": {
      "id": "System.string.isalphaspace",
      "type": "method",
      "name": "isAlphaSpace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAlphaSpace",
        "textToLower": "isalphaspace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAlphaSpace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAlphaSpace()",
      "simplifiedSignature": "isAlphaSpace()",
      "datatype": {
        "id": "System.string.isalphaspace.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if all characters in the current String are Unicode letters or spaces only; otherwise, returns false.",
      "variables": {}
    },
    "isalphanumeric()": {
      "id": "System.string.isalphanumeric",
      "type": "method",
      "name": "isAlphanumeric",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAlphanumeric",
        "textToLower": "isalphanumeric",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAlphanumeric_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAlphanumeric()",
      "simplifiedSignature": "isAlphanumeric()",
      "datatype": {
        "id": "System.string.isalphanumeric.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if all characters in the current String are Unicode letters or numbers only; otherwise, returns false.",
      "variables": {}
    },
    "isalphanumericspace()": {
      "id": "System.string.isalphanumericspace",
      "type": "method",
      "name": "isAlphanumericSpace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAlphanumericSpace",
        "textToLower": "isalphanumericspace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAlphanumericSpace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAlphanumericSpace()",
      "simplifiedSignature": "isAlphanumericSpace()",
      "datatype": {
        "id": "System.string.isalphanumericspace.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if all characters in the current String are Unicode letters, numbers, or spaces only; otherwise, returns false.",
      "variables": {}
    },
    "isasciiprintable()": {
      "id": "System.string.isasciiprintable",
      "type": "method",
      "name": "isAsciiPrintable",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isAsciiPrintable",
        "textToLower": "isasciiprintable",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isAsciiPrintable_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isAsciiPrintable()",
      "simplifiedSignature": "isAsciiPrintable()",
      "datatype": {
        "id": "System.string.isasciiprintable.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains only ASCII printable characters; otherwise, returns false.",
      "variables": {}
    },
    "isblank(string)": {
      "id": "System.string.isblank",
      "type": "method",
      "name": "isBlank",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isBlank",
        "textToLower": "isblank",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isBlank_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isBlank(String inputString)",
      "simplifiedSignature": "isBlank(String)",
      "datatype": {
        "id": "System.string.isblank.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the specified String is white space, empty (''), or null; otherwise, returns false.",
      "variables": {
        "inputString": {
          "id": "System.string.isblank.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.string.isblank.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "isempty(string)": {
      "id": "System.string.isempty",
      "type": "method",
      "name": "isEmpty",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isEmpty",
        "textToLower": "isempty",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isEmpty_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isEmpty(String inputString)",
      "simplifiedSignature": "isEmpty(String)",
      "datatype": {
        "id": "System.string.isempty.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the specified String is empty ('') or null; otherwise, returns false.",
      "variables": {
        "inputString": {
          "id": "System.string.isempty.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.string.isempty.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "isnotblank(string)": {
      "id": "System.string.isnotblank",
      "type": "method",
      "name": "isNotBlank",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isNotBlank",
        "textToLower": "isnotblank",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isNotBlank_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isNotBlank(String inputString)",
      "simplifiedSignature": "isNotBlank(String)",
      "datatype": {
        "id": "System.string.isnotblank.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the specified String is not whitespace, not empty (''), and not null; otherwise, returns false.",
      "variables": {
        "inputString": {
          "id": "System.string.isnotblank.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.string.isnotblank.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "isnotempty(string)": {
      "id": "System.string.isnotempty",
      "type": "method",
      "name": "isNotEmpty",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isNotEmpty",
        "textToLower": "isnotempty",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isNotEmpty_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean isNotEmpty(String inputString)",
      "simplifiedSignature": "isNotEmpty(String)",
      "datatype": {
        "id": "System.string.isnotempty.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the specified String is not empty ('') and not null; otherwise, returns false.",
      "variables": {
        "inputString": {
          "id": "System.string.isnotempty.inputstring",
          "type": "var",
          "name": "inputString",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "inputString",
            "textToLower": "inputstring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_inputString_-1:0"
          },
          "signature": "String inputString",
          "datatype": {
            "id": "System.string.isnotempty.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "isnumeric()": {
      "id": "System.string.isnumeric",
      "type": "method",
      "name": "isNumeric",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isNumeric",
        "textToLower": "isnumeric",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isNumeric_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isNumeric()",
      "simplifiedSignature": "isNumeric()",
      "datatype": {
        "id": "System.string.isnumeric.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains only Unicode digits; otherwise, returns false.",
      "variables": {}
    },
    "isnumericspace()": {
      "id": "System.string.isnumericspace",
      "type": "method",
      "name": "isNumericSpace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isNumericSpace",
        "textToLower": "isnumericspace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isNumericSpace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isNumericSpace()",
      "simplifiedSignature": "isNumericSpace()",
      "datatype": {
        "id": "System.string.isnumericspace.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains only Unicode digits or spaces; otherwise, returns false.",
      "variables": {}
    },
    "iswhitespace()": {
      "id": "System.string.iswhitespace",
      "type": "method",
      "name": "isWhitespace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isWhitespace",
        "textToLower": "iswhitespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isWhitespace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isWhitespace()",
      "simplifiedSignature": "isWhitespace()",
      "datatype": {
        "id": "System.string.iswhitespace.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String contains only white space characters or is empty; otherwise, returns false.",
      "variables": {}
    },
    "join(object,string)": {
      "id": "System.string.join",
      "type": "method",
      "name": "join",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "join",
        "textToLower": "join",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_join_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String join(Object iterableObj, String separator)",
      "simplifiedSignature": "join(Object,String)",
      "datatype": {
        "id": "System.string.join.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Joins the elements of the specified iterable object, such as a List, into a single String separated by the specified separator.",
      "variables": {
        "iterableObj": {
          "id": "System.string.join.iterableobj",
          "type": "var",
          "name": "iterableObj",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "iterableObj",
            "textToLower": "iterableobj",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_iterableObj_-1:0"
          },
          "signature": "Object iterableObj",
          "datatype": {
            "id": "System.string.join.object",
            "type": "datatype",
            "name": "Object"
          }
        },
        "separator": {
          "id": "System.string.join.separator",
          "type": "var",
          "name": "separator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "separator",
            "textToLower": "separator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_separator_-1:0"
          },
          "signature": "String separator",
          "datatype": {
            "id": "System.string.join.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "lastindexof(string)": {
      "id": "System.string.lastindexof",
      "type": "method",
      "name": "lastIndexOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lastIndexOf",
        "textToLower": "lastindexof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lastIndexOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer lastIndexOf(String substring)",
      "simplifiedSignature": "lastIndexOf(String)",
      "datatype": {
        "id": "System.string.lastindexof.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the last occurrence of the specified substring. If the substring does not occur, this method returns -1.",
      "variables": {
        "substring": {
          "id": "System.string.lastindexof.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.lastindexof.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "lastindexof(string,integer)": {
      "id": "System.string.lastindexof",
      "type": "method",
      "name": "lastIndexOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lastIndexOf",
        "textToLower": "lastindexof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lastIndexOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer lastIndexOf(String substring, Integer endPosition)",
      "simplifiedSignature": "lastIndexOf(String,Integer)",
      "datatype": {
        "id": "System.string.lastindexof.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the last occurrence of the specified substring, starting from the character at index 0 and ending at the specified index.",
      "variables": {
        "substring": {
          "id": "System.string.lastindexof.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.lastindexof.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "endPosition": {
          "id": "System.string.lastindexof.endposition",
          "type": "var",
          "name": "endPosition",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endPosition",
            "textToLower": "endposition",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endPosition_-1:0"
          },
          "signature": "Integer endPosition",
          "datatype": {
            "id": "System.string.lastindexof.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "lastindexofchar(integer)": {
      "id": "System.string.lastindexofchar",
      "type": "method",
      "name": "lastIndexOfChar",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lastIndexOfChar",
        "textToLower": "lastindexofchar",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lastIndexOfChar_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer lastIndexOfChar(Integer character)",
      "simplifiedSignature": "lastIndexOfChar(Integer)",
      "datatype": {
        "id": "System.string.lastindexofchar.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the last occurrence of the character that corresponds to the specified character value.",
      "variables": {
        "character": {
          "id": "System.string.lastindexofchar.character",
          "type": "var",
          "name": "character",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "character",
            "textToLower": "character",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_character_-1:0"
          },
          "signature": "Integer character",
          "datatype": {
            "id": "System.string.lastindexofchar.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "lastindexofchar(integer,integer)": {
      "id": "System.string.lastindexofchar",
      "type": "method",
      "name": "lastIndexOfChar",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lastIndexOfChar",
        "textToLower": "lastindexofchar",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lastIndexOfChar_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer lastIndexOfChar(Integer character, Integer endIndex)",
      "simplifiedSignature": "lastIndexOfChar(Integer,Integer)",
      "datatype": {
        "id": "System.string.lastindexofchar.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the last occurrence of the character that corresponds to the specified character value, starting from the specified index.",
      "variables": {
        "character": {
          "id": "System.string.lastindexofchar.character",
          "type": "var",
          "name": "character",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "character",
            "textToLower": "character",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_character_-1:0"
          },
          "signature": "Integer character",
          "datatype": {
            "id": "System.string.lastindexofchar.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "endIndex": {
          "id": "System.string.lastindexofchar.endindex",
          "type": "var",
          "name": "endIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endIndex",
            "textToLower": "endindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endIndex_-1:0"
          },
          "signature": "Integer endIndex",
          "datatype": {
            "id": "System.string.lastindexofchar.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "lastindexofignorecase(string)": {
      "id": "System.string.lastindexofignorecase",
      "type": "method",
      "name": "lastIndexOfIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lastIndexOfIgnoreCase",
        "textToLower": "lastindexofignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lastIndexOfIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer lastIndexOfIgnoreCase(String substring)",
      "simplifiedSignature": "lastIndexOfIgnoreCase(String)",
      "datatype": {
        "id": "System.string.lastindexofignorecase.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the last occurrence of the specified substring regardless of case.",
      "variables": {
        "substring": {
          "id": "System.string.lastindexofignorecase.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.lastindexofignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "lastindexofignorecase(string,integer)": {
      "id": "System.string.lastindexofignorecase",
      "type": "method",
      "name": "lastIndexOfIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "lastIndexOfIgnoreCase",
        "textToLower": "lastindexofignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_lastIndexOfIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer lastIndexOfIgnoreCase(String substring, Integer endPosition)",
      "simplifiedSignature": "lastIndexOfIgnoreCase(String,Integer)",
      "datatype": {
        "id": "System.string.lastindexofignorecase.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the last occurrence of the specified substring regardless of case, starting from the character at index 0 and ending at the specified index.",
      "variables": {
        "substring": {
          "id": "System.string.lastindexofignorecase.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.lastindexofignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "endPosition": {
          "id": "System.string.lastindexofignorecase.endposition",
          "type": "var",
          "name": "endPosition",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endPosition",
            "textToLower": "endposition",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endPosition_-1:0"
          },
          "signature": "Integer endPosition",
          "datatype": {
            "id": "System.string.lastindexofignorecase.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "left(integer)": {
      "id": "System.string.left",
      "type": "method",
      "name": "left",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "left",
        "textToLower": "left",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_left_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String left(Integer length)",
      "simplifiedSignature": "left(Integer)",
      "datatype": {
        "id": "System.string.left.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the leftmost characters of the current String of the specified length.",
      "variables": {
        "length": {
          "id": "System.string.left.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "System.string.left.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "leftpad(integer)": {
      "id": "System.string.leftpad",
      "type": "method",
      "name": "leftPad",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "leftPad",
        "textToLower": "leftpad",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_leftPad_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String leftPad(Integer length)",
      "simplifiedSignature": "leftPad(Integer)",
      "datatype": {
        "id": "System.string.leftpad.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String padded with spaces on the left and of the specified length.",
      "variables": {
        "length": {
          "id": "System.string.leftpad.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "System.string.leftpad.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "leftpad(integer,string)": {
      "id": "System.string.leftpad",
      "type": "method",
      "name": "leftPad",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "leftPad",
        "textToLower": "leftpad",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_leftPad_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String leftPad(Integer length, String padStr)",
      "simplifiedSignature": "leftPad(Integer,String)",
      "datatype": {
        "id": "System.string.leftpad.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String padded with String padStr on the left and of the specified length.",
      "variables": {
        "length": {
          "id": "System.string.leftpad.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "System.string.leftpad.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "padStr": {
          "id": "System.string.leftpad.padstr",
          "type": "var",
          "name": "padStr",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "padStr",
            "textToLower": "padstr",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_padStr_-1:0"
          },
          "signature": "String padStr",
          "datatype": {
            "id": "System.string.leftpad.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "length()": {
      "id": "System.string.length",
      "type": "method",
      "name": "length",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "length",
        "textToLower": "length",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_length_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer length()",
      "simplifiedSignature": "length()",
      "datatype": {
        "id": "System.string.length.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of 16-bit Unicode characters contained in the String.",
      "variables": {}
    },
    "mid(integer,integer)": {
      "id": "System.string.mid",
      "type": "method",
      "name": "mid",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "mid",
        "textToLower": "mid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_mid_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String mid(Integer startIndex, Integer length)",
      "simplifiedSignature": "mid(Integer,Integer)",
      "datatype": {
        "id": "System.string.mid.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a new String that begins with the character at the specified zero-based startIndex with the number of characters specified by length.",
      "variables": {
        "startIndex": {
          "id": "System.string.mid.startindex",
          "type": "var",
          "name": "startIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startIndex",
            "textToLower": "startindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startIndex_-1:0"
          },
          "signature": "Integer startIndex",
          "datatype": {
            "id": "System.string.mid.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "length": {
          "id": "System.string.mid.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "System.string.mid.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "normalizespace()": {
      "id": "System.string.normalizespace",
      "type": "method",
      "name": "normalizeSpace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "normalizeSpace",
        "textToLower": "normalizespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_normalizeSpace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String normalizeSpace()",
      "simplifiedSignature": "normalizeSpace()",
      "datatype": {
        "id": "System.string.normalizespace.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String with leading, trailing, and repeating white space characters removed.",
      "variables": {}
    },
    "offsetbycodepoints(integer,integer)": {
      "id": "System.string.offsetbycodepoints",
      "type": "method",
      "name": "offsetByCodePoints",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "offsetByCodePoints",
        "textToLower": "offsetbycodepoints",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_offsetByCodePoints_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer offsetByCodePoints(Integer index, Integer codePointOffset)",
      "simplifiedSignature": "offsetByCodePoints(Integer,Integer)",
      "datatype": {
        "id": "System.string.offsetbycodepoints.Integer",
        "type": "datatype",
        "name": "Integer"
      },
      "description": "Returns the index of the Unicode code point that is offset by the specified number of code points, starting from the given index.",
      "variables": {
        "index": {
          "id": "System.string.offsetbycodepoints.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.string.offsetbycodepoints.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "codePointOffset": {
          "id": "System.string.offsetbycodepoints.codepointoffset",
          "type": "var",
          "name": "codePointOffset",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "codePointOffset",
            "textToLower": "codepointoffset",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_codePointOffset_-1:0"
          },
          "signature": "Integer codePointOffset",
          "datatype": {
            "id": "System.string.offsetbycodepoints.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "remove(string)": {
      "id": "System.string.remove",
      "type": "method",
      "name": "remove",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "remove",
        "textToLower": "remove",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_remove_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String remove(String substring)",
      "simplifiedSignature": "remove(String)",
      "datatype": {
        "id": "System.string.remove.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Removes all occurrences of the specified substring and returns the String result.",
      "variables": {
        "substring": {
          "id": "System.string.remove.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.remove.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "removeend(string)": {
      "id": "System.string.removeend",
      "type": "method",
      "name": "removeEnd",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeEnd",
        "textToLower": "removeend",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeEnd_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String removeEnd(String substring)",
      "simplifiedSignature": "removeEnd(String)",
      "datatype": {
        "id": "System.string.removeend.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Removes the specified substring only if it occurs at the end of the String.",
      "variables": {
        "substring": {
          "id": "System.string.removeend.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.removeend.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "removeendignorecase(string)": {
      "id": "System.string.removeendignorecase",
      "type": "method",
      "name": "removeEndIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeEndIgnoreCase",
        "textToLower": "removeendignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeEndIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String removeEndIgnoreCase(String substring)",
      "simplifiedSignature": "removeEndIgnoreCase(String)",
      "datatype": {
        "id": "System.string.removeendignorecase.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Removes the specified substring only if it occurs at the end of the String using a case-insensitive match.",
      "variables": {
        "substring": {
          "id": "System.string.removeendignorecase.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.removeendignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "removestart(string)": {
      "id": "System.string.removestart",
      "type": "method",
      "name": "removeStart",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeStart",
        "textToLower": "removestart",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeStart_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String removeStart(String substring)",
      "simplifiedSignature": "removeStart(String)",
      "datatype": {
        "id": "System.string.removestart.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Removes the specified substring only if it occurs at the beginning of the String.",
      "variables": {
        "substring": {
          "id": "System.string.removestart.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.removestart.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "removestartignorecase(string)": {
      "id": "System.string.removestartignorecase",
      "type": "method",
      "name": "removeStartIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "removeStartIgnoreCase",
        "textToLower": "removestartignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_removeStartIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String removeStartIgnoreCase(String substring)",
      "simplifiedSignature": "removeStartIgnoreCase(String)",
      "datatype": {
        "id": "System.string.removestartignorecase.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Removes the specified substring only if it occurs at the beginning of the String using a case-insensitive match.",
      "variables": {
        "substring": {
          "id": "System.string.removestartignorecase.substring",
          "type": "var",
          "name": "substring",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "substring",
            "textToLower": "substring",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_substring_-1:0"
          },
          "signature": "String substring",
          "datatype": {
            "id": "System.string.removestartignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "repeat(integer)": {
      "id": "System.string.repeat",
      "type": "method",
      "name": "repeat",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "repeat",
        "textToLower": "repeat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_repeat_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String repeat(Integer numberOfTimes)",
      "simplifiedSignature": "repeat(Integer)",
      "datatype": {
        "id": "System.string.repeat.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String repeated the specified number of times.",
      "variables": {
        "numberOfTimes": {
          "id": "System.string.repeat.numberoftimes",
          "type": "var",
          "name": "numberOfTimes",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "numberOfTimes",
            "textToLower": "numberoftimes",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_numberOfTimes_-1:0"
          },
          "signature": "Integer numberOfTimes",
          "datatype": {
            "id": "System.string.repeat.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "repeat(string,integer)": {
      "id": "System.string.repeat",
      "type": "method",
      "name": "repeat",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "repeat",
        "textToLower": "repeat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_repeat_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String repeat(String separator, Integer numberOfTimes)",
      "simplifiedSignature": "repeat(String,Integer)",
      "datatype": {
        "id": "System.string.repeat.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String repeated the specified number of times using the specified separator to separate the repeated Strings.",
      "variables": {
        "separator": {
          "id": "System.string.repeat.separator",
          "type": "var",
          "name": "separator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "separator",
            "textToLower": "separator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_separator_-1:0"
          },
          "signature": "String separator",
          "datatype": {
            "id": "System.string.repeat.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "numberOfTimes": {
          "id": "System.string.repeat.numberoftimes",
          "type": "var",
          "name": "numberOfTimes",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "numberOfTimes",
            "textToLower": "numberoftimes",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_numberOfTimes_-1:0"
          },
          "signature": "Integer numberOfTimes",
          "datatype": {
            "id": "System.string.repeat.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "replace(string,string)": {
      "id": "System.string.replace",
      "type": "method",
      "name": "replace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "replace",
        "textToLower": "replace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_replace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String replace(String target, String replacement)",
      "simplifiedSignature": "replace(String,String)",
      "datatype": {
        "id": "System.string.replace.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Replaces each substring of a string that matches the literal target sequence target with the specified literal replacement sequence replacement.",
      "variables": {
        "target": {
          "id": "System.string.replace.target",
          "type": "var",
          "name": "target",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "target",
            "textToLower": "target",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_target_-1:0"
          },
          "signature": "String target",
          "datatype": {
            "id": "System.string.replace.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "replacement": {
          "id": "System.string.replace.replacement",
          "type": "var",
          "name": "replacement",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "replacement",
            "textToLower": "replacement",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_replacement_-1:0"
          },
          "signature": "String replacement",
          "datatype": {
            "id": "System.string.replace.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "replaceall(string,string)": {
      "id": "System.string.replaceall",
      "type": "method",
      "name": "replaceAll",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "replaceAll",
        "textToLower": "replaceall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_replaceAll_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String replaceAll(String regExp, String replacement)",
      "simplifiedSignature": "replaceAll(String,String)",
      "datatype": {
        "id": "System.string.replaceall.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Replaces each substring of a string that matches the regular expression regExp with the replacement sequence replacement.",
      "variables": {
        "regExp": {
          "id": "System.string.replaceall.regexp",
          "type": "var",
          "name": "regExp",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "regExp",
            "textToLower": "regexp",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_regExp_-1:0"
          },
          "signature": "String regExp",
          "datatype": {
            "id": "System.string.replaceall.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "replacement": {
          "id": "System.string.replaceall.replacement",
          "type": "var",
          "name": "replacement",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "replacement",
            "textToLower": "replacement",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_replacement_-1:0"
          },
          "signature": "String replacement",
          "datatype": {
            "id": "System.string.replaceall.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "replacefirst(string,string)": {
      "id": "System.string.replacefirst",
      "type": "method",
      "name": "replaceFirst",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "replaceFirst",
        "textToLower": "replacefirst",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_replaceFirst_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String replaceFirst(String regExp, String replacement)",
      "simplifiedSignature": "replaceFirst(String,String)",
      "datatype": {
        "id": "System.string.replacefirst.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Replaces the first substring of a string that matches the regular expression regExp with the replacement sequence replacement.",
      "variables": {
        "regExp": {
          "id": "System.string.replacefirst.regexp",
          "type": "var",
          "name": "regExp",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "regExp",
            "textToLower": "regexp",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_regExp_-1:0"
          },
          "signature": "String regExp",
          "datatype": {
            "id": "System.string.replacefirst.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "replacement": {
          "id": "System.string.replacefirst.replacement",
          "type": "var",
          "name": "replacement",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "replacement",
            "textToLower": "replacement",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_replacement_-1:0"
          },
          "signature": "String replacement",
          "datatype": {
            "id": "System.string.replacefirst.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "reverse()": {
      "id": "System.string.reverse",
      "type": "method",
      "name": "reverse",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "reverse",
        "textToLower": "reverse",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_reverse_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String reverse()",
      "simplifiedSignature": "reverse()",
      "datatype": {
        "id": "System.string.reverse.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String with all the characters reversed.",
      "variables": {}
    },
    "right(integer)": {
      "id": "System.string.right",
      "type": "method",
      "name": "right",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "right",
        "textToLower": "right",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_right_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String right(Integer length)",
      "simplifiedSignature": "right(Integer)",
      "datatype": {
        "id": "System.string.right.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the rightmost characters of the current String of the specified length.",
      "variables": {
        "length": {
          "id": "System.string.right.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "System.string.right.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "rightpad(integer)": {
      "id": "System.string.rightpad",
      "type": "method",
      "name": "rightPad",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rightPad",
        "textToLower": "rightpad",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rightPad_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String rightPad(Integer length)",
      "simplifiedSignature": "rightPad(Integer)",
      "datatype": {
        "id": "System.string.rightpad.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String padded with spaces on the right and of the specified length.",
      "variables": {
        "length": {
          "id": "System.string.rightpad.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "System.string.rightpad.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "rightpad(integer,string)": {
      "id": "System.string.rightpad",
      "type": "method",
      "name": "rightPad",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "rightPad",
        "textToLower": "rightpad",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_rightPad_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String rightPad(Integer length, String padStr)",
      "simplifiedSignature": "rightPad(Integer,String)",
      "datatype": {
        "id": "System.string.rightpad.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String padded with String padStr on the right and of the specified length.",
      "variables": {
        "length": {
          "id": "System.string.rightpad.length",
          "type": "var",
          "name": "length",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "length",
            "textToLower": "length",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_length_-1:0"
          },
          "signature": "Integer length",
          "datatype": {
            "id": "System.string.rightpad.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "padStr": {
          "id": "System.string.rightpad.padstr",
          "type": "var",
          "name": "padStr",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "padStr",
            "textToLower": "padstr",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_padStr_-1:0"
          },
          "signature": "String padStr",
          "datatype": {
            "id": "System.string.rightpad.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "split(string)": {
      "id": "System.string.split",
      "type": "method",
      "name": "split",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "split",
        "textToLower": "split",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_split_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String[] split(String regExp)",
      "simplifiedSignature": "split(String)",
      "datatype": {
        "id": "System.string.split.String[]",
        "type": "datatype",
        "name": "String[]"
      },
      "description": "Returns a list that contains each substring of the String that is terminated by either the regular expression regExp or the end of the String.",
      "variables": {
        "regExp": {
          "id": "System.string.split.regexp",
          "type": "var",
          "name": "regExp",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "regExp",
            "textToLower": "regexp",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_regExp_-1:0"
          },
          "signature": "String regExp",
          "datatype": {
            "id": "System.string.split.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "split(string,integer)": {
      "id": "System.string.split",
      "type": "method",
      "name": "split",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "split",
        "textToLower": "split",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_split_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String[] split(String regExp, Integer limit)",
      "simplifiedSignature": "split(String,Integer)",
      "datatype": {
        "id": "System.string.split.String[]",
        "type": "datatype",
        "name": "String[]"
      },
      "description": "Returns a list that contains each substring of the String that is terminated by either the regular expression regExp or the end of the String.",
      "variables": {
        "regExp": {
          "id": "System.string.split.regexp",
          "type": "var",
          "name": "regExp",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "regExp",
            "textToLower": "regexp",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_regExp_-1:0"
          },
          "signature": "String regExp",
          "datatype": {
            "id": "System.string.split.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "limit": {
          "id": "System.string.split.limit",
          "type": "var",
          "name": "limit",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "limit",
            "textToLower": "limit",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_limit_-1:0"
          },
          "signature": "Integer limit",
          "datatype": {
            "id": "System.string.split.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "splitbycharactertype()": {
      "id": "System.string.splitbycharactertype",
      "type": "method",
      "name": "splitByCharacterType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "splitByCharacterType",
        "textToLower": "splitbycharactertype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_splitByCharacterType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<String> splitByCharacterType()",
      "simplifiedSignature": "splitByCharacterType()",
      "datatype": {
        "id": "System.string.splitbycharactertype.List<String>",
        "type": "datatype",
        "name": "List<String>"
      },
      "description": "Splits the current String by character type and returns a list of contiguous character groups of the same type as complete tokens.",
      "variables": {}
    },
    "splitbycharactertypecamelcase()": {
      "id": "System.string.splitbycharactertypecamelcase",
      "type": "method",
      "name": "splitByCharacterTypeCamelCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "splitByCharacterTypeCamelCase",
        "textToLower": "splitbycharactertypecamelcase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_splitByCharacterTypeCamelCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public List<String> splitByCharacterTypeCamelCase()",
      "simplifiedSignature": "splitByCharacterTypeCamelCase()",
      "datatype": {
        "id": "System.string.splitbycharactertypecamelcase.List<String>",
        "type": "datatype",
        "name": "List<String>"
      },
      "description": "Splits the current String by character type and returns a list of contiguous character groups of the same type as complete tokens, with the following exception: the uppercase character, if any, immediately preceding a lowercase character token belongs to the following character token rather than to the preceding.",
      "variables": {}
    },
    "startswith(string)": {
      "id": "System.string.startswith",
      "type": "method",
      "name": "startsWith",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "startsWith",
        "textToLower": "startswith",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_startsWith_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean startsWith(String prefix)",
      "simplifiedSignature": "startsWith(String)",
      "datatype": {
        "id": "System.string.startswith.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the String that called the method begins with the specified prefix.",
      "variables": {
        "prefix": {
          "id": "System.string.startswith.prefix",
          "type": "var",
          "name": "prefix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "prefix",
            "textToLower": "prefix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_prefix_-1:0"
          },
          "signature": "String prefix",
          "datatype": {
            "id": "System.string.startswith.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "startswithignorecase(string)": {
      "id": "System.string.startswithignorecase",
      "type": "method",
      "name": "startsWithIgnoreCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "startsWithIgnoreCase",
        "textToLower": "startswithignorecase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_startsWithIgnoreCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean startsWithIgnoreCase(String prefix)",
      "simplifiedSignature": "startsWithIgnoreCase(String)",
      "datatype": {
        "id": "System.string.startswithignorecase.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current String begins with the specified prefix regardless of the prefix case.",
      "variables": {
        "prefix": {
          "id": "System.string.startswithignorecase.prefix",
          "type": "var",
          "name": "prefix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "prefix",
            "textToLower": "prefix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_prefix_-1:0"
          },
          "signature": "String prefix",
          "datatype": {
            "id": "System.string.startswithignorecase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "striphtmltags(string)": {
      "id": "System.string.striphtmltags",
      "type": "method",
      "name": "stripHtmlTags",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "stripHtmlTags",
        "textToLower": "striphtmltags",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_stripHtmlTags_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String stripHtmlTags(String htmlInput)",
      "simplifiedSignature": "stripHtmlTags(String)",
      "datatype": {
        "id": "System.string.striphtmltags.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Removes HTML markup and returns plain text.",
      "variables": {
        "htmlInput": {
          "id": "System.string.striphtmltags.htmlinput",
          "type": "var",
          "name": "htmlInput",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "htmlInput",
            "textToLower": "htmlinput",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_htmlInput_-1:0"
          },
          "signature": "String htmlInput",
          "datatype": {
            "id": "System.string.striphtmltags.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "substring(integer)": {
      "id": "System.string.substring",
      "type": "method",
      "name": "substring",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substring",
        "textToLower": "substring",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substring_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substring(Integer startIndex)",
      "simplifiedSignature": "substring(Integer)",
      "datatype": {
        "id": "System.string.substring.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a new String that begins with the character at the specified zero-based startIndex and extends to the end of the String.",
      "variables": {
        "startIndex": {
          "id": "System.string.substring.startindex",
          "type": "var",
          "name": "startIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startIndex",
            "textToLower": "startindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startIndex_-1:0"
          },
          "signature": "Integer startIndex",
          "datatype": {
            "id": "System.string.substring.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "substring(integer,integer)": {
      "id": "System.string.substring",
      "type": "method",
      "name": "substring",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substring",
        "textToLower": "substring",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substring_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substring(Integer startIndex, Integer endIndex)",
      "simplifiedSignature": "substring(Integer,Integer)",
      "datatype": {
        "id": "System.string.substring.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a new String that begins with the character at the specified zero-based startIndex and extends to the character at endIndex - 1.",
      "variables": {
        "startIndex": {
          "id": "System.string.substring.startindex",
          "type": "var",
          "name": "startIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startIndex",
            "textToLower": "startindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startIndex_-1:0"
          },
          "signature": "Integer startIndex",
          "datatype": {
            "id": "System.string.substring.integer",
            "type": "datatype",
            "name": "Integer"
          }
        },
        "endIndex": {
          "id": "System.string.substring.endindex",
          "type": "var",
          "name": "endIndex",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "endIndex",
            "textToLower": "endindex",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_endIndex_-1:0"
          },
          "signature": "Integer endIndex",
          "datatype": {
            "id": "System.string.substring.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "substringafter(string)": {
      "id": "System.string.substringafter",
      "type": "method",
      "name": "substringAfter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substringAfter",
        "textToLower": "substringafter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substringAfter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substringAfter(String separator)",
      "simplifiedSignature": "substringAfter(String)",
      "datatype": {
        "id": "System.string.substringafter.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the substring that occurs after the first occurrence of the specified separator.",
      "variables": {
        "separator": {
          "id": "System.string.substringafter.separator",
          "type": "var",
          "name": "separator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "separator",
            "textToLower": "separator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_separator_-1:0"
          },
          "signature": "String separator",
          "datatype": {
            "id": "System.string.substringafter.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "substringafterlast(string)": {
      "id": "System.string.substringafterlast",
      "type": "method",
      "name": "substringAfterLast",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substringAfterLast",
        "textToLower": "substringafterlast",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substringAfterLast_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substringAfterLast(String separator)",
      "simplifiedSignature": "substringAfterLast(String)",
      "datatype": {
        "id": "System.string.substringafterlast.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the substring that occurs after the last occurrence of the specified separator.",
      "variables": {
        "separator": {
          "id": "System.string.substringafterlast.separator",
          "type": "var",
          "name": "separator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "separator",
            "textToLower": "separator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_separator_-1:0"
          },
          "signature": "String separator",
          "datatype": {
            "id": "System.string.substringafterlast.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "substringbefore(string)": {
      "id": "System.string.substringbefore",
      "type": "method",
      "name": "substringBefore",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substringBefore",
        "textToLower": "substringbefore",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substringBefore_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substringBefore(String separator)",
      "simplifiedSignature": "substringBefore(String)",
      "datatype": {
        "id": "System.string.substringbefore.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the substring that occurs before the first occurrence of the specified separator.",
      "variables": {
        "separator": {
          "id": "System.string.substringbefore.separator",
          "type": "var",
          "name": "separator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "separator",
            "textToLower": "separator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_separator_-1:0"
          },
          "signature": "String separator",
          "datatype": {
            "id": "System.string.substringbefore.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "substringbeforelast(string)": {
      "id": "System.string.substringbeforelast",
      "type": "method",
      "name": "substringBeforeLast",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substringBeforeLast",
        "textToLower": "substringbeforelast",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substringBeforeLast_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substringBeforeLast(String separator)",
      "simplifiedSignature": "substringBeforeLast(String)",
      "datatype": {
        "id": "System.string.substringbeforelast.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the substring that occurs before the last occurrence of the specified separator.",
      "variables": {
        "separator": {
          "id": "System.string.substringbeforelast.separator",
          "type": "var",
          "name": "separator",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "separator",
            "textToLower": "separator",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_separator_-1:0"
          },
          "signature": "String separator",
          "datatype": {
            "id": "System.string.substringbeforelast.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "substringbetween(string)": {
      "id": "System.string.substringbetween",
      "type": "method",
      "name": "substringBetween",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substringBetween",
        "textToLower": "substringbetween",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substringBetween_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substringBetween(String tag)",
      "simplifiedSignature": "substringBetween(String)",
      "datatype": {
        "id": "System.string.substringbetween.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the substring that occurs between two instances of the specified tag String.",
      "variables": {
        "tag": {
          "id": "System.string.substringbetween.tag",
          "type": "var",
          "name": "tag",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "tag",
            "textToLower": "tag",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_tag_-1:0"
          },
          "signature": "String tag",
          "datatype": {
            "id": "System.string.substringbetween.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "substringbetween(string,string)": {
      "id": "System.string.substringbetween",
      "type": "method",
      "name": "substringBetween",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "substringBetween",
        "textToLower": "substringbetween",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_substringBetween_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String substringBetween(String open, String close)",
      "simplifiedSignature": "substringBetween(String,String)",
      "datatype": {
        "id": "System.string.substringbetween.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the substring that occurs between the two specified Strings.",
      "variables": {
        "open": {
          "id": "System.string.substringbetween.open",
          "type": "var",
          "name": "open",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "open",
            "textToLower": "open",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_open_-1:0"
          },
          "signature": "String open",
          "datatype": {
            "id": "System.string.substringbetween.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "close": {
          "id": "System.string.substringbetween.close",
          "type": "var",
          "name": "close",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "close",
            "textToLower": "close",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_close_-1:0"
          },
          "signature": "String close",
          "datatype": {
            "id": "System.string.substringbetween.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "swapcase()": {
      "id": "System.string.swapcase",
      "type": "method",
      "name": "swapCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "swapCase",
        "textToLower": "swapcase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_swapCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String swapCase()",
      "simplifiedSignature": "swapCase()",
      "datatype": {
        "id": "System.string.swapcase.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Swaps the case of all characters and returns the resulting String by using the default (English US) locale.",
      "variables": {}
    },
    "tolowercase()": {
      "id": "System.string.tolowercase",
      "type": "method",
      "name": "toLowerCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toLowerCase",
        "textToLower": "tolowercase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toLowerCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toLowerCase()",
      "simplifiedSignature": "toLowerCase()",
      "datatype": {
        "id": "System.string.tolowercase.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Converts all of the characters in the String to lowercase using the rules of the default (English US) locale.",
      "variables": {}
    },
    "tolowercase(string)": {
      "id": "System.string.tolowercase",
      "type": "method",
      "name": "toLowerCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toLowerCase",
        "textToLower": "tolowercase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toLowerCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toLowerCase(String locale)",
      "simplifiedSignature": "toLowerCase(String)",
      "datatype": {
        "id": "System.string.tolowercase.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Converts all of the characters in the String to lowercase using the rules of the specified locale.",
      "variables": {
        "locale": {
          "id": "System.string.tolowercase.locale",
          "type": "var",
          "name": "locale",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "locale",
            "textToLower": "locale",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_locale_-1:0"
          },
          "signature": "String locale",
          "datatype": {
            "id": "System.string.tolowercase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "touppercase()": {
      "id": "System.string.touppercase",
      "type": "method",
      "name": "toUpperCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toUpperCase",
        "textToLower": "touppercase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toUpperCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toUpperCase()",
      "simplifiedSignature": "toUpperCase()",
      "datatype": {
        "id": "System.string.touppercase.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Converts all of the characters in the String to uppercase using the rules of the default (English US) locale.",
      "variables": {}
    },
    "touppercase(string)": {
      "id": "System.string.touppercase",
      "type": "method",
      "name": "toUpperCase",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toUpperCase",
        "textToLower": "touppercase",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toUpperCase_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toUpperCase(String locale)",
      "simplifiedSignature": "toUpperCase(String)",
      "datatype": {
        "id": "System.string.touppercase.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Converts all of the characters in the String to the uppercase using the rules of the specified locale.",
      "variables": {
        "locale": {
          "id": "System.string.touppercase.locale",
          "type": "var",
          "name": "locale",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "locale",
            "textToLower": "locale",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_locale_-1:0"
          },
          "signature": "String locale",
          "datatype": {
            "id": "System.string.touppercase.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "trim()": {
      "id": "System.string.trim",
      "type": "method",
      "name": "trim",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "trim",
        "textToLower": "trim",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_trim_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String trim()",
      "simplifiedSignature": "trim()",
      "datatype": {
        "id": "System.string.trim.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a copy of the string that no longer contains any leading or trailing white space characters.",
      "variables": {}
    },
    "uncapitalize()": {
      "id": "System.string.uncapitalize",
      "type": "method",
      "name": "uncapitalize",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "uncapitalize",
        "textToLower": "uncapitalize",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_uncapitalize_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String uncapitalize()",
      "simplifiedSignature": "uncapitalize()",
      "datatype": {
        "id": "System.string.uncapitalize.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns the current String with the first letter in lowercase.",
      "variables": {}
    },
    "unescapecsv()": {
      "id": "System.string.unescapecsv",
      "type": "method",
      "name": "unescapeCsv",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unescapeCsv",
        "textToLower": "unescapecsv",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unescapeCsv_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String unescapeCsv()",
      "simplifiedSignature": "unescapeCsv()",
      "datatype": {
        "id": "System.string.unescapecsv.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String representing an unescaped CSV column.",
      "variables": {}
    },
    "unescapeecmascript()": {
      "id": "System.string.unescapeecmascript",
      "type": "method",
      "name": "unescapeEcmaScript",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unescapeEcmaScript",
        "textToLower": "unescapeecmascript",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unescapeEcmaScript_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String unescapeEcmaScript()",
      "simplifiedSignature": "unescapeEcmaScript()",
      "datatype": {
        "id": "System.string.unescapeecmascript.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Unescapes any EcmaScript literals found in the String.",
      "variables": {}
    },
    "unescapehtml3()": {
      "id": "System.string.unescapehtml3",
      "type": "method",
      "name": "unescapeHtml3",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unescapeHtml3",
        "textToLower": "unescapehtml3",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unescapeHtml3_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String unescapeHtml3()",
      "simplifiedSignature": "unescapeHtml3()",
      "datatype": {
        "id": "System.string.unescapehtml3.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Unescapes the characters in a String using HTML 3.0 entities.",
      "variables": {}
    },
    "unescapehtml4()": {
      "id": "System.string.unescapehtml4",
      "type": "method",
      "name": "unescapeHtml4",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unescapeHtml4",
        "textToLower": "unescapehtml4",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unescapeHtml4_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String unescapeHtml4()",
      "simplifiedSignature": "unescapeHtml4()",
      "datatype": {
        "id": "System.string.unescapehtml4.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Unescapes the characters in a String using HTML 4.0 entities.",
      "variables": {}
    },
    "unescapejava()": {
      "id": "System.string.unescapejava",
      "type": "method",
      "name": "unescapeJava",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unescapeJava",
        "textToLower": "unescapejava",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unescapeJava_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String unescapeJava()",
      "simplifiedSignature": "unescapeJava()",
      "datatype": {
        "id": "System.string.unescapejava.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String whose Java literals are unescaped. Literals unescaped include escape sequences for quotes (\\\\\") and control characters, such as tab (\\\\t), and carriage return (\\\\n).",
      "variables": {}
    },
    "unescapeunicode()": {
      "id": "System.string.unescapeunicode",
      "type": "method",
      "name": "unescapeUnicode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unescapeUnicode",
        "textToLower": "unescapeunicode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unescapeUnicode_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String unescapeUnicode()",
      "simplifiedSignature": "unescapeUnicode()",
      "datatype": {
        "id": "System.string.unescapeunicode.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String whose escaped Unicode characters are unescaped.",
      "variables": {}
    },
    "unescapexml()": {
      "id": "System.string.unescapexml",
      "type": "method",
      "name": "unescapeXml",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "unescapeXml",
        "textToLower": "unescapexml",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_unescapeXml_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String unescapeXml()",
      "simplifiedSignature": "unescapeXml()",
      "datatype": {
        "id": "System.string.unescapexml.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Unescapes the characters in a String using XML entities.",
      "variables": {}
    },
    "valueof(date)": {
      "id": "System.string.valueof",
      "type": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOf(Date dateToConvert)",
      "simplifiedSignature": "valueOf(Date)",
      "datatype": {
        "id": "System.string.valueof.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String that represents the specified Date in the standard “yyyy-MM-dd” format.",
      "variables": {
        "dateToConvert": {
          "id": "System.string.valueof.datetoconvert",
          "type": "var",
          "name": "dateToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "dateToConvert",
            "textToLower": "datetoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_dateToConvert_-1:0"
          },
          "signature": "Date dateToConvert",
          "datatype": {
            "id": "System.string.valueof.date",
            "type": "datatype",
            "name": "Date"
          }
        }
      }
    },
    "valueof(datetime)": {
      "id": "System.string.valueof",
      "type": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOf(Datetime datetimeToConvert)",
      "simplifiedSignature": "valueOf(Datetime)",
      "datatype": {
        "id": "System.string.valueof.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String that represents the specified Datetime in the standard “yyyy-MM-dd HH:mm:ss” format for the local time zone.",
      "variables": {
        "datetimeToConvert": {
          "id": "System.string.valueof.datetimetoconvert",
          "type": "var",
          "name": "datetimeToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "datetimeToConvert",
            "textToLower": "datetimetoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_datetimeToConvert_-1:0"
          },
          "signature": "Datetime datetimeToConvert",
          "datatype": {
            "id": "System.string.valueof.datetime",
            "type": "datatype",
            "name": "Datetime"
          }
        }
      }
    },
    "valueof(decimal)": {
      "id": "System.string.valueof",
      "type": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOf(Decimal decimalToConvert)",
      "simplifiedSignature": "valueOf(Decimal)",
      "datatype": {
        "id": "System.string.valueof.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String that represents the specified Decimal.",
      "variables": {
        "decimalToConvert": {
          "id": "System.string.valueof.decimaltoconvert",
          "type": "var",
          "name": "decimalToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "decimalToConvert",
            "textToLower": "decimaltoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_decimalToConvert_-1:0"
          },
          "signature": "Decimal decimalToConvert",
          "datatype": {
            "id": "System.string.valueof.decimal",
            "type": "datatype",
            "name": "Decimal"
          }
        }
      }
    },
    "valueof(double)": {
      "id": "System.string.valueof",
      "type": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOf(Double doubleToConvert)",
      "simplifiedSignature": "valueOf(Double)",
      "datatype": {
        "id": "System.string.valueof.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String that represents the specified Double.",
      "variables": {
        "doubleToConvert": {
          "id": "System.string.valueof.doubletoconvert",
          "type": "var",
          "name": "doubleToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "doubleToConvert",
            "textToLower": "doubletoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_doubleToConvert_-1:0"
          },
          "signature": "Double doubleToConvert",
          "datatype": {
            "id": "System.string.valueof.double",
            "type": "datatype",
            "name": "Double"
          }
        }
      }
    },
    "valueof(integer)": {
      "id": "System.string.valueof",
      "type": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOf(Integer integerToConvert)",
      "simplifiedSignature": "valueOf(Integer)",
      "datatype": {
        "id": "System.string.valueof.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String that represents the specified Integer.",
      "variables": {
        "integerToConvert": {
          "id": "System.string.valueof.integertoconvert",
          "type": "var",
          "name": "integerToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "integerToConvert",
            "textToLower": "integertoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_integerToConvert_-1:0"
          },
          "signature": "Integer integerToConvert",
          "datatype": {
            "id": "System.string.valueof.integer",
            "type": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "valueof(long)": {
      "id": "System.string.valueof",
      "type": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOf(Long longToConvert)",
      "simplifiedSignature": "valueOf(Long)",
      "datatype": {
        "id": "System.string.valueof.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String that represents the specified Long.",
      "variables": {
        "longToConvert": {
          "id": "System.string.valueof.longtoconvert",
          "type": "var",
          "name": "longToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "longToConvert",
            "textToLower": "longtoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_longToConvert_-1:0"
          },
          "signature": "Long longToConvert",
          "datatype": {
            "id": "System.string.valueof.long",
            "type": "datatype",
            "name": "Long"
          }
        }
      }
    },
    "valueof(object)": {
      "id": "System.string.valueof",
      "type": "method",
      "name": "valueOf",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOf",
        "textToLower": "valueof",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOf_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOf(Object toConvert)",
      "simplifiedSignature": "valueOf(Object)",
      "datatype": {
        "id": "System.string.valueof.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a string representation of the specified object argument.",
      "variables": {
        "toConvert": {
          "id": "System.string.valueof.toconvert",
          "type": "var",
          "name": "toConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "toConvert",
            "textToLower": "toconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_toConvert_-1:0"
          },
          "signature": "Object toConvert",
          "datatype": {
            "id": "System.string.valueof.object",
            "type": "datatype",
            "name": "Object"
          }
        }
      }
    },
    "valueofgmt(datetime)": {
      "id": "System.string.valueofgmt",
      "type": "method",
      "name": "valueOfGmt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "valueOfGmt",
        "textToLower": "valueofgmt",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_valueOfGmt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String valueOfGmt(Datetime datetimeToConvert)",
      "simplifiedSignature": "valueOfGmt(Datetime)",
      "datatype": {
        "id": "System.string.valueofgmt.String",
        "type": "datatype",
        "name": "String"
      },
      "description": "Returns a String that represents the specified Datetime in the standard “yyyy-MM-dd HH:mm:ss” format for the GMT time zone.",
      "variables": {
        "datetimeToConvert": {
          "id": "System.string.valueofgmt.datetimetoconvert",
          "type": "var",
          "name": "datetimeToConvert",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "datetimeToConvert",
            "textToLower": "datetimetoconvert",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_datetimeToConvert_-1:0"
          },
          "signature": "Datetime datetimeToConvert",
          "datatype": {
            "id": "System.string.valueofgmt.datetime",
            "type": "datatype",
            "name": "Datetime"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}