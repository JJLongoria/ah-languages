{
  "id": "System.test",
  "nodeType": "class",
  "name": "Test",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "Test",
    "textToLower": "test",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_Test_-1:0"
  },
  "order": 0,
  "memberOrder": 0,
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods related to Apex tests.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_methods_system_test.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "clearapexpagemessages()": {
      "id": "System.test.method.clearapexpagemessages()",
      "nodeType": "method",
      "name": "clearApexPageMessages",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clearApexPageMessages",
        "textToLower": "clearapexpagemessages",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clearApexPageMessages_-1:0"
      },
      "parentId": "System.test",
      "order": 1,
      "memberOrder": 1,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static void clearApexPageMessages()",
      "overrideSignature": "public static override void clearApexPageMessages()",
      "simplifiedSignature": "clearApexPageMessages()",
      "datatype": {
        "id": "System.test.clearapexpagemessages.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:14"
        },
        "parentId": "System.test.clearapexpagemessages",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Clear the messages on a Visualforce page while executing Apex test methods.",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "createstub(system.type,system.stubprovider)": {
      "id": "System.test.method.createstub(system.type,system.stubprovider)",
      "nodeType": "method",
      "name": "createStub",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "createStub",
        "textToLower": "createstub",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_createStub_-1:0"
      },
      "parentId": "System.test",
      "order": 2,
      "memberOrder": 2,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Object createStub(System.Type parentType, System.StubProvider stubProvider)",
      "overrideSignature": "public static override Object createStub(System.Type parentType, System.StubProvider stubProvider)",
      "simplifiedSignature": "createStub(System.Type,System.StubProvider)",
      "datatype": {
        "id": "System.test.createstub.datatype.Object",
        "nodeType": "datatype",
        "name": "Object",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Object",
          "textToLower": "object",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Object_0:14"
        },
        "parentId": "System.test.createstub",
        "order": 0,
        "memberOrder": 0,
        "type": "Object"
      },
      "description": "Creates a stubbed version of an Apex class that you can use for testing. This method is part of the Apex stub API. You can use it with the System.StubProvider interface to create a mocking framework.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "parenttype": {
          "id": "System.test.method.createstub(system.type,system.stubprovider).varParam.parenttype",
          "nodeType": "variable",
          "name": "parentType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "parentType",
            "textToLower": "parenttype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 44
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_parentType_0:44"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "parentType",
            "textToLower": "parenttype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 44
              },
              "end": {
                "line": 0,
                "character": 54
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_parentType_0:44"
          },
          "parentId": "System.test.method.createstub(system.type,system.stubprovider)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.createstub.datatype.System.Type",
            "nodeType": "datatype",
            "name": "System.Type",
            "startToken": {
              "type": "datatype.support.class",
              "text": "System",
              "textToLower": "system",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 32
                },
                "end": {
                  "line": 0,
                  "character": 38
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_System_0:32"
            },
            "parentId": "System.test.createstub",
            "order": 0,
            "memberOrder": 0,
            "type": "System.Type"
          },
          "scope": null
        },
        "stubprovider": {
          "id": "System.test.method.createstub(system.type,system.stubprovider).varParam.stubprovider",
          "nodeType": "variable",
          "name": "stubProvider",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "stubProvider",
            "textToLower": "stubprovider",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 76
              },
              "end": {
                "line": 0,
                "character": 88
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_stubProvider_0:76"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "stubProvider",
            "textToLower": "stubprovider",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 76
              },
              "end": {
                "line": 0,
                "character": 88
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_stubProvider_0:76"
          },
          "parentId": "System.test.method.createstub(system.type,system.stubprovider)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.createstub.datatype.System.StubProvider",
            "nodeType": "datatype",
            "name": "System.StubProvider",
            "startToken": {
              "type": "datatype.support.class",
              "text": "System",
              "textToLower": "system",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 56
                },
                "end": {
                  "line": 0,
                  "character": 62
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_System_0:56"
            },
            "parentId": "System.test.createstub",
            "order": 0,
            "memberOrder": 0,
            "type": "System.StubProvider"
          },
          "description": "The type of the Apex class to be stubbed. System.StubProvider An implementation of the StubProvider interface.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "enablechangedatacapture()": {
      "id": "System.test.method.enablechangedatacapture()",
      "nodeType": "method",
      "name": "enableChangeDataCapture",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "enableChangeDataCapture",
        "textToLower": "enablechangedatacapture",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_enableChangeDataCapture_-1:0"
      },
      "parentId": "System.test",
      "order": 3,
      "memberOrder": 3,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static void enableChangeDataCapture()",
      "overrideSignature": "public static override void enableChangeDataCapture()",
      "simplifiedSignature": "enableChangeDataCapture()",
      "datatype": {
        "id": "System.test.enablechangedatacapture.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:14"
        },
        "parentId": "System.test.enablechangedatacapture",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Use this method in an Apex test so that change event notifications are generated for all supported Change Data Capture entities. Call this method at the beginning of your test before performing DML operations and calling Test.getEventBus().deliver();.",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "enqueuebatchjobs(integer)": {
      "id": "System.test.method.enqueuebatchjobs(integer)",
      "nodeType": "method",
      "name": "enqueueBatchJobs",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "enqueueBatchJobs",
        "textToLower": "enqueuebatchjobs",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_enqueueBatchJobs_-1:0"
      },
      "parentId": "System.test",
      "order": 4,
      "memberOrder": 4,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Id> enqueueBatchJobs(Integer numberOfJobs)",
      "overrideSignature": "public static override List<Id> enqueueBatchJobs(Integer numberOfJobs)",
      "simplifiedSignature": "enqueueBatchJobs(Integer)",
      "datatype": {
        "id": "System.test.enqueuebatchjobs.datatype.List<Id>",
        "nodeType": "datatype",
        "name": "List<Id>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.test.enqueuebatchjobs",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.test.enqueuebatchjobs.datatype.List<Id>.value.Id",
          "nodeType": "datatype",
          "name": "Id",
          "startToken": {
            "type": "datatype.primitive",
            "text": "Id",
            "textToLower": "id",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 21
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Id_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Id"
        }
      },
      "description": "Adds the specified number of jobs with no-operation contents to the test-context queue. It first fills the test batch queue, up to the maximum 5 jobs, and then places jobs in the test flex queue. It throws a limit exception when the number of jobs in the test flex queue exceeds the allowed limit of 100 jobs.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "numberofjobs": {
          "id": "System.test.method.enqueuebatchjobs(integer).varParam.numberofjobs",
          "nodeType": "variable",
          "name": "numberOfJobs",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "numberOfJobs",
            "textToLower": "numberofjobs",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 48
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_numberOfJobs_0:48"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "numberOfJobs",
            "textToLower": "numberofjobs",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 48
              },
              "end": {
                "line": 0,
                "character": 60
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_numberOfJobs_0:48"
          },
          "parentId": "System.test.method.enqueuebatchjobs(integer)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.enqueuebatchjobs.datatype.Integer",
            "nodeType": "datatype",
            "name": "Integer",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Integer",
              "textToLower": "integer",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 40
                },
                "end": {
                  "line": 0,
                  "character": 47
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Integer_0:40"
            },
            "parentId": "System.test.enqueuebatchjobs",
            "order": 0,
            "memberOrder": 0,
            "type": "Integer"
          },
          "description": "Number of test jobs to enqueue.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "geteventbus()": {
      "id": "System.test.method.geteventbus()",
      "nodeType": "method",
      "name": "getEventBus",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getEventBus",
        "textToLower": "geteventbus",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getEventBus_-1:0"
      },
      "parentId": "System.test",
      "order": 5,
      "memberOrder": 5,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static EventBus.TestBroker getEventBus()",
      "overrideSignature": "public static override EventBus.TestBroker getEventBus()",
      "simplifiedSignature": "getEventBus()",
      "datatype": {
        "id": "System.test.geteventbus.datatype.EventBus.TestBroker",
        "nodeType": "datatype",
        "name": "EventBus.TestBroker",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "EventBus",
          "textToLower": "eventbus",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 22
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_EventBus_0:14"
        },
        "parentId": "System.test.geteventbus",
        "order": 0,
        "memberOrder": 0,
        "type": "EventBus.TestBroker"
      },
      "description": "Returns an instance of the test event bus broker, which lets you operate on platform event or change event messages in an Apex test. For example, you can call Test.getEventBus().deliver() to deliver event messages.",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getflexqueueorder()": {
      "id": "System.test.method.getflexqueueorder()",
      "nodeType": "method",
      "name": "getFlexQueueOrder",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getFlexQueueOrder",
        "textToLower": "getflexqueueorder",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getFlexQueueOrder_-1:0"
      },
      "parentId": "System.test",
      "order": 6,
      "memberOrder": 6,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<Id> getFlexQueueOrder()",
      "overrideSignature": "public static override List<Id> getFlexQueueOrder()",
      "simplifiedSignature": "getFlexQueueOrder()",
      "datatype": {
        "id": "System.test.getflexqueueorder.datatype.List<Id>",
        "nodeType": "datatype",
        "name": "List<Id>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.test.getflexqueueorder",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.test.getflexqueueorder.datatype.List<Id>.value.Id",
          "nodeType": "datatype",
          "name": "Id",
          "startToken": {
            "type": "datatype.primitive",
            "text": "Id",
            "textToLower": "id",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 21
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_Id_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "Id"
        }
      },
      "description": "Returns an ordered list of job IDs for jobs in the test-context flex queue. The job at index 0 is the next job slated to run. This method returns only test-context results, even if it’s annotated with @IsTest(SeeAllData=true).",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "getstandardpricebookid()": {
      "id": "System.test.method.getstandardpricebookid()",
      "nodeType": "method",
      "name": "getStandardPricebookId",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getStandardPricebookId",
        "textToLower": "getstandardpricebookid",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getStandardPricebookId_-1:0"
      },
      "parentId": "System.test",
      "order": 7,
      "memberOrder": 7,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Id getStandardPricebookId()",
      "overrideSignature": "public static override Id getStandardPricebookId()",
      "simplifiedSignature": "getStandardPricebookId()",
      "datatype": {
        "id": "System.test.getstandardpricebookid.datatype.Id",
        "nodeType": "datatype",
        "name": "Id",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Id",
          "textToLower": "id",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 16
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Id_0:14"
        },
        "parentId": "System.test.getstandardpricebookid",
        "order": 0,
        "memberOrder": 0,
        "type": "Id"
      },
      "description": "Returns the ID of the standard price book in the organization.",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "invokecontinuationmethod(object,continuation)": {
      "id": "System.test.method.invokecontinuationmethod(object,continuation)",
      "nodeType": "method",
      "name": "invokeContinuationMethod",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "invokeContinuationMethod",
        "textToLower": "invokecontinuationmethod",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_invokeContinuationMethod_-1:0"
      },
      "parentId": "System.test",
      "order": 8,
      "memberOrder": 8,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Object invokeContinuationMethod(Object controller, Continuation request)",
      "overrideSignature": "public static override Object invokeContinuationMethod(Object controller, Continuation request)",
      "simplifiedSignature": "invokeContinuationMethod(Object,Continuation)",
      "datatype": {
        "id": "System.test.invokecontinuationmethod.datatype.Object",
        "nodeType": "datatype",
        "name": "Object",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Object",
          "textToLower": "object",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 20
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Object_0:14"
        },
        "parentId": "System.test.invokecontinuationmethod",
        "order": 0,
        "memberOrder": 0,
        "type": "Object"
      },
      "description": "Invokes the callback method for the specified controller and continuation in a test method.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "controller": {
          "id": "System.test.method.invokecontinuationmethod(object,continuation).varParam.controller",
          "nodeType": "variable",
          "name": "controller",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "controller",
            "textToLower": "controller",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_controller_0:53"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "controller",
            "textToLower": "controller",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 53
              },
              "end": {
                "line": 0,
                "character": 63
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_controller_0:53"
          },
          "parentId": "System.test.method.invokecontinuationmethod(object,continuation)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.invokecontinuationmethod.datatype.Object",
            "nodeType": "datatype",
            "name": "Object",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Object",
              "textToLower": "object",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 52
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Object_0:46"
            },
            "parentId": "System.test.invokecontinuationmethod",
            "order": 0,
            "memberOrder": 0,
            "type": "Object"
          },
          "scope": null
        },
        "request": {
          "id": "System.test.method.invokecontinuationmethod(object,continuation).varParam.request",
          "nodeType": "variable",
          "name": "request",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "request",
            "textToLower": "request",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 78
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_request_0:78"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "request",
            "textToLower": "request",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 78
              },
              "end": {
                "line": 0,
                "character": 85
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_request_0:78"
          },
          "parentId": "System.test.method.invokecontinuationmethod(object,continuation)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.invokecontinuationmethod.datatype.Continuation",
            "nodeType": "datatype",
            "name": "Continuation",
            "startToken": {
              "type": "datatype.support.class",
              "text": "Continuation",
              "textToLower": "continuation",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 65
                },
                "end": {
                  "line": 0,
                  "character": 77
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Continuation_0:65"
            },
            "parentId": "System.test.invokecontinuationmethod",
            "order": 0,
            "memberOrder": 0,
            "type": "Continuation"
          },
          "description": "An instance of the controller class that invokes the continuation request. The continuation that is returned by an action method in the controller class.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "isrunningtest()": {
      "id": "System.test.method.isrunningtest()",
      "nodeType": "method",
      "name": "isRunningTest",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isRunningTest",
        "textToLower": "isrunningtest",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isRunningTest_-1:0"
      },
      "parentId": "System.test",
      "order": 9,
      "memberOrder": 9,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Boolean isRunningTest()",
      "overrideSignature": "public static override Boolean isRunningTest()",
      "simplifiedSignature": "isRunningTest()",
      "datatype": {
        "id": "System.test.isrunningtest.datatype.Boolean",
        "nodeType": "datatype",
        "name": "Boolean",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Boolean",
          "textToLower": "boolean",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 21
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Boolean_0:14"
        },
        "parentId": "System.test.isrunningtest",
        "order": 0,
        "memberOrder": 0,
        "type": "Boolean"
      },
      "description": "Returns true if the currently executing code was called by code contained in a test method, false otherwise. Use this method if you need to run different code depending on whether it was being called  from a test.",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "loaddata(schema.sobjecttype,string)": {
      "id": "System.test.method.loaddata(schema.sobjecttype,string)",
      "nodeType": "method",
      "name": "loadData",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "loadData",
        "textToLower": "loaddata",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_loadData_-1:0"
      },
      "parentId": "System.test",
      "order": 10,
      "memberOrder": 10,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static List<sObject> loadData(Schema.SObjectType sObjectToken, String resourceName)",
      "overrideSignature": "public static override List<sObject> loadData(Schema.SObjectType sObjectToken, String resourceName)",
      "simplifiedSignature": "loadData(Schema.SObjectType,String)",
      "datatype": {
        "id": "System.test.loaddata.datatype.List<sObject>",
        "nodeType": "datatype",
        "name": "List<sObject>",
        "startToken": {
          "type": "datatype.collection",
          "text": "List",
          "textToLower": "list",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_List_0:14"
        },
        "parentId": "System.test.loaddata",
        "order": 0,
        "memberOrder": 0,
        "type": "List",
        "value": {
          "id": "System.test.loaddata.datatype.List<sObject>.value.sObject",
          "nodeType": "datatype",
          "name": "sObject",
          "startToken": {
            "type": "datatype.support.class",
            "text": "sObject",
            "textToLower": "sobject",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 19
              },
              "end": {
                "line": 0,
                "character": 26
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sObject_0:19"
          },
          "order": 0,
          "memberOrder": 0,
          "type": "sObject"
        }
      },
      "description": "Inserts test records from the specified static resource .csv file and for the specified sObject type, and returns a list of the inserted sObjects.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "sobjecttoken": {
          "id": "System.test.method.loaddata(schema.sobjecttype,string).varParam.sobjecttoken",
          "nodeType": "variable",
          "name": "sObjectToken",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "sObjectToken",
            "textToLower": "sobjecttoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sObjectToken_0:56"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "sObjectToken",
            "textToLower": "sobjecttoken",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 68
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_sObjectToken_0:56"
          },
          "parentId": "System.test.method.loaddata(schema.sobjecttype,string)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.loaddata.datatype.Schema.SObjectType",
            "nodeType": "datatype",
            "name": "Schema.SObjectType",
            "startToken": {
              "type": "datatype.support.namespace",
              "text": "Schema",
              "textToLower": "schema",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 37
                },
                "end": {
                  "line": 0,
                  "character": 43
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Schema_0:37"
            },
            "parentId": "System.test.loaddata",
            "order": 0,
            "memberOrder": 0,
            "type": "Schema.SObjectType"
          },
          "scope": null
        },
        "resourcename": {
          "id": "System.test.method.loaddata(schema.sobjecttype,string).varParam.resourcename",
          "nodeType": "variable",
          "name": "resourceName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "resourceName",
            "textToLower": "resourcename",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 89
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_resourceName_0:77"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "resourceName",
            "textToLower": "resourcename",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 89
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_resourceName_0:77"
          },
          "parentId": "System.test.method.loaddata(schema.sobjecttype,string)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.loaddata.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 70
                },
                "end": {
                  "line": 0,
                  "character": 76
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:70"
            },
            "parentId": "System.test.loaddata",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "description": "The sObject type for which to insert test records. The static resource that corresponds to the .csv file containing the test records to load. The name is case insensitive.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "newsendemailquickactiondefaults(id,id)": {
      "id": "System.test.method.newsendemailquickactiondefaults(id,id)",
      "nodeType": "method",
      "name": "newSendEmailQuickActionDefaults",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "newSendEmailQuickActionDefaults",
        "textToLower": "newsendemailquickactiondefaults",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_newSendEmailQuickActionDefaults_-1:0"
      },
      "parentId": "System.test",
      "order": 11,
      "memberOrder": 11,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static QuickAction.SendEmailQuickActionDefaults newSendEmailQuickActionDefaults(ID contextId, ID replyToId)",
      "overrideSignature": "public static override QuickAction.SendEmailQuickActionDefaults newSendEmailQuickActionDefaults(ID contextId, ID replyToId)",
      "simplifiedSignature": "newSendEmailQuickActionDefaults(ID,ID)",
      "datatype": {
        "id": "System.test.newsendemailquickactiondefaults.datatype.QuickAction.SendEmailQuickActionDefaults",
        "nodeType": "datatype",
        "name": "QuickAction.SendEmailQuickActionDefaults",
        "startToken": {
          "type": "datatype.support.namespace",
          "text": "QuickAction",
          "textToLower": "quickaction",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 25
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_QuickAction_0:14"
        },
        "parentId": "System.test.newsendemailquickactiondefaults",
        "order": 0,
        "memberOrder": 0,
        "type": "QuickAction.SendEmailQuickActionDefaults"
      },
      "description": "Creates a new QuickAction.SendEmailQuickActionDefaults instance for testing a class implementing the QuickAction.QuickActionDefaultsHandler interface.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "contextid": {
          "id": "System.test.method.newsendemailquickactiondefaults(id,id).varParam.contextid",
          "nodeType": "variable",
          "name": "contextId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextId",
            "textToLower": "contextid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextId_0:90"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "contextId",
            "textToLower": "contextid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 90
              },
              "end": {
                "line": 0,
                "character": 99
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_contextId_0:90"
          },
          "parentId": "System.test.method.newsendemailquickactiondefaults(id,id)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.newsendemailquickactiondefaults.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 87
                },
                "end": {
                  "line": 0,
                  "character": 89
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:87"
            },
            "parentId": "System.test.newsendemailquickactiondefaults",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "scope": null
        },
        "replytoid": {
          "id": "System.test.method.newsendemailquickactiondefaults(id,id).varParam.replytoid",
          "nodeType": "variable",
          "name": "replyToId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "replyToId",
            "textToLower": "replytoid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 113
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_replyToId_0:104"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "replyToId",
            "textToLower": "replytoid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 104
              },
              "end": {
                "line": 0,
                "character": 113
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_replyToId_0:104"
          },
          "parentId": "System.test.method.newsendemailquickactiondefaults(id,id)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.newsendemailquickactiondefaults.datatype.ID",
            "nodeType": "datatype",
            "name": "ID",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 101
                },
                "end": {
                  "line": 0,
                  "character": 103
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:101"
            },
            "parentId": "System.test.newsendemailquickactiondefaults",
            "order": 0,
            "memberOrder": 0,
            "type": "ID"
          },
          "description": "Parent record of the email message. Previous email message ID if this email message is a reply.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setcontinuationresponse(string,system.httpresponse)": {
      "id": "System.test.method.setcontinuationresponse(string,system.httpresponse)",
      "nodeType": "method",
      "name": "setContinuationResponse",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setContinuationResponse",
        "textToLower": "setcontinuationresponse",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setContinuationResponse_-1:0"
      },
      "parentId": "System.test",
      "order": 12,
      "memberOrder": 12,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static void setContinuationResponse(String requestLabel, System.HttpResponse mockResponse)",
      "overrideSignature": "public static override void setContinuationResponse(String requestLabel, System.HttpResponse mockResponse)",
      "simplifiedSignature": "setContinuationResponse(String,System.HttpResponse)",
      "datatype": {
        "id": "System.test.setcontinuationresponse.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:14"
        },
        "parentId": "System.test.setcontinuationresponse",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets a mock response for a continuation HTTP request in a test method.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "requestlabel": {
          "id": "System.test.method.setcontinuationresponse(string,system.httpresponse).varParam.requestlabel",
          "nodeType": "variable",
          "name": "requestLabel",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "requestLabel",
            "textToLower": "requestlabel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_requestLabel_0:50"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "requestLabel",
            "textToLower": "requestlabel",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_requestLabel_0:50"
          },
          "parentId": "System.test.method.setcontinuationresponse(string,system.httpresponse)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.setcontinuationresponse.datatype.String",
            "nodeType": "datatype",
            "name": "String",
            "startToken": {
              "type": "datatype.primitive",
              "text": "String",
              "textToLower": "string",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 43
                },
                "end": {
                  "line": 0,
                  "character": 49
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_String_0:43"
            },
            "parentId": "System.test.setcontinuationresponse",
            "order": 0,
            "memberOrder": 0,
            "type": "String"
          },
          "scope": null
        },
        "mockresponse": {
          "id": "System.test.method.setcontinuationresponse(string,system.httpresponse).varParam.mockresponse",
          "nodeType": "variable",
          "name": "mockResponse",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "mockResponse",
            "textToLower": "mockresponse",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 96
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_mockResponse_0:84"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "mockResponse",
            "textToLower": "mockresponse",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 84
              },
              "end": {
                "line": 0,
                "character": 96
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_mockResponse_0:84"
          },
          "parentId": "System.test.method.setcontinuationresponse(string,system.httpresponse)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.setcontinuationresponse.datatype.System.HttpResponse",
            "nodeType": "datatype",
            "name": "System.HttpResponse",
            "startToken": {
              "type": "datatype.support.class",
              "text": "System",
              "textToLower": "system",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 64
                },
                "end": {
                  "line": 0,
                  "character": 70
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_System_0:64"
            },
            "parentId": "System.test.setcontinuationresponse",
            "order": 0,
            "memberOrder": 0,
            "type": "System.HttpResponse"
          },
          "description": "The unique label that corresponds to the continuation HTTP request. This label is returned by Continuation.addHttpRequest. The fake response to be returned by Test.invokeContinuationMethod.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setcreateddate(id,datetime)": {
      "id": "System.test.method.setcreateddate(id,datetime)",
      "nodeType": "method",
      "name": "setCreatedDate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setCreatedDate",
        "textToLower": "setcreateddate",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setCreatedDate_-1:0"
      },
      "parentId": "System.test",
      "order": 13,
      "memberOrder": 13,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static void setCreatedDate(Id recordId, Datetime createdDatetime)",
      "overrideSignature": "public static override void setCreatedDate(Id recordId, Datetime createdDatetime)",
      "simplifiedSignature": "setCreatedDate(Id,Datetime)",
      "datatype": {
        "id": "System.test.setcreateddate.datatype.void",
        "nodeType": "datatype",
        "name": "void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_void_0:14"
        },
        "parentId": "System.test.setcreateddate",
        "order": 0,
        "memberOrder": 0,
        "type": "void"
      },
      "description": "Sets CreatedDate for a test-context sObject.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "recordid": {
          "id": "System.test.method.setcreateddate(id,datetime).varParam.recordid",
          "nodeType": "variable",
          "name": "recordId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:37"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "recordId",
            "textToLower": "recordid",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 37
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_recordId_0:37"
          },
          "parentId": "System.test.method.setcreateddate(id,datetime)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.setcreateddate.datatype.Id",
            "nodeType": "datatype",
            "name": "Id",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Id",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 34
                },
                "end": {
                  "line": 0,
                  "character": 36
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Id_0:34"
            },
            "parentId": "System.test.setcreateddate",
            "order": 0,
            "memberOrder": 0,
            "type": "Id"
          },
          "scope": null
        },
        "createddatetime": {
          "id": "System.test.method.setcreateddate(id,datetime).varParam.createddatetime",
          "nodeType": "variable",
          "name": "createdDatetime",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "createdDatetime",
            "textToLower": "createddatetime",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 71
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_createdDatetime_0:56"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "createdDatetime",
            "textToLower": "createddatetime",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 56
              },
              "end": {
                "line": 0,
                "character": 71
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_createdDatetime_0:56"
          },
          "parentId": "System.test.method.setcreateddate(id,datetime)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.setcreateddate.datatype.Datetime",
            "nodeType": "datatype",
            "name": "Datetime",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Datetime",
              "textToLower": "datetime",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 47
                },
                "end": {
                  "line": 0,
                  "character": 55
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Datetime_0:47"
            },
            "parentId": "System.test.setcreateddate",
            "order": 0,
            "memberOrder": 0,
            "type": "Datetime"
          },
          "description": "The ID of an sObject. The value to assign to the sObject’s CreatedDate field.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setcurrentpage(pagereference)": {
      "id": "System.test.method.setcurrentpage(pagereference)",
      "nodeType": "method",
      "name": "setCurrentPage",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setCurrentPage",
        "textToLower": "setcurrentpage",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setCurrentPage_-1:0"
      },
      "parentId": "System.test",
      "order": 14,
      "memberOrder": 14,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setCurrentPage(PageReference page)",
      "overrideSignature": "public static override Void setCurrentPage(PageReference page)",
      "simplifiedSignature": "setCurrentPage(PageReference)",
      "datatype": {
        "id": "System.test.setcurrentpage.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.setcurrentpage",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "A Visualforce test method that sets the current PageReference for the controller.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "page": {
          "id": "System.test.method.setcurrentpage(pagereference).varParam.page",
          "nodeType": "variable",
          "name": "page",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "page",
            "textToLower": "page",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 48
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_page_0:48"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "page",
            "textToLower": "page",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 48
              },
              "end": {
                "line": 0,
                "character": 52
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_page_0:48"
          },
          "parentId": "System.test.method.setcurrentpage(pagereference)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.setcurrentpage.datatype.PageReference",
            "nodeType": "datatype",
            "name": "PageReference",
            "startToken": {
              "type": "datatype.support.class",
              "text": "PageReference",
              "textToLower": "pagereference",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 34
                },
                "end": {
                  "line": 0,
                  "character": 47
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_PageReference_0:34"
            },
            "parentId": "System.test.setcurrentpage",
            "order": 0,
            "memberOrder": 0,
            "type": "PageReference"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setcurrentpagereference(pagereference)": {
      "id": "System.test.method.setcurrentpagereference(pagereference)",
      "nodeType": "method",
      "name": "setCurrentPageReference",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setCurrentPageReference",
        "textToLower": "setcurrentpagereference",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setCurrentPageReference_-1:0"
      },
      "parentId": "System.test",
      "order": 15,
      "memberOrder": 15,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setCurrentPageReference(PageReference page)",
      "overrideSignature": "public static override Void setCurrentPageReference(PageReference page)",
      "simplifiedSignature": "setCurrentPageReference(PageReference)",
      "datatype": {
        "id": "System.test.setcurrentpagereference.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.setcurrentpagereference",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "A Visualforce test method that sets the current PageReference for the controller.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "page": {
          "id": "System.test.method.setcurrentpagereference(pagereference).varParam.page",
          "nodeType": "variable",
          "name": "page",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "page",
            "textToLower": "page",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 57
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_page_0:57"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "page",
            "textToLower": "page",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 57
              },
              "end": {
                "line": 0,
                "character": 61
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_page_0:57"
          },
          "parentId": "System.test.method.setcurrentpagereference(pagereference)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.setcurrentpagereference.datatype.PageReference",
            "nodeType": "datatype",
            "name": "PageReference",
            "startToken": {
              "type": "datatype.support.class",
              "text": "PageReference",
              "textToLower": "pagereference",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 43
                },
                "end": {
                  "line": 0,
                  "character": 56
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_PageReference_0:43"
            },
            "parentId": "System.test.setcurrentpagereference",
            "order": 0,
            "memberOrder": 0,
            "type": "PageReference"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setfixedsearchresults(id[])": {
      "id": "System.test.method.setfixedsearchresults(id[])",
      "nodeType": "method",
      "name": "setFixedSearchResults",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setFixedSearchResults",
        "textToLower": "setfixedsearchresults",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setFixedSearchResults_-1:0"
      },
      "parentId": "System.test",
      "order": 16,
      "memberOrder": 16,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setFixedSearchResults(ID[] fixedSearchResults)",
      "overrideSignature": "public static override Void setFixedSearchResults(ID[] fixedSearchResults)",
      "simplifiedSignature": "setFixedSearchResults(ID[])",
      "datatype": {
        "id": "System.test.setfixedsearchresults.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.setfixedsearchresults",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Defines a list of fixed search results to be returned by all subsequent SOSL statements in a test method.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "fixedsearchresults": {
          "id": "System.test.method.setfixedsearchresults(id[]).varParam.fixedsearchresults",
          "nodeType": "variable",
          "name": "fixedSearchResults",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "fixedSearchResults",
            "textToLower": "fixedsearchresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 64
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fixedSearchResults_0:46"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "fixedSearchResults",
            "textToLower": "fixedsearchresults",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 64
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_fixedSearchResults_0:46"
          },
          "parentId": "System.test.method.setfixedsearchresults(id[])",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.setfixedsearchresults.datatype.ID[]",
            "nodeType": "datatype",
            "name": "ID[]",
            "startToken": {
              "type": "datatype.primitive",
              "text": "ID",
              "textToLower": "id",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 41
                },
                "end": {
                  "line": 0,
                  "character": 43
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_ID_0:41"
            },
            "parentId": "System.test.setfixedsearchresults",
            "order": 0,
            "memberOrder": 0,
            "type": "ID[]"
          },
          "description": "The list of record IDs specified by opt_set_search_results replaces the results that would normally be returned by the SOSL queries if they were not subject to any WHERE or LIMIT clauses. If these clauses exist in the SOSL queries, they are applied to the list of fixed search results.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setmock(type,object)": {
      "id": "System.test.method.setmock(type,object)",
      "nodeType": "method",
      "name": "setMock",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setMock",
        "textToLower": "setmock",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setMock_-1:0"
      },
      "parentId": "System.test",
      "order": 17,
      "memberOrder": 17,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setMock(Type interfaceType, Object instance)",
      "overrideSignature": "public static override Void setMock(Type interfaceType, Object instance)",
      "simplifiedSignature": "setMock(Type,Object)",
      "datatype": {
        "id": "System.test.setmock.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.setmock",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the response mock mode and instructs the Apex runtime to send a mock response whenever a callout is made through the HTTP classes or the auto-generated code from WSDLs.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "interfacetype": {
          "id": "System.test.method.setmock(type,object).varParam.interfacetype",
          "nodeType": "variable",
          "name": "interfaceType",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "interfaceType",
            "textToLower": "interfacetype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_interfaceType_0:32"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "interfaceType",
            "textToLower": "interfacetype",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 32
              },
              "end": {
                "line": 0,
                "character": 45
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_interfaceType_0:32"
          },
          "parentId": "System.test.method.setmock(type,object)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.setmock.datatype.Type",
            "nodeType": "datatype",
            "name": "Type",
            "startToken": {
              "type": "datatype.support.class",
              "text": "Type",
              "textToLower": "type",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 27
                },
                "end": {
                  "line": 0,
                  "character": 31
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Type_0:27"
            },
            "parentId": "System.test.setmock",
            "order": 0,
            "memberOrder": 0,
            "type": "Type"
          },
          "scope": null
        },
        "instance": {
          "id": "System.test.method.setmock(type,object).varParam.instance",
          "nodeType": "variable",
          "name": "instance",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "instance",
            "textToLower": "instance",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_instance_0:54"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "instance",
            "textToLower": "instance",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 62
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_instance_0:54"
          },
          "parentId": "System.test.method.setmock(type,object)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.setmock.datatype.Object",
            "nodeType": "datatype",
            "name": "Object",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Object",
              "textToLower": "object",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 47
                },
                "end": {
                  "line": 0,
                  "character": 53
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Object_0:47"
            },
            "parentId": "System.test.setmock",
            "order": 0,
            "memberOrder": 0,
            "type": "Object"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "setreadonlyapplicationmode(boolean)": {
      "id": "System.test.method.setreadonlyapplicationmode(boolean)",
      "nodeType": "method",
      "name": "setReadOnlyApplicationMode",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setReadOnlyApplicationMode",
        "textToLower": "setreadonlyapplicationmode",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setReadOnlyApplicationMode_-1:0"
      },
      "parentId": "System.test",
      "order": 18,
      "memberOrder": 18,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void setReadOnlyApplicationMode(Boolean applicationMode)",
      "overrideSignature": "public static override Void setReadOnlyApplicationMode(Boolean applicationMode)",
      "simplifiedSignature": "setReadOnlyApplicationMode(Boolean)",
      "datatype": {
        "id": "System.test.setreadonlyapplicationmode.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.setreadonlyapplicationmode",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Sets the application mode for an organization to read-only in an Apex test to simulate read-only mode during Salesforce upgrades and downtimes. The application mode is reset to the default mode at the end of each Apex test run.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "applicationmode": {
          "id": "System.test.method.setreadonlyapplicationmode(boolean).varParam.applicationmode",
          "nodeType": "variable",
          "name": "applicationMode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "applicationMode",
            "textToLower": "applicationmode",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_applicationMode_0:54"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "applicationMode",
            "textToLower": "applicationmode",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 54
              },
              "end": {
                "line": 0,
                "character": 69
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_applicationMode_0:54"
          },
          "parentId": "System.test.method.setreadonlyapplicationmode(boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.setreadonlyapplicationmode.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 46
                },
                "end": {
                  "line": 0,
                  "character": 53
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:46"
            },
            "parentId": "System.test.setreadonlyapplicationmode",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "starttest()": {
      "id": "System.test.method.starttest()",
      "nodeType": "method",
      "name": "startTest",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "startTest",
        "textToLower": "starttest",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_startTest_-1:0"
      },
      "parentId": "System.test",
      "order": 19,
      "memberOrder": 19,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void startTest()",
      "overrideSignature": "public static override Void startTest()",
      "simplifiedSignature": "startTest()",
      "datatype": {
        "id": "System.test.starttest.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.starttest",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Marks the point in your test code when your test actually begins.  Use this method when you are testing governor limits.",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "stoptest()": {
      "id": "System.test.method.stoptest()",
      "nodeType": "method",
      "name": "stopTest",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "stopTest",
        "textToLower": "stoptest",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_stopTest_-1:0"
      },
      "parentId": "System.test",
      "order": 20,
      "memberOrder": 20,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void stopTest()",
      "overrideSignature": "public static override Void stopTest()",
      "simplifiedSignature": "stopTest()",
      "datatype": {
        "id": "System.test.stoptest.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.stoptest",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Marks the point in your test code when your test ends. Use this method in conjunction with the startTest method.",
      "parentName": "Test",
      "variables": {},
      "params": {},
      "queries": [],
      "exceptions": []
    },
    "testinstall(installhandler,version,boolean)": {
      "id": "System.test.method.testinstall(installhandler,version,boolean)",
      "nodeType": "method",
      "name": "testInstall",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "testInstall",
        "textToLower": "testinstall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_testInstall_-1:0"
      },
      "parentId": "System.test",
      "order": 21,
      "memberOrder": 21,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void testInstall(InstallHandler installImplementation, Version version, Boolean isPush)",
      "overrideSignature": "public static override Void testInstall(InstallHandler installImplementation, Version version, Boolean isPush)",
      "simplifiedSignature": "testInstall(InstallHandler,Version,Boolean)",
      "datatype": {
        "id": "System.test.testinstall.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.testinstall",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Tests the implementation of the InstallHandler interface, which is used for specifying a post install script in packages. Tests run as the test initiator in the development environment.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "installimplementation": {
          "id": "System.test.method.testinstall(installhandler,version,boolean).varParam.installimplementation",
          "nodeType": "variable",
          "name": "installImplementation",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "installImplementation",
            "textToLower": "installimplementation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 67
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_installImplementation_0:46"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "installImplementation",
            "textToLower": "installimplementation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 46
              },
              "end": {
                "line": 0,
                "character": 67
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_installImplementation_0:46"
          },
          "parentId": "System.test.method.testinstall(installhandler,version,boolean)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.testinstall.datatype.InstallHandler",
            "nodeType": "datatype",
            "name": "InstallHandler",
            "startToken": {
              "type": "datatype.support.class",
              "text": "InstallHandler",
              "textToLower": "installhandler",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 31
                },
                "end": {
                  "line": 0,
                  "character": 45
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_InstallHandler_0:31"
            },
            "parentId": "System.test.testinstall",
            "order": 0,
            "memberOrder": 0,
            "type": "InstallHandler"
          },
          "scope": null
        },
        "version": {
          "id": "System.test.method.testinstall(installhandler,version,boolean).varParam.version",
          "nodeType": "variable",
          "name": "version",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "version",
            "textToLower": "version",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 84
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_version_0:77"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "version",
            "textToLower": "version",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 77
              },
              "end": {
                "line": 0,
                "character": 84
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_version_0:77"
          },
          "parentId": "System.test.method.testinstall(installhandler,version,boolean)",
          "order": 2,
          "memberOrder": 2,
          "datatype": {
            "id": "System.test.testinstall.datatype.Version",
            "nodeType": "datatype",
            "name": "Version",
            "startToken": {
              "type": "datatype.support.class",
              "text": "Version",
              "textToLower": "version",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 69
                },
                "end": {
                  "line": 0,
                  "character": 76
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Version_0:69"
            },
            "parentId": "System.test.testinstall",
            "order": 0,
            "memberOrder": 0,
            "type": "Version"
          },
          "scope": null
        },
        "ispush": {
          "id": "System.test.method.testinstall(installhandler,version,boolean).varParam.ispush",
          "nodeType": "variable",
          "name": "isPush",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isPush",
            "textToLower": "ispush",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 94
              },
              "end": {
                "line": 0,
                "character": 100
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_isPush_0:94"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "isPush",
            "textToLower": "ispush",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 94
              },
              "end": {
                "line": 0,
                "character": 100
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_isPush_0:94"
          },
          "parentId": "System.test.method.testinstall(installhandler,version,boolean)",
          "order": 3,
          "memberOrder": 3,
          "datatype": {
            "id": "System.test.testinstall.datatype.Boolean",
            "nodeType": "datatype",
            "name": "Boolean",
            "startToken": {
              "type": "datatype.primitive",
              "text": "Boolean",
              "textToLower": "boolean",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 86
                },
                "end": {
                  "line": 0,
                  "character": 93
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_Boolean_0:86"
            },
            "parentId": "System.test.testinstall",
            "order": 0,
            "memberOrder": 0,
            "type": "Boolean"
          },
          "description": "A class that implements the InstallHandler interface. The version number of the existing package installed in the subscriber organization. (Optional) Specifies whether the upgrade is a push. The default value is false.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    },
    "testuninstall(uninstallhandler)": {
      "id": "System.test.method.testuninstall(uninstallhandler)",
      "nodeType": "method",
      "name": "testUninstall",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "testUninstall",
        "textToLower": "testuninstall",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_testUninstall_-1:0"
      },
      "parentId": "System.test",
      "order": 22,
      "memberOrder": 22,
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 6
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_public_0:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": 0,
            "character": 7
          },
          "end": {
            "line": 0,
            "character": 13
          },
          "isEmpty": false,
          "isSingleLine": true
        },
        "id": "token.type.identifier_static_0:7"
      },
      "signature": "public static Void testUninstall(UninstallHandler uninstallImplementation)",
      "overrideSignature": "public static override Void testUninstall(UninstallHandler uninstallImplementation)",
      "simplifiedSignature": "testUninstall(UninstallHandler)",
      "datatype": {
        "id": "System.test.testuninstall.datatype.Void",
        "nodeType": "datatype",
        "name": "Void",
        "startToken": {
          "type": "datatype.primitive",
          "text": "Void",
          "textToLower": "void",
          "isAux": false,
          "range": {
            "start": {
              "line": 0,
              "character": 14
            },
            "end": {
              "line": 0,
              "character": 18
            },
            "isEmpty": false,
            "isSingleLine": true
          },
          "id": "token.type.identifier_Void_0:14"
        },
        "parentId": "System.test.testuninstall",
        "order": 0,
        "memberOrder": 0,
        "type": "Void"
      },
      "description": "Tests the implementation of the UninstallHandler interface, which is used for specifying an uninstall script in packages. Tests run as the test initiator in the development environment.",
      "parentName": "Test",
      "variables": {},
      "params": {
        "uninstallimplementation": {
          "id": "System.test.method.testuninstall(uninstallhandler).varParam.uninstallimplementation",
          "nodeType": "variable",
          "name": "uninstallImplementation",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "uninstallImplementation",
            "textToLower": "uninstallimplementation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_uninstallImplementation_0:50"
          },
          "endToken": {
            "type": "declaration.entity.name.variable",
            "text": "uninstallImplementation",
            "textToLower": "uninstallimplementation",
            "isAux": false,
            "range": {
              "start": {
                "line": 0,
                "character": 50
              },
              "end": {
                "line": 0,
                "character": 73
              },
              "isEmpty": false,
              "isSingleLine": true
            },
            "id": "token.type.identifier_uninstallImplementation_0:50"
          },
          "parentId": "System.test.method.testuninstall(uninstallhandler)",
          "order": 1,
          "memberOrder": 1,
          "datatype": {
            "id": "System.test.testuninstall.datatype.UninstallHandler",
            "nodeType": "datatype",
            "name": "UninstallHandler",
            "startToken": {
              "type": "datatype.support.class",
              "text": "UninstallHandler",
              "textToLower": "uninstallhandler",
              "isAux": false,
              "range": {
                "start": {
                  "line": 0,
                  "character": 33
                },
                "end": {
                  "line": 0,
                  "character": 49
                },
                "isEmpty": false,
                "isSingleLine": true
              },
              "id": "token.type.identifier_UninstallHandler_0:33"
            },
            "parentId": "System.test.testuninstall",
            "order": 0,
            "memberOrder": 0,
            "type": "UninstallHandler"
          },
          "description": "A class that implements the UninstallHandler interface.",
          "scope": null
        }
      },
      "queries": [],
      "exceptions": []
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {},
  "totalMembers": 22,
  "queries": []
}