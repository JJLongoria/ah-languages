{
  "id": "System.usermanagement",
  "nodeType": "class",
  "name": "UserManagement",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "UserManagement",
    "textToLower": "usermanagement",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_UserManagement_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Contains methods to manage end users, for example, to register their verification methods, verify their identity, or remove their personal information.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_System_UserManagement.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "clone()": {
      "id": "System.usermanagement.clone",
      "nodeType": "method",
      "name": "clone",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "clone",
        "textToLower": "clone",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_clone_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public User Management clone()",
      "simplifiedSignature": "clone()",
      "datatype": {
        "id": "System.usermanagement.clone.User Management",
        "nodeType": "datatype",
        "name": "User Management"
      },
      "description": "Makes a duplicate copy of the System.UserManagement object.",
      "params": {}
    },
    "deregisterverificationmethod(id,auth.verificationmethod)": {
      "id": "System.usermanagement.deregisterverificationmethod",
      "nodeType": "method",
      "name": "deregisterVerificationMethod",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "deregisterVerificationMethod",
        "textToLower": "deregisterverificationmethod",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_deregisterVerificationMethod_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void deregisterVerificationMethod(Id userId, Auth.VerificationMethod method)",
      "simplifiedSignature": "deregisterVerificationMethod(Id,Auth.VerificationMethod)",
      "datatype": {
        "id": "System.usermanagement.deregisterverificationmethod.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Deregisters an identity verification method. Use this method to let users delete an existing verification method.",
      "params": {
        "userId": {
          "id": "System.usermanagement.deregisterverificationmethod.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "System.usermanagement.deregisterverificationmethod.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "method": {
          "id": "System.usermanagement.deregisterverificationmethod.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.deregisterverificationmethod.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        }
      }
    },
    "formatphonenumber(string,string)": {
      "id": "System.usermanagement.formatphonenumber",
      "nodeType": "method",
      "name": "formatPhoneNumber",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "formatPhoneNumber",
        "textToLower": "formatphonenumber",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_formatPhoneNumber_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "global static String formatPhoneNumber(String countryCode, String phoneNumber)",
      "simplifiedSignature": "formatPhoneNumber(String,String)",
      "datatype": {
        "id": "System.usermanagement.formatphonenumber.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Formats a mobile phone number for a user. Call this method to ensure that the phone number is formatted properly before updating a userâ€™s mobile phone number.",
      "params": {
        "countryCode": {
          "id": "System.usermanagement.formatphonenumber.countrycode",
          "type": "var",
          "name": "countryCode",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "countryCode",
            "textToLower": "countrycode",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_countryCode_-1:0"
          },
          "signature": "String countryCode",
          "datatype": {
            "id": "System.usermanagement.formatphonenumber.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "phoneNumber": {
          "id": "System.usermanagement.formatphonenumber.phonenumber",
          "type": "var",
          "name": "phoneNumber",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "phoneNumber",
            "textToLower": "phonenumber",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_phoneNumber_-1:0"
          },
          "signature": "String phoneNumber",
          "datatype": {
            "id": "System.usermanagement.formatphonenumber.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "initpasswordlesslogin(id,auth.verificationmethod)": {
      "id": "System.usermanagement.initpasswordlesslogin",
      "nodeType": "method",
      "name": "initPasswordlessLogin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "initPasswordlessLogin",
        "textToLower": "initpasswordlesslogin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_initPasswordlessLogin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String initPasswordlessLogin(Id userId, Auth.VerificationMethod method)",
      "simplifiedSignature": "initPasswordlessLogin(Id,Auth.VerificationMethod)",
      "datatype": {
        "id": "System.usermanagement.initpasswordlesslogin.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Invokes a verification challenge for passwordless login when creating custom (Visualforce) Login and Verify pages for external users.",
      "params": {
        "userId": {
          "id": "System.usermanagement.initpasswordlesslogin.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "System.usermanagement.initpasswordlesslogin.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "method": {
          "id": "System.usermanagement.initpasswordlesslogin.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.initpasswordlesslogin.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        }
      }
    },
    "initregisterverificationmethod(auth.verificationmethod)": {
      "id": "System.usermanagement.initregisterverificationmethod",
      "nodeType": "method",
      "name": "initRegisterVerificationMethod",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "initRegisterVerificationMethod",
        "textToLower": "initregisterverificationmethod",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_initRegisterVerificationMethod_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String initRegisterVerificationMethod(Auth.VerificationMethod method)",
      "simplifiedSignature": "initRegisterVerificationMethod(Auth.VerificationMethod)",
      "datatype": {
        "id": "System.usermanagement.initregisterverificationmethod.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Invokes a verification challenge for registering identity verification methods with a custom (Visualforce) page. Users can register either their email address or phone number.",
      "params": {
        "method": {
          "id": "System.usermanagement.initregisterverificationmethod.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.initregisterverificationmethod.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        }
      }
    },
    "initselfregistration(auth.verificationmethod,user)": {
      "id": "System.usermanagement.initselfregistration",
      "nodeType": "method",
      "name": "initSelfRegistration",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "initSelfRegistration",
        "textToLower": "initselfregistration",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_initSelfRegistration_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String initSelfRegistration(Auth.VerificationMethod method, User user)",
      "simplifiedSignature": "initSelfRegistration(Auth.VerificationMethod,User)",
      "datatype": {
        "id": "System.usermanagement.initselfregistration.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Invokes a verification challenge for self-registration when creating a custom (Visualforce) Verify page for community self-registration.",
      "params": {
        "method": {
          "id": "System.usermanagement.initselfregistration.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.initselfregistration.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        },
        "user": {
          "id": "System.usermanagement.initselfregistration.user",
          "type": "var",
          "name": "user",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "user",
            "textToLower": "user",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_user_-1:0"
          },
          "signature": "User user",
          "datatype": {
            "id": "System.usermanagement.initselfregistration.user",
            "nodeType": "datatype",
            "name": "User"
          }
        }
      }
    },
    "obfuscateuser(id,string)": {
      "id": "System.usermanagement.obfuscateuser",
      "nodeType": "method",
      "name": "obfuscateUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "obfuscateUser",
        "textToLower": "obfuscateuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_obfuscateUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void obfuscateUser(Id userId, String username)",
      "simplifiedSignature": "obfuscateUser(Id,String)",
      "datatype": {
        "id": "System.usermanagement.obfuscateuser.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Scrambles usersâ€™ data on their request when they no longer want their personal data recognized in Salesforce. When you invoke the method for the user, the data becomes anonymous, and you can never recover it. Use this method to set the username to a specific value after itâ€™s scrambled.",
      "params": {
        "userId": {
          "id": "System.usermanagement.obfuscateuser.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "System.usermanagement.obfuscateuser.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "username": {
          "id": "System.usermanagement.obfuscateuser.username",
          "type": "var",
          "name": "username",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "username",
            "textToLower": "username",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_username_-1:0"
          },
          "signature": "String username",
          "datatype": {
            "id": "System.usermanagement.obfuscateuser.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "obfuscateuser(id)": {
      "id": "System.usermanagement.obfuscateuser",
      "nodeType": "method",
      "name": "obfuscateUser",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "obfuscateUser",
        "textToLower": "obfuscateuser",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_obfuscateUser_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void obfuscateUser(Id userId)",
      "simplifiedSignature": "obfuscateUser(Id)",
      "datatype": {
        "id": "System.usermanagement.obfuscateuser.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Scrambles usersâ€™ data on their request when they no longer want their personal data recognized in Salesforce. When you invoke the method for the user, the data becomes anonymous, and you can never recover it.",
      "params": {
        "userId": {
          "id": "System.usermanagement.obfuscateuser.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "System.usermanagement.obfuscateuser.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        }
      }
    },
    "registerverificationmethod(auth.verificationmethod,string)": {
      "id": "System.usermanagement.registerverificationmethod",
      "nodeType": "method",
      "name": "registerVerificationMethod",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "registerVerificationMethod",
        "textToLower": "registerverificationmethod",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_registerVerificationMethod_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static void registerVerificationMethod(Auth.VerificationMethod method, String startUrl)",
      "simplifiedSignature": "registerVerificationMethod(Auth.VerificationMethod,String)",
      "datatype": {
        "id": "System.usermanagement.registerverificationmethod.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "Registers an identity verification method. Verification methods can be a time-based one-time password (TOTP), email or text verification code, Salesforce Authenticator, or U2F. End users register their verification methods.",
      "params": {
        "method": {
          "id": "System.usermanagement.registerverificationmethod.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.registerverificationmethod.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        },
        "startUrl": {
          "id": "System.usermanagement.registerverificationmethod.starturl",
          "type": "var",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startUrl_-1:0"
          },
          "signature": "String startUrl",
          "datatype": {
            "id": "System.usermanagement.registerverificationmethod.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "sendasyncemailconfirmation(string,string,string,string)": {
      "id": "System.usermanagement.sendasyncemailconfirmation",
      "nodeType": "method",
      "name": "sendAsyncEmailConfirmation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "sendAsyncEmailConfirmation",
        "textToLower": "sendasyncemailconfirmation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_sendAsyncEmailConfirmation_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Boolean sendAsyncEmailConfirmation(String userId, String emailTemplateId, String networkId, String startUrl)",
      "simplifiedSignature": "sendAsyncEmailConfirmation(String,String,String,String)",
      "datatype": {
        "id": "System.usermanagement.sendasyncemailconfirmation.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Send an email message to a userâ€™s email address for verification. The message contains a verification link (URL) that the user clicks to verify the email address later on. You can send email verifications in bulk.",
      "params": {
        "userId": {
          "id": "System.usermanagement.sendasyncemailconfirmation.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "String userId",
          "datatype": {
            "id": "System.usermanagement.sendasyncemailconfirmation.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "emailTemplateId": {
          "id": "System.usermanagement.sendasyncemailconfirmation.emailtemplateid",
          "type": "var",
          "name": "emailTemplateId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "emailTemplateId",
            "textToLower": "emailtemplateid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_emailTemplateId_-1:0"
          },
          "signature": "String emailTemplateId",
          "datatype": {
            "id": "System.usermanagement.sendasyncemailconfirmation.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "networkId": {
          "id": "System.usermanagement.sendasyncemailconfirmation.networkid",
          "type": "var",
          "name": "networkId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "networkId",
            "textToLower": "networkid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_networkId_-1:0"
          },
          "signature": "String networkId",
          "datatype": {
            "id": "System.usermanagement.sendasyncemailconfirmation.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "startUrl": {
          "id": "System.usermanagement.sendasyncemailconfirmation.starturl",
          "type": "var",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startUrl_-1:0"
          },
          "signature": "String startUrl",
          "datatype": {
            "id": "System.usermanagement.sendasyncemailconfirmation.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "verifypasswordlesslogin(id,auth.verificationmethod,string,string,string)": {
      "id": "System.usermanagement.verifypasswordlesslogin",
      "nodeType": "method",
      "name": "verifyPasswordlessLogin",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "verifyPasswordlessLogin",
        "textToLower": "verifypasswordlesslogin",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_verifyPasswordlessLogin_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Auth.VerificationResult verifyPasswordlessLogin(Id userId, Auth.VerificationMethod method, String identifier, String code, String startUrl)",
      "simplifiedSignature": "verifyPasswordlessLogin(Id,Auth.VerificationMethod,String,String,String)",
      "datatype": {
        "id": "System.usermanagement.verifypasswordlesslogin.Auth.VerificationResult",
        "nodeType": "datatype",
        "name": "Auth.VerificationResult"
      },
      "description": "Completes a verification challenge when creating a custom (Visualforce) Verify page for passwordless login. If the user who is trying to login enters the verification code successfully, the user is logged in.",
      "params": {
        "userId": {
          "id": "System.usermanagement.verifypasswordlesslogin.userid",
          "type": "var",
          "name": "userId",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "userId",
            "textToLower": "userid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_userId_-1:0"
          },
          "signature": "Id userId",
          "datatype": {
            "id": "System.usermanagement.verifypasswordlesslogin.id",
            "nodeType": "datatype",
            "name": "Id"
          }
        },
        "method": {
          "id": "System.usermanagement.verifypasswordlesslogin.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.verifypasswordlesslogin.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        },
        "identifier": {
          "id": "System.usermanagement.verifypasswordlesslogin.identifier",
          "type": "var",
          "name": "identifier",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "identifier",
            "textToLower": "identifier",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_identifier_-1:0"
          },
          "signature": "String identifier",
          "datatype": {
            "id": "System.usermanagement.verifypasswordlesslogin.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "code": {
          "id": "System.usermanagement.verifypasswordlesslogin.code",
          "type": "var",
          "name": "code",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "code",
            "textToLower": "code",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_code_-1:0"
          },
          "signature": "String code",
          "datatype": {
            "id": "System.usermanagement.verifypasswordlesslogin.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "startUrl": {
          "id": "System.usermanagement.verifypasswordlesslogin.starturl",
          "type": "var",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startUrl_-1:0"
          },
          "signature": "String startUrl",
          "datatype": {
            "id": "System.usermanagement.verifypasswordlesslogin.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "verifyregisterverificationmethod(string,auth.verificationmethod)": {
      "id": "System.usermanagement.verifyregisterverificationmethod",
      "nodeType": "method",
      "name": "verifyRegisterVerificationMethod",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "verifyRegisterVerificationMethod",
        "textToLower": "verifyregisterverificationmethod",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_verifyRegisterVerificationMethod_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static String verifyRegisterVerificationMethod(String code, Auth.VerificationMethod method)",
      "simplifiedSignature": "verifyRegisterVerificationMethod(String,Auth.VerificationMethod)",
      "datatype": {
        "id": "System.usermanagement.verifyregisterverificationmethod.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Completes registering a userâ€™s email address or phone number as a verification method when customizing the identity verification process.",
      "params": {
        "code": {
          "id": "System.usermanagement.verifyregisterverificationmethod.code",
          "type": "var",
          "name": "code",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "code",
            "textToLower": "code",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_code_-1:0"
          },
          "signature": "String code",
          "datatype": {
            "id": "System.usermanagement.verifyregisterverificationmethod.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "method": {
          "id": "System.usermanagement.verifyregisterverificationmethod.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.verifyregisterverificationmethod.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        }
      }
    },
    "verifyselfregistration(auth.verificationmethod,string,string,string)": {
      "id": "System.usermanagement.verifyselfregistration",
      "nodeType": "method",
      "name": "verifySelfRegistration",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "verifySelfRegistration",
        "textToLower": "verifyselfregistration",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_verifySelfRegistration_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static Auth.VerificationResult verifySelfRegistration(Auth.VerificationMethod method, String identifier, String code, String startUrl)",
      "simplifiedSignature": "verifySelfRegistration(Auth.VerificationMethod,String,String,String)",
      "datatype": {
        "id": "System.usermanagement.verifyselfregistration.Auth.VerificationResult",
        "nodeType": "datatype",
        "name": "Auth.VerificationResult"
      },
      "description": "Completes a verification challenge when creating a custom (Visualforce) Verify page for community self-registration. If the person who is attempting to register enters the verification code successfully, the user is created and logged in.",
      "params": {
        "method": {
          "id": "System.usermanagement.verifyselfregistration.method",
          "type": "var",
          "name": "method",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "method",
            "textToLower": "method",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_method_-1:0"
          },
          "signature": "Auth.VerificationMethod method",
          "datatype": {
            "id": "System.usermanagement.verifyselfregistration.auth.verificationmethod",
            "nodeType": "datatype",
            "name": "Auth.VerificationMethod"
          }
        },
        "identifier": {
          "id": "System.usermanagement.verifyselfregistration.identifier",
          "type": "var",
          "name": "identifier",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "identifier",
            "textToLower": "identifier",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_identifier_-1:0"
          },
          "signature": "String identifier",
          "datatype": {
            "id": "System.usermanagement.verifyselfregistration.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "code": {
          "id": "System.usermanagement.verifyselfregistration.code",
          "type": "var",
          "name": "code",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "code",
            "textToLower": "code",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_code_-1:0"
          },
          "signature": "String code",
          "datatype": {
            "id": "System.usermanagement.verifyselfregistration.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "startUrl": {
          "id": "System.usermanagement.verifyselfregistration.starturl",
          "type": "var",
          "name": "startUrl",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "startUrl",
            "textToLower": "starturl",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_startUrl_-1:0"
          },
          "signature": "String startUrl",
          "datatype": {
            "id": "System.usermanagement.verifyselfregistration.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}