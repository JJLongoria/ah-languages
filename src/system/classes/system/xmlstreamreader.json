{
  "id": "System.xmlstreamreader",
  "nodeType": "class",
  "name": "XmlStreamReader",
  "namespace": "System",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "XmlStreamReader",
    "textToLower": "xmlstreamreader",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_XmlStreamReader_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "The XmlStreamReader class provides methods for forward, read-only access to XML data. You can pull data from XML or skip unwanted events. You can parse nested XML content thatâ€™s up to 50 nodes deep.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_xml_XmlStream_reader.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "getattributecount()": {
      "id": "System.xmlstreamreader.getattributecount",
      "nodeType": "method",
      "name": "getAttributeCount",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeCount",
        "textToLower": "getattributecount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeCount_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer getAttributeCount()",
      "simplifiedSignature": "getAttributeCount()",
      "datatype": {
        "id": "System.xmlstreamreader.getattributecount.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of attributes on the start element, excluding namespace definitions.",
      "params": {}
    },
    "getattributelocalname(integer)": {
      "id": "System.xmlstreamreader.getattributelocalname",
      "nodeType": "method",
      "name": "getAttributeLocalName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeLocalName",
        "textToLower": "getattributelocalname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeLocalName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeLocalName(Integer index)",
      "simplifiedSignature": "getAttributeLocalName(Integer)",
      "datatype": {
        "id": "System.xmlstreamreader.getattributelocalname.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the local name of the attribute at the specified index.",
      "params": {
        "index": {
          "id": "System.xmlstreamreader.getattributelocalname.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.xmlstreamreader.getattributelocalname.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getattributenamespace(integer)": {
      "id": "System.xmlstreamreader.getattributenamespace",
      "nodeType": "method",
      "name": "getAttributeNamespace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeNamespace",
        "textToLower": "getattributenamespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeNamespace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeNamespace(Integer index)",
      "simplifiedSignature": "getAttributeNamespace(Integer)",
      "datatype": {
        "id": "System.xmlstreamreader.getattributenamespace.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the namespace URI of the attribute at the specified index.",
      "params": {
        "index": {
          "id": "System.xmlstreamreader.getattributenamespace.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.xmlstreamreader.getattributenamespace.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getattributeprefix(integer)": {
      "id": "System.xmlstreamreader.getattributeprefix",
      "nodeType": "method",
      "name": "getAttributePrefix",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributePrefix",
        "textToLower": "getattributeprefix",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributePrefix_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributePrefix(Integer index)",
      "simplifiedSignature": "getAttributePrefix(Integer)",
      "datatype": {
        "id": "System.xmlstreamreader.getattributeprefix.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the prefix of this attribute at the specified index.",
      "params": {
        "index": {
          "id": "System.xmlstreamreader.getattributeprefix.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.xmlstreamreader.getattributeprefix.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getattributetype(integer)": {
      "id": "System.xmlstreamreader.getattributetype",
      "nodeType": "method",
      "name": "getAttributeType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeType",
        "textToLower": "getattributetype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeType(Integer index)",
      "simplifiedSignature": "getAttributeType(Integer)",
      "datatype": {
        "id": "System.xmlstreamreader.getattributetype.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the XML type of the attribute at the specified index.",
      "params": {
        "index": {
          "id": "System.xmlstreamreader.getattributetype.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.xmlstreamreader.getattributetype.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getattributevalue(string,string)": {
      "id": "System.xmlstreamreader.getattributevalue",
      "nodeType": "method",
      "name": "getAttributeValue",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeValue",
        "textToLower": "getattributevalue",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeValue_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeValue(String namespaceUri, String localName)",
      "simplifiedSignature": "getAttributeValue(String,String)",
      "datatype": {
        "id": "System.xmlstreamreader.getattributevalue.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the value of the attribute in the specified localName at the specified URI.",
      "params": {
        "namespaceUri": {
          "id": "System.xmlstreamreader.getattributevalue.namespaceuri",
          "type": "var",
          "name": "namespaceUri",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "namespaceUri",
            "textToLower": "namespaceuri",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_namespaceUri_-1:0"
          },
          "signature": "String namespaceUri",
          "datatype": {
            "id": "System.xmlstreamreader.getattributevalue.string",
            "nodeType": "datatype",
            "name": "String"
          }
        },
        "localName": {
          "id": "System.xmlstreamreader.getattributevalue.localname",
          "type": "var",
          "name": "localName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "localName",
            "textToLower": "localname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_localName_-1:0"
          },
          "signature": "String localName",
          "datatype": {
            "id": "System.xmlstreamreader.getattributevalue.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getattributevalueat(integer)": {
      "id": "System.xmlstreamreader.getattributevalueat",
      "nodeType": "method",
      "name": "getAttributeValueAt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getAttributeValueAt",
        "textToLower": "getattributevalueat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getAttributeValueAt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getAttributeValueAt(Integer index)",
      "simplifiedSignature": "getAttributeValueAt(Integer)",
      "datatype": {
        "id": "System.xmlstreamreader.getattributevalueat.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the value of the attribute at the specified index.",
      "params": {
        "index": {
          "id": "System.xmlstreamreader.getattributevalueat.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.xmlstreamreader.getattributevalueat.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "geteventtype()": {
      "id": "System.xmlstreamreader.geteventtype",
      "nodeType": "method",
      "name": "getEventType",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getEventType",
        "textToLower": "geteventtype",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getEventType_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public System.XmlTag getEventType()",
      "simplifiedSignature": "getEventType()",
      "datatype": {
        "id": "System.xmlstreamreader.geteventtype.System.XmlTag",
        "nodeType": "datatype",
        "name": "System.XmlTag"
      },
      "description": "Returns the type of XML event the cursor is pointing to.",
      "params": {}
    },
    "getlocalname()": {
      "id": "System.xmlstreamreader.getlocalname",
      "nodeType": "method",
      "name": "getLocalName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLocalName",
        "textToLower": "getlocalname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLocalName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getLocalName()",
      "simplifiedSignature": "getLocalName()",
      "datatype": {
        "id": "System.xmlstreamreader.getlocalname.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the local name of the current event.",
      "params": {}
    },
    "getlocation()": {
      "id": "System.xmlstreamreader.getlocation",
      "nodeType": "method",
      "name": "getLocation",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getLocation",
        "textToLower": "getlocation",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getLocation_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getLocation()",
      "simplifiedSignature": "getLocation()",
      "datatype": {
        "id": "System.xmlstreamreader.getlocation.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Return the current location of the cursor.",
      "params": {}
    },
    "getnamespace()": {
      "id": "System.xmlstreamreader.getnamespace",
      "nodeType": "method",
      "name": "getNamespace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNamespace",
        "textToLower": "getnamespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNamespace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getNamespace()",
      "simplifiedSignature": "getNamespace()",
      "datatype": {
        "id": "System.xmlstreamreader.getnamespace.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "If the current event is a start element or end element, this method returns the URI of the prefix or the default namespace.",
      "params": {}
    },
    "getnamespacecount()": {
      "id": "System.xmlstreamreader.getnamespacecount",
      "nodeType": "method",
      "name": "getNamespaceCount",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNamespaceCount",
        "textToLower": "getnamespacecount",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNamespaceCount_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer getNamespaceCount()",
      "simplifiedSignature": "getNamespaceCount()",
      "datatype": {
        "id": "System.xmlstreamreader.getnamespacecount.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Returns the number of namespaces declared on a start element or end element.",
      "params": {}
    },
    "getnamespaceprefix(integer)": {
      "id": "System.xmlstreamreader.getnamespaceprefix",
      "nodeType": "method",
      "name": "getNamespacePrefix",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNamespacePrefix",
        "textToLower": "getnamespaceprefix",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNamespacePrefix_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getNamespacePrefix(Integer index)",
      "simplifiedSignature": "getNamespacePrefix(Integer)",
      "datatype": {
        "id": "System.xmlstreamreader.getnamespaceprefix.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the prefix for the namespace declared at the index.",
      "params": {
        "index": {
          "id": "System.xmlstreamreader.getnamespaceprefix.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.xmlstreamreader.getnamespaceprefix.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getnamespaceuri(string)": {
      "id": "System.xmlstreamreader.getnamespaceuri",
      "nodeType": "method",
      "name": "getNamespaceURI",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNamespaceURI",
        "textToLower": "getnamespaceuri",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNamespaceURI_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getNamespaceURI(String prefix)",
      "simplifiedSignature": "getNamespaceURI(String)",
      "datatype": {
        "id": "System.xmlstreamreader.getnamespaceuri.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Return the URI for the given prefix.",
      "params": {
        "prefix": {
          "id": "System.xmlstreamreader.getnamespaceuri.prefix",
          "type": "var",
          "name": "prefix",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "prefix",
            "textToLower": "prefix",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_prefix_-1:0"
          },
          "signature": "String prefix",
          "datatype": {
            "id": "System.xmlstreamreader.getnamespaceuri.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "getnamespaceuriat(integer)": {
      "id": "System.xmlstreamreader.getnamespaceuriat",
      "nodeType": "method",
      "name": "getNamespaceURIAt",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getNamespaceURIAt",
        "textToLower": "getnamespaceuriat",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getNamespaceURIAt_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getNamespaceURIAt(Integer index)",
      "simplifiedSignature": "getNamespaceURIAt(Integer)",
      "datatype": {
        "id": "System.xmlstreamreader.getnamespaceuriat.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the URI for the namespace declared at the index.",
      "params": {
        "index": {
          "id": "System.xmlstreamreader.getnamespaceuriat.index",
          "type": "var",
          "name": "index",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "index",
            "textToLower": "index",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_index_-1:0"
          },
          "signature": "Integer index",
          "datatype": {
            "id": "System.xmlstreamreader.getnamespaceuriat.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "getpidata()": {
      "id": "System.xmlstreamreader.getpidata",
      "nodeType": "method",
      "name": "getPIData",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPIData",
        "textToLower": "getpidata",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPIData_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getPIData()",
      "simplifiedSignature": "getPIData()",
      "datatype": {
        "id": "System.xmlstreamreader.getpidata.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the data section of a processing instruction.",
      "params": {}
    },
    "getpitarget()": {
      "id": "System.xmlstreamreader.getpitarget",
      "nodeType": "method",
      "name": "getPITarget",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPITarget",
        "textToLower": "getpitarget",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPITarget_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getPITarget()",
      "simplifiedSignature": "getPITarget()",
      "datatype": {
        "id": "System.xmlstreamreader.getpitarget.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the target section of a processing instruction.",
      "params": {}
    },
    "getprefix()": {
      "id": "System.xmlstreamreader.getprefix",
      "nodeType": "method",
      "name": "getPrefix",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getPrefix",
        "textToLower": "getprefix",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getPrefix_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getPrefix()",
      "simplifiedSignature": "getPrefix()",
      "datatype": {
        "id": "System.xmlstreamreader.getprefix.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the prefix of the current XML event or null if the event does not have a prefix.",
      "params": {}
    },
    "gettext()": {
      "id": "System.xmlstreamreader.gettext",
      "nodeType": "method",
      "name": "getText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getText",
        "textToLower": "gettext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getText()",
      "simplifiedSignature": "getText()",
      "datatype": {
        "id": "System.xmlstreamreader.gettext.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the current value of the XML event as a string.",
      "params": {}
    },
    "getversion()": {
      "id": "System.xmlstreamreader.getversion",
      "nodeType": "method",
      "name": "getVersion",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "getVersion",
        "textToLower": "getversion",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_getVersion_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String getVersion()",
      "simplifiedSignature": "getVersion()",
      "datatype": {
        "id": "System.xmlstreamreader.getversion.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns the XML version specified on the XML declaration. Returns null if none was declared.",
      "params": {}
    },
    "hasname()": {
      "id": "System.xmlstreamreader.hasname",
      "nodeType": "method",
      "name": "hasName",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hasName",
        "textToLower": "hasname",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hasName_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean hasName()",
      "simplifiedSignature": "hasName()",
      "datatype": {
        "id": "System.xmlstreamreader.hasname.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current XML event has a name. Returns false otherwise.",
      "params": {}
    },
    "hasnext()": {
      "id": "System.xmlstreamreader.hasnext",
      "nodeType": "method",
      "name": "hasNext",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hasNext",
        "textToLower": "hasnext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hasNext_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean hasNext()",
      "simplifiedSignature": "hasNext()",
      "datatype": {
        "id": "System.xmlstreamreader.hasnext.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if there are more  XML events and false if there are no more XML events.",
      "params": {}
    },
    "hastext()": {
      "id": "System.xmlstreamreader.hastext",
      "nodeType": "method",
      "name": "hasText",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "hasText",
        "textToLower": "hastext",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_hasText_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean hasText()",
      "simplifiedSignature": "hasText()",
      "datatype": {
        "id": "System.xmlstreamreader.hastext.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the current event has text, false otherwise.",
      "params": {}
    },
    "ischaracters()": {
      "id": "System.xmlstreamreader.ischaracters",
      "nodeType": "method",
      "name": "isCharacters",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isCharacters",
        "textToLower": "ischaracters",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isCharacters_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isCharacters()",
      "simplifiedSignature": "isCharacters()",
      "datatype": {
        "id": "System.xmlstreamreader.ischaracters.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the cursor points to a character data XML event. Otherwise, returns false.",
      "params": {}
    },
    "isendelement()": {
      "id": "System.xmlstreamreader.isendelement",
      "nodeType": "method",
      "name": "isEndElement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isEndElement",
        "textToLower": "isendelement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isEndElement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isEndElement()",
      "simplifiedSignature": "isEndElement()",
      "datatype": {
        "id": "System.xmlstreamreader.isendelement.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the cursor points to an end tag. Otherwise, it returns false.",
      "params": {}
    },
    "isstartelement()": {
      "id": "System.xmlstreamreader.isstartelement",
      "nodeType": "method",
      "name": "isStartElement",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isStartElement",
        "textToLower": "isstartelement",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isStartElement_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isStartElement()",
      "simplifiedSignature": "isStartElement()",
      "datatype": {
        "id": "System.xmlstreamreader.isstartelement.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the cursor points to a start tag. Otherwise, it returns false.",
      "params": {}
    },
    "iswhitespace()": {
      "id": "System.xmlstreamreader.iswhitespace",
      "nodeType": "method",
      "name": "isWhiteSpace",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "isWhiteSpace",
        "textToLower": "iswhitespace",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_isWhiteSpace_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Boolean isWhiteSpace()",
      "simplifiedSignature": "isWhiteSpace()",
      "datatype": {
        "id": "System.xmlstreamreader.iswhitespace.Boolean",
        "nodeType": "datatype",
        "name": "Boolean"
      },
      "description": "Returns true if the cursor points to a character data XML event that consists of all white space. Otherwise it returns false.",
      "params": {}
    },
    "next()": {
      "id": "System.xmlstreamreader.next",
      "nodeType": "method",
      "name": "next",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "next",
        "textToLower": "next",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_next_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer next()",
      "simplifiedSignature": "next()",
      "datatype": {
        "id": "System.xmlstreamreader.next.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Reads the next XML event. A processor may return all contiguous character data in a single chunk, or it may split it into several chunks. Returns an integer which indicates the type of event.",
      "params": {}
    },
    "nexttag()": {
      "id": "System.xmlstreamreader.nexttag",
      "nodeType": "method",
      "name": "nextTag",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "nextTag",
        "textToLower": "nexttag",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_nextTag_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public Integer nextTag()",
      "simplifiedSignature": "nextTag()",
      "datatype": {
        "id": "System.xmlstreamreader.nexttag.Integer",
        "nodeType": "datatype",
        "name": "Integer"
      },
      "description": "Skips any white space (the isWhiteSpace method returns true), comment, or processing instruction XML events, until a start element or end element is reached. Returns the index for that XML event.",
      "params": {}
    },
    "setcoalescing(boolean)": {
      "id": "System.xmlstreamreader.setcoalescing",
      "nodeType": "method",
      "name": "setCoalescing",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setCoalescing",
        "textToLower": "setcoalescing",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setCoalescing_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setCoalescing(Boolean returnAsSingleBlock)",
      "simplifiedSignature": "setCoalescing(Boolean)",
      "datatype": {
        "id": "System.xmlstreamreader.setcoalescing.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "If you specify true for returnAsSingleBlock, text is returned in a single block, from a start element to the first end element or the next start element, whichever comes first. If you specify it as false, the parser may return text in multiple blocks.",
      "params": {
        "returnAsSingleBlock": {
          "id": "System.xmlstreamreader.setcoalescing.returnassingleblock",
          "type": "var",
          "name": "returnAsSingleBlock",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "returnAsSingleBlock",
            "textToLower": "returnassingleblock",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_returnAsSingleBlock_-1:0"
          },
          "signature": "Boolean returnAsSingleBlock",
          "datatype": {
            "id": "System.xmlstreamreader.setcoalescing.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "setnamespaceaware(boolean)": {
      "id": "System.xmlstreamreader.setnamespaceaware",
      "nodeType": "method",
      "name": "setNamespaceAware",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "setNamespaceAware",
        "textToLower": "setnamespaceaware",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_setNamespaceAware_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public void setNamespaceAware(Boolean isNamespaceAware)",
      "simplifiedSignature": "setNamespaceAware(Boolean)",
      "datatype": {
        "id": "System.xmlstreamreader.setnamespaceaware.void",
        "nodeType": "datatype",
        "name": "void"
      },
      "description": "If you specify true for isNamespaceAware, the parser recognizes namespace. If you specify it as false, the parser does not. The default value is true.",
      "params": {
        "isNamespaceAware": {
          "id": "System.xmlstreamreader.setnamespaceaware.isnamespaceaware",
          "type": "var",
          "name": "isNamespaceAware",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "isNamespaceAware",
            "textToLower": "isnamespaceaware",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_isNamespaceAware_-1:0"
          },
          "signature": "Boolean isNamespaceAware",
          "datatype": {
            "id": "System.xmlstreamreader.setnamespaceaware.boolean",
            "nodeType": "datatype",
            "name": "Boolean"
          }
        }
      }
    },
    "tostring()": {
      "id": "System.xmlstreamreader.tostring",
      "nodeType": "method",
      "name": "toString",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "toString",
        "textToLower": "tostring",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_toString_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String toString()",
      "simplifiedSignature": "toString()",
      "datatype": {
        "id": "System.xmlstreamreader.tostring.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Returns a string containing the length of the input XML given to XmlStreamReader and the first 50 characters of the input XML.",
      "params": {}
    }
  },
  "constructors": {
    "xmlstreamreader(string)": {
      "id": "System.xmlstreamreader.xmlstreamreader",
      "nodeType": "constructor",
      "name": "XmlStreamReader",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "XmlStreamReader",
        "textToLower": "xmlstreamreader",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_XmlStreamReader_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public XmlStreamReader(String xmlInput)",
      "simplifiedSignature": "XmlStreamReader(String)",
      "datatype": {
        "id": "System.xmlstreamreader.xmlstreamreader.constructor",
        "nodeType": "datatype",
        "name": "XmlStreamReader"
      },
      "description": "Creates a new instance of the XmlStreamReader class for the specified XML input.",
      "params": {
        "xmlInput": {
          "id": "System.xmlstreamreader.xmlstreamreader.xmlinput",
          "type": "var",
          "name": "xmlInput",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "xmlInput",
            "textToLower": "xmlinput",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_xmlInput_-1:0"
          },
          "signature": "String xmlInput",
          "datatype": {
            "id": "System.xmlstreamreader.xmlstreamreader.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}