{
  "id": "TxnSecurity.policycondition",
  "type": "class",
  "name": "interface",
  "namespace": "TxnSecurity",
  "startToken": "PolicyCondition",
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {},
    "id": "keyword.modifier.access_global"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {},
    "id": "keyword.modifier.sharing_without sharing"
  },
  "description": "Apex interface that allows an implementing class to specify actions to take when certain events occur based on a transaction security policy.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_interface_TxnSecurity_PolicyCondition.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "fields": {},
  "methods": {
    "evaluate(txnsecurity.event)": {
      "id": "TxnSecurity.policycondition.evaluate",
      "type": "method",
      "name": "evaluate",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "evaluate",
        "textToLower": "evaluate",
        "isAux": false,
        "range": {},
        "id": "declaration.entity.name.function_evaluate"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {},
        "id": "keyword.modifier.access_public"
      },
      "signature": "public Boolean evaluate(TxnSecurity.Event event)",
      "simplifiedSignature": "evaluate(TxnSecurity.Event)",
      "datatype": {
        "id": "TxnSecurity.policycondition.evaluate.Boolean",
        "type": "datatype",
        "name": "Boolean"
      },
      "description": "Evaluates an event against a transaction security policy. If the event triggers the policy, true is returned.",
      "variables": {
        "event": {
          "id": "TxnSecurity.policycondition.evaluate.event",
          "type": "var",
          "name": "event",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "event",
            "textToLower": "event",
            "isAux": false,
            "range": {},
            "id": "declaration.entity.name.variable_event"
          },
          "signature": "TxnSecurity.Event event",
          "datatype": {
            "id": "TxnSecurity.policycondition.evaluate.txnsecurity.event",
            "type": "datatype",
            "name": "TxnSecurity.Event"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}