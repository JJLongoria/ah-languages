{
  "id": "Wave.querybuilder",
  "type": "class",
  "name": "QueryBuilder",
  "namespace": "Wave",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "QueryBuilder",
    "textToLower": "querybuilder",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_QueryBuilder_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "The QueryBuilder class provides methods for constructing well-formed SAQL queries to pass to Wave Analytics.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_wave_QueryBuilder.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "load(string,string)": {
      "id": "Wave.querybuilder.load",
      "type": "method",
      "name": "load",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "load",
        "textToLower": "load",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_load_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static wave.QueryNode load(String datasetID, String datasetVersionID)",
      "simplifiedSignature": "load(String,String)",
      "datatype": {
        "id": "Wave.querybuilder.load.wave.QueryNode",
        "type": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Load a stream from a dataset.",
      "variables": {
        "datasetID": {
          "id": "Wave.querybuilder.load.datasetid",
          "type": "var",
          "name": "datasetID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "datasetID",
            "textToLower": "datasetid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_datasetID_-1:0"
          },
          "signature": "String datasetID",
          "datatype": {
            "id": "Wave.querybuilder.load.string",
            "type": "datatype",
            "name": "String"
          }
        },
        "datasetVersionID": {
          "id": "Wave.querybuilder.load.datasetversionid",
          "type": "var",
          "name": "datasetVersionID",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "datasetVersionID",
            "textToLower": "datasetversionid",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_datasetVersionID_-1:0"
          },
          "signature": "String datasetVersionID",
          "datatype": {
            "id": "Wave.querybuilder.load.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "count()": {
      "id": "Wave.querybuilder.count",
      "type": "method",
      "name": "count",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "count",
        "textToLower": "count",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_count_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static wave.ProjectionNode count()",
      "simplifiedSignature": "count()",
      "datatype": {
        "id": "Wave.querybuilder.count.wave.ProjectionNode",
        "type": "datatype",
        "name": "wave.ProjectionNode"
      },
      "description": "Calculate the number of rows that match the query criteria.",
      "variables": {}
    },
    "get(string)": {
      "id": "Wave.querybuilder.get",
      "type": "method",
      "name": "get",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "get",
        "textToLower": "get",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_get_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "public static wave.ProjectionNode get(String proj)",
      "simplifiedSignature": "get(String)",
      "datatype": {
        "id": "Wave.querybuilder.get.wave.ProjectionNode",
        "type": "datatype",
        "name": "wave.ProjectionNode"
      },
      "description": "Query by selecting specific attributes.",
      "variables": {
        "proj": {
          "id": "Wave.querybuilder.get.proj",
          "type": "var",
          "name": "proj",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "proj",
            "textToLower": "proj",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_proj_-1:0"
          },
          "signature": "String proj",
          "datatype": {
            "id": "Wave.querybuilder.get.string",
            "type": "datatype",
            "name": "String"
          }
        }
      }
    },
    "union(list)": {
      "id": "Wave.querybuilder.union",
      "type": "method",
      "name": "union",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "union",
        "textToLower": "union",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_union_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "global static wave.QueryNode union(List <Wave.QueryNode>)",
      "simplifiedSignature": "union(List)",
      "datatype": {
        "id": "Wave.querybuilder.union.wave.QueryNode",
        "type": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Combine multiple result sets into one result set.",
      "variables": {
        "<Wave.QueryNode>": {
          "id": "Wave.querybuilder.union.<wave.querynode>",
          "type": "var",
          "name": "<Wave.QueryNode>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Wave.QueryNode>",
            "textToLower": "<wave.querynode>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Wave.QueryNode>_-1:0"
          },
          "signature": "List <Wave.QueryNode>",
          "datatype": {
            "id": "Wave.querybuilder.union.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    },
    "cogroup(list)": {
      "id": "Wave.querybuilder.cogroup",
      "type": "method",
      "name": "cogroup",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cogroup",
        "textToLower": "cogroup",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cogroup_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "static": {
        "type": "keyword.modifier.static",
        "text": "static",
        "textToLower": "static",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.static_static_-1:0"
      },
      "signature": "global static wave.QueryNode cogroup(List <Wave.QueryNode>)",
      "simplifiedSignature": "cogroup(List)",
      "datatype": {
        "id": "Wave.querybuilder.cogroup.wave.QueryNode",
        "type": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Cogrouping means that two input streams are grouped independently and arranged side by side. Only data that exists in both groups appears in the results.",
      "variables": {
        "<Wave.QueryNode>": {
          "id": "Wave.querybuilder.cogroup.<wave.querynode>",
          "type": "var",
          "name": "<Wave.QueryNode>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<Wave.QueryNode>",
            "textToLower": "<wave.querynode>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<Wave.QueryNode>_-1:0"
          },
          "signature": "List <Wave.QueryNode>",
          "datatype": {
            "id": "Wave.querybuilder.cogroup.list",
            "type": "datatype",
            "name": "List"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}