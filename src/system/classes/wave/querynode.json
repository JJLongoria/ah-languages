{
  "id": "Wave.querynode",
  "nodeType": "class",
  "name": "QueryNode",
  "namespace": "Wave",
  "startToken": {
    "type": "declaration.entity.name.class",
    "text": "QueryNode",
    "textToLower": "querynode",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "declaration.entity.name.class_QueryNode_-1:0"
  },
  "accessModifier": {
    "type": "keyword.modifier.access",
    "text": "global",
    "textToLower": "global",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.access_global_-1:0"
  },
  "sharingModifier": {
    "type": "keyword.modifier.sharing",
    "text": "without sharing",
    "textToLower": "without sharing",
    "isAux": false,
    "range": {
      "start": {
        "line": -1,
        "character": 0
      },
      "end": {
        "line": -1,
        "character": 0
      },
      "isEmpty": true,
      "isSingleLine": true
    },
    "id": "keyword.modifier.sharing_without sharing_-1:0"
  },
  "description": "Define each node of the query - such as projection, groups, order, filters. Execute the query.",
  "documentation": "https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_class_wave_QueryNode.htm",
  "classes": {},
  "interfaces": {},
  "enums": {},
  "variables": {},
  "methods": {
    "build(string)": {
      "id": "Wave.querynode.build",
      "nodeType": "method",
      "name": "build",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "build",
        "textToLower": "build",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_build_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public String build(String streamName)",
      "simplifiedSignature": "build(String)",
      "datatype": {
        "id": "Wave.querynode.build.String",
        "nodeType": "datatype",
        "name": "String"
      },
      "description": "Build the query string represented by this QueryNode and assign it to a stream name.",
      "params": {
        "streamName": {
          "id": "Wave.querynode.build.streamname",
          "type": "var",
          "name": "streamName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "streamName",
            "textToLower": "streamname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_streamName_-1:0"
          },
          "signature": "String streamName",
          "datatype": {
            "id": "Wave.querynode.build.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "foreach(list)": {
      "id": "Wave.querynode.foreach",
      "nodeType": "method",
      "name": "foreach",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "foreach",
        "textToLower": "foreach",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_foreach_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public wave.QueryNode foreach(List <wave.ProjectionNode>)",
      "simplifiedSignature": "foreach(List)",
      "datatype": {
        "id": "Wave.querynode.foreach.wave.QueryNode",
        "nodeType": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Applies a set of expressions to every row in a dataset. This action is often referred to as projection.",
      "params": {
        "<wave.ProjectionNode>": {
          "id": "Wave.querynode.foreach.<wave.projectionnode>",
          "type": "var",
          "name": "<wave.ProjectionNode>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<wave.ProjectionNode>",
            "textToLower": "<wave.projectionnode>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<wave.ProjectionNode>_-1:0"
          },
          "signature": "List <wave.ProjectionNode>",
          "datatype": {
            "id": "Wave.querynode.foreach.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "group(list)": {
      "id": "Wave.querynode.group",
      "nodeType": "method",
      "name": "group",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "group",
        "textToLower": "group",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_group_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public wave.QueryNode group(List <String>)",
      "simplifiedSignature": "group(List)",
      "datatype": {
        "id": "Wave.querynode.group.wave.QueryNode",
        "nodeType": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Groups matched records (group by specific dataset attributes).",
      "params": {
        "<String>": {
          "id": "Wave.querynode.group.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Wave.querynode.group.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "group()": {
      "id": "Wave.querynode.group",
      "nodeType": "method",
      "name": "group",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "group",
        "textToLower": "group",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_group_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public wave.QueryNode group()",
      "simplifiedSignature": "group()",
      "datatype": {
        "id": "Wave.querynode.group.wave.QueryNode",
        "nodeType": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Groups matched records (group by all).",
      "params": {}
    },
    "order(list)": {
      "id": "Wave.querynode.order",
      "nodeType": "method",
      "name": "order",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "order",
        "textToLower": "order",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_order_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public wave.QueryNode order(List <String>)",
      "simplifiedSignature": "order(List)",
      "datatype": {
        "id": "Wave.querynode.order.wave.QueryNode",
        "nodeType": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Sorts in ascending or descending order on one or more fields.",
      "params": {
        "<String>": {
          "id": "Wave.querynode.order.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Wave.querynode.order.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "cap(integer)": {
      "id": "Wave.querynode.cap",
      "nodeType": "method",
      "name": "cap",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "cap",
        "textToLower": "cap",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_cap_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "signature": "global wave.QueryNode cap(Integer cap)",
      "simplifiedSignature": "cap(Integer)",
      "datatype": {
        "id": "Wave.querynode.cap.wave.QueryNode",
        "nodeType": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Limits the number of results that are returned.",
      "params": {
        "cap": {
          "id": "Wave.querynode.cap.cap",
          "type": "var",
          "name": "cap",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "cap",
            "textToLower": "cap",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_cap_-1:0"
          },
          "signature": "Integer cap",
          "datatype": {
            "id": "Wave.querynode.cap.integer",
            "nodeType": "datatype",
            "name": "Integer"
          }
        }
      }
    },
    "filter(string)": {
      "id": "Wave.querynode.filter",
      "nodeType": "method",
      "name": "filter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "filter",
        "textToLower": "filter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_filter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public wave.QueryNode filter(String filterCondition)",
      "simplifiedSignature": "filter(String)",
      "datatype": {
        "id": "Wave.querynode.filter.wave.QueryNode",
        "nodeType": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Selects rows from a dataset based on a filter condition (a predicate).",
      "params": {
        "filterCondition": {
          "id": "Wave.querynode.filter.filtercondition",
          "type": "var",
          "name": "filterCondition",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "filterCondition",
            "textToLower": "filtercondition",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_filterCondition_-1:0"
          },
          "signature": "String filterCondition",
          "datatype": {
            "id": "Wave.querynode.filter.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    },
    "filter(list)": {
      "id": "Wave.querynode.filter",
      "nodeType": "method",
      "name": "filter",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "filter",
        "textToLower": "filter",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_filter_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "public",
        "textToLower": "public",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_public_-1:0"
      },
      "signature": "public wave.QueryNode filter(List <String>)",
      "simplifiedSignature": "filter(List)",
      "datatype": {
        "id": "Wave.querynode.filter.wave.QueryNode",
        "nodeType": "datatype",
        "name": "wave.QueryNode"
      },
      "description": "Selects rows from a dataset based on multiple filter conditions (predicates).",
      "params": {
        "<String>": {
          "id": "Wave.querynode.filter.<string>",
          "type": "var",
          "name": "<String>",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "<String>",
            "textToLower": "<string>",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_<String>_-1:0"
          },
          "signature": "List <String>",
          "datatype": {
            "id": "Wave.querynode.filter.list",
            "nodeType": "datatype",
            "name": "List"
          }
        }
      }
    },
    "execute(string)": {
      "id": "Wave.querynode.execute",
      "nodeType": "method",
      "name": "execute",
      "startToken": {
        "type": "declaration.entity.name.function",
        "text": "execute",
        "textToLower": "execute",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "declaration.entity.name.function_execute_-1:0"
      },
      "accessModifier": {
        "type": "keyword.modifier.access",
        "text": "global",
        "textToLower": "global",
        "isAux": false,
        "range": {
          "start": {
            "line": -1,
            "character": 0
          },
          "end": {
            "line": -1,
            "character": 0
          },
          "isEmpty": true,
          "isSingleLine": true
        },
        "id": "keyword.modifier.access_global_-1:0"
      },
      "signature": "global ConnectApi.LiteralJson execute(String streamName)",
      "simplifiedSignature": "execute(String)",
      "datatype": {
        "id": "Wave.querynode.execute.ConnectApi.LiteralJson",
        "nodeType": "datatype",
        "name": "ConnectApi.LiteralJson"
      },
      "description": "Execute the query and return rows as JSON.",
      "params": {
        "streamName": {
          "id": "Wave.querynode.execute.streamname",
          "type": "var",
          "name": "streamName",
          "startToken": {
            "type": "declaration.entity.name.variable",
            "text": "streamName",
            "textToLower": "streamname",
            "isAux": false,
            "range": {
              "start": {
                "line": -1,
                "character": 0
              },
              "end": {
                "line": -1,
                "character": 0
              },
              "isEmpty": true,
              "isSingleLine": true
            },
            "id": "declaration.entity.name.variable_streamName_-1:0"
          },
          "signature": "String streamName",
          "datatype": {
            "id": "Wave.querynode.execute.string",
            "nodeType": "datatype",
            "name": "String"
          }
        }
      }
    }
  },
  "constructors": {},
  "extendsType": "",
  "implementTypes": [],
  "implements": {}
}